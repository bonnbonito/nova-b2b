/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/aria-hidden/dist/es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/aria-hidden/dist/es2015/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hideOthers: () => (/* binding */ hideOthers),
/* harmony export */   inertOthers: () => (/* binding */ inertOthers),
/* harmony export */   supportsInert: () => (/* binding */ supportsInert),
/* harmony export */   suppressOthers: () => (/* binding */ suppressOthers)
/* harmony export */ });
var getDefaultParent = function (originalTarget) {
    if (typeof document === 'undefined') {
        return null;
    }
    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
    return sampleTarget.ownerDocument.body;
};
var counterMap = new WeakMap();
var uncontrolledNodes = new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function (node) {
    return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function (parent, targets) {
    return targets
        .map(function (target) {
        if (parent.contains(target)) {
            return target;
        }
        var correctedTarget = unwrapHost(target);
        if (correctedTarget && parent.contains(correctedTarget)) {
            return correctedTarget;
        }
        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');
        return null;
    })
        .filter(function (x) { return Boolean(x); });
};
/**
 * Marks everything except given node(or nodes) as aria-hidden
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @param {String} [controlAttribute] - html Attribute to control
 * @return {Undo} undo command
 */
var applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {
    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
    if (!markerMap[markerName]) {
        markerMap[markerName] = new WeakMap();
    }
    var markerCounter = markerMap[markerName];
    var hiddenNodes = [];
    var elementsToKeep = new Set();
    var elementsToStop = new Set(targets);
    var keep = function (el) {
        if (!el || elementsToKeep.has(el)) {
            return;
        }
        elementsToKeep.add(el);
        keep(el.parentNode);
    };
    targets.forEach(keep);
    var deep = function (parent) {
        if (!parent || elementsToStop.has(parent)) {
            return;
        }
        Array.prototype.forEach.call(parent.children, function (node) {
            if (elementsToKeep.has(node)) {
                deep(node);
            }
            else {
                var attr = node.getAttribute(controlAttribute);
                var alreadyHidden = attr !== null && attr !== 'false';
                var counterValue = (counterMap.get(node) || 0) + 1;
                var markerValue = (markerCounter.get(node) || 0) + 1;
                counterMap.set(node, counterValue);
                markerCounter.set(node, markerValue);
                hiddenNodes.push(node);
                if (counterValue === 1 && alreadyHidden) {
                    uncontrolledNodes.set(node, true);
                }
                if (markerValue === 1) {
                    node.setAttribute(markerName, 'true');
                }
                if (!alreadyHidden) {
                    node.setAttribute(controlAttribute, 'true');
                }
            }
        });
    };
    deep(parentNode);
    elementsToKeep.clear();
    lockCount++;
    return function () {
        hiddenNodes.forEach(function (node) {
            var counterValue = counterMap.get(node) - 1;
            var markerValue = markerCounter.get(node) - 1;
            counterMap.set(node, counterValue);
            markerCounter.set(node, markerValue);
            if (!counterValue) {
                if (!uncontrolledNodes.has(node)) {
                    node.removeAttribute(controlAttribute);
                }
                uncontrolledNodes.delete(node);
            }
            if (!markerValue) {
                node.removeAttribute(markerName);
            }
        });
        lockCount--;
        if (!lockCount) {
            // clear
            counterMap = new WeakMap();
            counterMap = new WeakMap();
            uncontrolledNodes = new WeakMap();
            markerMap = {};
        }
    };
};
/**
 * Marks everything except given node(or nodes) as aria-hidden
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @return {Undo} undo command
 */
var hideOthers = function (originalTarget, parentNode, markerName) {
    if (markerName === void 0) { markerName = 'data-aria-hidden'; }
    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
    var activeParentNode = parentNode || getDefaultParent(originalTarget);
    if (!activeParentNode) {
        return function () { return null; };
    }
    // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10
    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live]')));
    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');
};
/**
 * Marks everything except given node(or nodes) as inert
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @return {Undo} undo command
 */
var inertOthers = function (originalTarget, parentNode, markerName) {
    if (markerName === void 0) { markerName = 'data-inert-ed'; }
    var activeParentNode = parentNode || getDefaultParent(originalTarget);
    if (!activeParentNode) {
        return function () { return null; };
    }
    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');
};
/**
 * @returns if current browser supports inert
 */
var supportsInert = function () {
    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');
};
/**
 * Automatic function to "suppress" DOM elements - _hide_ or _inert_ in the best possible way
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @return {Undo} undo command
 */
var suppressOthers = function (originalTarget, parentNode, markerName) {
    if (markerName === void 0) { markerName = 'data-suppressed'; }
    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);
};


/***/ }),

/***/ "./src/scripts/DeleteQuote.js":
/*!************************************!*\
  !*** ./src/scripts/DeleteQuote.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DeleteQuote: () => (/* binding */ DeleteQuote)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-dialog */ "./node_modules/@radix-ui/react-dialog/dist/index.mjs");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _utils_QuoteFunctions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/QuoteFunctions */ "./src/scripts/utils/QuoteFunctions.js");





const DeleteQuote = () => {
  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [label, setLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("Yes I'm Sure");
  const [isDeleted, setIsDeleted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const handleDeleteQuote = async event => {
    event.preventDefault(); // Prevent default form submission
    setIsLoading(true);
    setLabel('Deleting...');
    // Form submission logic here
    try {
      const formData = new FormData();
      formData.append('nonce', NovaQuote.nonce);
      formData.append('quote_id', NovaQuote.current_quote_id);
      formData.append('action', 'delete_quote');
      formData.append('role', NovaQuote.user_role[0]);
      const data = await (0,_utils_QuoteFunctions__WEBPACK_IMPORTED_MODULE_2__.processQuote)(formData);
      if (data.status === 'success') {
        setLabel('Deleted');
        setIsDeleted(true);
        window.location.replace(NovaQuote.mockup_account_url);
      } else {
        alert('Error');
      }
      console.log(data);
    } catch (err) {
      // Handle errors
      console.log(err);
      setError('Failed to delete quote. Please try again.');
    } finally {
      setIsLoading(false);
    }
  };
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Root, {
    open: open,
    onOpenChange: setOpen
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Trigger, {
    asChild: true
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "border-nova-light border-solid rounded px-4 py-3 border font-title text-nova-gray uppercase text-xs bg-white inline-block hover:text-white hover:bg-red-600 w-full text-center cursor-pointer disabled:cursor-not-allowed"
  }, "DELETE QUOTE")), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Portal, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Overlay, {
    className: "bg-black/50 data-[state=open]:animate-overlayShow fixed inset-0 z-[50]"
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Content, {
    className: "data-[state=open]:animate-contentShow fixed top-[50%] left-[50%] max-h-[85vh] w-[90vw] max-w-[550px] translate-x-[-50%] translate-y-[-50%] rounded-[6px] bg-white p-[25px] shadow-[hsl(206_22%_7%_/_35%)_0px_10px_38px_-10px,_hsl(206_22%_7%_/_20%)_0px_10px_20px_-15px] focus:outline-none z-[51]"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Title, {
    className: "m-0 font-title uppercase font-medium text-lg text-center"
  }, "Delete Quote"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Description, {
    className: "mt-[10px] mb-5 text-[15px] leading-normal"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    class: "text-gray-400 dark:text-gray-500 w-11 h-11 mb-3.5 mx-auto",
    "aria-hidden": "true",
    fill: "currentColor",
    viewBox: "0 0 20 20",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    "fill-rule": "evenodd",
    d: "M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z",
    "clip-rule": "evenodd"
  })), isDeleted ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    class: "mb-4 text-gray-500 text-center"
  }, "Deleted")) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    class: "mb-4 text-gray-500 text-center"
  }, "Are you sure you want to delete this quote?"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    class: "flex justify-center items-center space-x-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Close, {
    asChild: true
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    type: "button",
    class: "py-2 px-3 border border-solid text-sm font-medium text-gray-500 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 hover:text-gray-900 focus:z-10"
  }, "No, cancel")), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    onClick: handleDeleteQuote,
    disabled: isLoading,
    class: "py-2 px-3 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-900"
  }, label)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_3__.Close, {
    asChild: true
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-nova-gray absolute top-[10px] right-[10px] inline-flex h-[25px] w-[25px] appearance-none items-center justify-center focus:shadow-[0_0_0_2px] focus:outline-none border cursor-pointer",
    "aria-label": "Close"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_1__.CloseIcon, null)))))));
};

/***/ }),

/***/ "./src/scripts/Dropdown.js":
/*!*********************************!*\
  !*** ./src/scripts/Dropdown.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Dropdown)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

function Dropdown({
  title,
  onChange,
  options,
  value,
  style,
  onlyValue
}) {
  const selectClass = value || onlyValue ? 'text-black' : 'text-[#dddddd]';
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px]"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, title), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("select", {
    style: style,
    className: `border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] ${selectClass}`,
    onChange: onChange,
    value: value
  }, !onlyValue && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
    value: ""
  }, "CHOOSE OPTION"), options));
}

/***/ }),

/***/ "./src/scripts/EditableText.js":
/*!*************************************!*\
  !*** ./src/scripts/EditableText.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ EditableText)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/react-tooltip.min.mjs");



function EditableText({
  id,
  text,
  onChange
}) {
  const [label, setLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(text);
  const [editing, setEditing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const handleOnChange = e => {
    setLabel(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {}, [label]);
  function handleOnCancel() {
    console.log('Cancelling');
    setEditing(!editing);
    setLabel(text);
  }
  const CancelIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    onClick: handleOnCancel,
    "data-tooltip-id": id,
    "data-tooltip-content": 'Cancel',
    className: "cursor-pointer"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    "stroke-width": "1.5",
    stroke: "red",
    class: "w-6 h-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    d: "M6 18L18 6M6 6l12 12"
  })));
  function handleOnSave() {
    setEditing(!editing);
    onChange(label);
  }
  const SaveIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    onClick: handleOnSave,
    "data-tooltip-id": id,
    "data-tooltip-content": 'Save',
    className: "cursor-pointer"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    "stroke-width": "1.5",
    stroke: "#008000",
    class: "w-6 h-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    d: "M4.5 12.75l6 6 9-13.5"
  })));
  const EditIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    onClick: () => setEditing(!editing),
    "data-tooltip-id": id,
    "data-tooltip-content": 'Edit Project Name'
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    className: "w-5 h-5 cursor-pointer",
    "aria-label": editing ? 'Confirm changes' : 'Edit label'
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, {
    id: id
  }));
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, editing ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "uppercase",
    type: "text",
    value: label,
    onChange: handleOnChange
  }), label.length > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SaveIcon, null), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(CancelIcon, null)) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h3", {
    className: "signage-title uppercase mb-0"
  }, text), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EditIcon, null)));
}

/***/ }),

/***/ "./src/scripts/FontsDropdown.js":
/*!**************************************!*\
  !*** ./src/scripts/FontsDropdown.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FontsDropdown)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_FontOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/FontOptions */ "./src/scripts/utils/FontOptions.js");




function FontsDropdown({
  font,
  handleSelectFont,
  fontRef,
  openFont,
  setOpenFont,
  setOpenColor
}) {
  const handleCustomFontSelection = () => {
    // TODO: Add your logic here for custom font selection
    console.log('Custom font selected');
    handleSelectFont('Custom font');
    setOpenFont(false);
  };
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: fontRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "FONT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex px-2 items-center select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${font ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenFont(prev => !prev);
      setOpenColor(false);
    },
    style: {
      fontFamily: font === 'Custom font' ? '' : font
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "truncate"
  }, font === '' ? 'CHOOSE OPTION' : font)), openFont && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm font-title",
    onClick: handleCustomFontSelection
  }, "- Custom Font"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: ""
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", {
    class: "p-2 pb-0"
  }, "Popular Fonts"), _utils_FontOptions__WEBPACK_IMPORTED_MODULE_2__.fontDefaultOptions.popular_fonts.split(',').map(popularfont => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm ${popularfont === font && 'bg-slate-200'}`,
      style: {
        fontFamily: popularfont
      },
      onClick: () => {
        handleSelectFont(popularfont);
        setOpenFont(false);
      }
    }, "- ", popularfont);
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", {
    class: "p-2 pb-0"
  }, "Fonts"), _utils_FontOptions__WEBPACK_IMPORTED_MODULE_2__.fontDefaultOptions.fonts.split(',').map(regFont => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm ${regFont === font && 'bg-slate-200'}`,
      style: {
        fontFamily: regFont
      },
      onClick: () => {
        handleSelectFont(regFont);
        setOpenFont(false);
      }
    }, "- ", regFont);
  }))));
}

/***/ }),

/***/ "./src/scripts/ModalSave.js":
/*!**********************************!*\
  !*** ./src/scripts/ModalSave.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-dialog */ "./node_modules/@radix-ui/react-dialog/dist/index.mjs");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _utils_QuoteFunctions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/QuoteFunctions */ "./src/scripts/utils/QuoteFunctions.js");
/* harmony import */ var _utils_uploadFunctions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/uploadFunctions */ "./src/scripts/utils/uploadFunctions.js");






function ModalSave({
  signage,
  action,
  btnClass,
  label,
  required,
  tempFolder,
  storage,
  isLoading,
  setIsLoading
}) {
  const [submitted, setSubmitted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [submitting, setSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const [quoteID, setQuoteID] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => NovaQuote.current_quote_title ? NovaQuote.current_quote_title : '');
  const formRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const totalUsdPrice = signage.reduce((acc, item) => acc + parseFloat(item.usdPrice), 0);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (required && required.length > 0) {
      let htmlString = '';
      required.forEach(missing => {
        if (missing.missingFields.length > 0) {
          htmlString += `<strong class="uppercase">${missing.title}</strong>\n<ul>\n`;

          // Add each missing field as a list item
          missing.missingFields.forEach(field => {
            htmlString += `    <li>${field}</li>\n`;
          });

          // Close the unordered list for this item
          htmlString += '</ul>\n';
        }
      });
      if (htmlString) {
        setError({
          type: 'missing',
          message: htmlString
        });
      } else {
        setError('');
      }
    } else {
      if (NovaQuote.user_role[0] === 'pending' && (action === 'update-processing' || action === 'processing')) {
        setError({
          type: 'not_approved',
          message: 'Error: Your account is not yet approved. You cannot submit a quotation yet.'
        });
      } else {
        setError(''); // No error
      }
    }
  }, [signage]);
  const loadingStatus = () => {
    if (isLoading) {
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_1__.LoadingIcon, {
        text: "Saving..."
      });
    } else {
      return label;
    }
  };
  const handleTitleChange = e => {
    setTitle(e.target.value);
  };
  const toProcessingMessage = () => {
    return `
    <div class="mb-4">
      <p class="font-bold mb-4">QUOTE REQUEST RECEIVED.</p>
	  <p class="font-bold mb-0">Process:</p>
	  <ol class="mb-4">
		<li>We'll review your order before finalizing the price.</li>
		<li>For updates, please check your email or visit QUOTED (in MOCKUPS) within 1 business day.</li>
		<li>After getting a quote, add the product to your cart and go to the CART page.</li>
		<li>Next, proceed to CHECKOUT to pay.</li>
	  </ol>
	  <p class="font-bold mb-0">What's next?</p>
	  <strong>Go to Mockups:</strong> View all your sign mockups.<br>
	  <strong>Create New Mockup:</strong> Create a new design.</p>
    </div>
  `;
  };
  const updateMessageHtml = () => {
    return `
    <div class="mb-4">
      <p class="font-bold mb-4">UPDATED ORDER QUOTE DRAFT</p>
	  <p class="mb-4">You can still edit this project before sending it to us for the final quotation. Find your saved draft in the <strong>MOCKUPS</strong> section under <strong>DRAFTS</strong>.</p>
	  <p class="font-bold mb-0">What's next?</p>
	  <p><strong>Go to Mockups:</strong> View all your sign mockups.<br>
	  <strong>Create New Mockup:</strong> Create a new design.<br>
	  <strong>Continue Editing:</strong> Edit current mockup.</p>
    </div>
  `;
  };
  const saveDraftMessageHtml = () => {
    return `
    <div class="mb-4">
      <p class="font-bold mb-4">PROJECT IS SAVED AS A DRAFT</p>
	  <p class="mb-4">You can edit your saved draft anytime before submitting a quote. Access your saved work in <strong><a href="${NovaQuote.mockup_drafts_url}">DRAFTS</a></strong> (in MOCKUPS).</p>
	  <p class="font-bold mb-0">What's next?</p>
	  <p><strong>Go to Mockups:</strong> View all your sign mockups.<br>
	  <strong>Create New Mockup:</strong> Create a new design.<br>
	  <strong>Continue Editing:</strong> Edit current mockup.</p>

    </div>
  `;
  };
  const handleFormSubmit = async event => {
    event.preventDefault(); // Prevent default form submission
    setIsLoading(true);
    setSubmitting(true);

    // Form submission logic here
    try {
      const formData = new FormData();
      formData.append('nonce', NovaQuote.nonce);
      formData.append('title', title);
      formData.append('product', NovaQuote.product);
      formData.append('action', 'save_quote');
      formData.append('user_id', NovaQuote.user_id);
      formData.append('signage', JSON.stringify(signage));
      formData.append('total', totalUsdPrice.toFixed(2));
      formData.append('quote_status', 'draft');
      formData.append('currency', wcumcs_vars_data.currency);
      if (action === 'update-processing' || action === 'processing') {
        formData.append('quote_status', 'processing');
      }
      if (action === 'update' || action === 'update-processing') {
        formData.append('quote_id', NovaQuote.current_quote_id);
        formData.append('editing', 'edit');
      }
      const status = await (0,_utils_QuoteFunctions__WEBPACK_IMPORTED_MODULE_2__.processQuote)(formData);
      if (status.status === 'success') {
        localStorage.removeItem(storage);
        localStorage.removeItem(window.location.href + NovaQuote.user_id + '-folder');
        if (NovaQuote.is_editting.length === 0) {
          console.log('renaming...');
          const folderPath = `/NOVA-CRM/${NovaQuote.business_id}/${tempFolder}`;
          const newPath = `/NOVA-CRM/${NovaQuote.business_id}/Q-${status.generated_id}`;
          try {
            const rename = await (0,_utils_uploadFunctions__WEBPACK_IMPORTED_MODULE_3__.renameFolder)(folderPath, newPath);
            if (rename) {
              console.log('updating quote field...');
              const prevSignage = JSON.stringify(signage);
              const updatedSignage = prevSignage.replace(new RegExp(folderPath, 'g'), newPath);
              const newData = new FormData();
              newData.append('nonce', NovaQuote.nonce);
              newData.append('updated', updatedSignage);
              newData.append('quote_id', status.generated_id); // Make sure to use newData here
              newData.append('action', 'update_dropbox_path');
              const updating = await (0,_utils_QuoteFunctions__WEBPACK_IMPORTED_MODULE_2__.processQuote)(newData);
              if (updating.status === 'success') {
                console.log('Quote updated successfully');
              } else {
                console.error('Error updating quote:', updating);
                alert('Error');
              }
            } else {
              console.error('Renaming folder failed');
            }
          } catch (error) {
            console.error('An error occurred:', error);
            alert('An error occurred, please try again.');
          }
        }
        try {
          const projectFolder = `/NOVA-CRM/${NovaQuote.business_id}/Q-${status.generated_id}/FromClient`;
          const createFolder = await (0,_utils_uploadFunctions__WEBPACK_IMPORTED_MODULE_3__.checkAndCreateFolder)(projectFolder);
          if (createFolder) {
            console.log('Folder created');
          }
        } catch (error) {
          console.error('An error occurred:', error);
        }
        setQuoteID(status.generated_id);
        console.log(status);
        setSubmitted(true);
      } else {
        alert('Error');
      }
    } catch (err) {
      // Handle errors
      setError({
        type: 'not_saved',
        message: 'Failed to save quote. Please try again.'
      });
      console.log(err);
    } finally {
      setIsLoading(false);
    }
  };
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Root, {
    open: submitting ? true : open,
    onOpenChange: setOpen
  }, isLoading ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: btnClass
  }, isLoading ? 'Please wait...' : label) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Trigger, {
    asChild: true
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: btnClass
  }, isLoading ? 'Please wait...' : label)), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Portal, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Overlay, {
    className: "bg-black/50 data-[state=open]:animate-overlayShow fixed inset-0 z-[50]"
  }), !error ? !submitted ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Content, {
    className: "data-[state=open]:animate-contentShow fixed top-[50%] left-[50%] max-h-[85vh] w-[90vw] max-w-[550px] translate-x-[-50%] translate-y-[-50%] rounded-[6px] bg-white p-[25px] shadow-[hsl(206_22%_7%_/_35%)_0px_10px_38px_-10px,_hsl(206_22%_7%_/_20%)_0px_10px_20px_-15px] focus:outline-none z-[51] overflow-auto"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Title, {
    className: "m-0 font-title uppercase font-medium text-2xl"
  }, action === 'processing' || action === 'update-processing' ? 'Submit Your Quote Request' : 'Save Your Draft'), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Description, {
    className: "mt-[10px] mb-5 text-[15px] leading-normal"
  }, "Please add a PROJECT NAME."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("form", {
    ref: formRef,
    onSubmit: handleFormSubmit
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "nline-flex h-[45px] w-full flex-1 items-center justify-center rounded-[4px] px-[10px] text-[15px] leading-none shadow-[0_0_0_1px] outline-none focus:shadow-[0_0_0_2px] font-title",
    name: "quoteTitle",
    id: "quoteTitle",
    ref: inputRef,
    required: true,
    value: title,
    onChange: handleTitleChange,
    disabled: isLoading
  }), action === 'processing' || action === 'update-processing' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "text-sm mt-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("strong", null, "NOTE:"), " Our team will finalize the pricing for this order once you click Submit. You CANNOT EDIT this project afterwards.") : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "text-sm mt-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("strong", null, "NOTE:"), " You can still edit this product after you click", ' ', action === 'update' ? 'UPDATE QUOTE' : 'SAVE TO DRAFT', ". Go to MOCKUPS and select DRAFTS."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-[25px] flex justify-end"
  }, title.length > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "block h-[35px] items-center justify-center rounded-[4px] px-[15px] font-medium leading-none focus:shadow-[0_0_0_2px] focus:outline-none background-nova-primary text-white font-title uppercase border bg-black",
    disabled: isLoading
  }, loadingStatus()))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Close, {
    asChild: true
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-nova-gray absolute top-[10px] right-[10px] inline-flex h-[25px] w-[25px] appearance-none items-center justify-center focus:shadow-[0_0_0_2px] focus:outline-none border cursor-pointer",
    "aria-label": "Close"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_1__.CloseIcon, null)))) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Content, {
    className: "data-[state=open]:animate-contentShow fixed top-[50%] left-[50%] max-h-[85vh] w-[90vw] max-w-[550px] translate-x-[-50%] translate-y-[-50%] rounded-[6px] bg-white p-[25px] shadow-[hsl(206_22%_7%_/_35%)_0px_10px_38px_-10px,_hsl(206_22%_7%_/_20%)_0px_10px_20px_-15px] focus:outline-none z-[51] overflow-auto"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Description, {
    className: "mt-[10px] mb-5 text-[15px] leading-normal"
  }, (action === 'processing' || action === 'update-processing') && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    dangerouslySetInnerHTML: {
      __html: toProcessingMessage()
    }
  }), action === 'draft' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    dangerouslySetInnerHTML: {
      __html: saveDraftMessageHtml()
    }
  }), action === 'update' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    dangerouslySetInnerHTML: {
      __html: updateMessageHtml()
    }
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "gap-2 block justify-center sm:flex"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: `${NovaQuote.mockup_account_url}`,
    className: "block mb-4 text-center text-sm px-3 py-2 text-white no-underline bg-nova-primary rounded hover:bg-nova-secondary"
  }, "Go to Mockups"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: NovaQuote.quote_url,
    className: "block mb-4 text-center text-sm px-3 py-2 text-white no-underline bg-nova-primary rounded hover:bg-nova-secondary"
  }, "Create New Mockup"), (action === 'draft' || action === 'update') && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: NovaQuote.quote_url + '?qedit=1&qid=' + quoteID,
    className: "block mb-4 text-center text-sm px-3 py-2 text-white no-underline bg-nova-primary rounded hover:bg-nova-secondary"
  }, "Continue Editing")))) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Content, {
    className: "data-[state=open]:animate-contentShow fixed top-[50%] left-[50%] max-h-[85vh] w-[90vw] max-w-[550px] translate-x-[-50%] translate-y-[-50%] rounded-[6px] bg-white p-[25px] shadow-[hsl(206_22%_7%_/_35%)_0px_10px_38px_-10px,_hsl(206_22%_7%_/_20%)_0px_10px_20px_-15px] focus:outline-none z-[51] overflow-auto"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Description, {
    className: "mt-[10px] mb-5 text-[15px] leading-normal"
  }, error.type === 'missing' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", {
    className: "font-title mb-4 uppercase"
  }, "Missing Values:"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    dangerouslySetInnerHTML: {
      __html: error.message
    }
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_4__.Close, {
    asChild: true
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-nova-gray absolute top-[10px] right-[10px] inline-flex h-[25px] w-[25px] appearance-none items-center justify-center focus:shadow-[0_0_0_2px] focus:outline-none border cursor-pointer",
    "aria-label": "Close"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_1__.CloseIcon, null))))));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModalSave);

/***/ }),

/***/ "./src/scripts/Prices.js":
/*!*******************************!*\
  !*** ./src/scripts/Prices.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Prices)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


function Prices({
  item
}) {
  const currency = wcumcs_vars_data.currency;
  const price = currency === 'USD' ? item.usdPrice : item.cadPrice;
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "block"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between py-2 font-title uppercase md:tracking-[1.6px]"
  }, item.title, price > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, currency, "$", Number(price).toLocaleString())), item.letters && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "TEXT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.letters)), item.font && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FONT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.font)), item.fontFileUrl && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "CUSTOM FONT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: item.fontFileUrl,
    target: "_blank"
  }, item.fontFileName))), item.metal && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.metal)), item.thickness && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "THICKNESS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm uppercase"
  }, item.thickness.thickness)), item.metalDepth && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL DEPTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm uppercase"
  }, item.metalDepth.thickness)), item.acrylicThickness && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "ACRYLIC THICKNESS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm uppercase"
  }, item.acrylicThickness.thickness)), item.metalThickness && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL THICKNESS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm uppercase"
  }, item.metalThickness.thickness)), item.depth?.depth && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL DEPTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm uppercase"
  }, item.depth.depth)), item.letterHeight && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "LETTER HEIGHT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.letterHeight, "\"")), item.backLitFinishing && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.backLitFinishing)), item.backLitMetalFinish && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL FINISH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.backLitMetalFinish)), item.faceReturnColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FACE & RETURN COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.faceReturnColor?.name)), item.width && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "LOGO WIDTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.width, "\"")), item.height && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "LOGO HEIGHT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.height, "\"")), item.metalFinish && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.metalFinish)), item.stainLessMetalFinish && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL FINISH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.stainLessMetalFinish)), item.stainlessSteelPolished && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "STEEL POLISH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.stainlessSteelPolished)), item.layers && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "LAYERS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm uppercase"
  }, item.layers)), item.metalLaminate && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL LAMINATE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.metalLaminate)), item.pvcBaseColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "PVC BASE COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.pvcBaseColor?.name)), item.acrylicBase?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "ACRYLIC BASE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.acrylicBase.name)), item.printPreference && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "PRINT PREFERENCE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.printPreference)), item.color?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.color?.name)), item.returnColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "RETURN COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.returnColor?.name)), item.baseColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "BASE COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.baseColor)), item.customColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "CUSTOM COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.customColor)), item.finishing && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.finishing)), item.metalColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.metalColor?.name)), item.metalCustomColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "CUSTOM COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.metalCustomColor)), item.ledLightColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "LED LIGHT COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.ledLightColor)), item.acrylicReveal && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "ACRYLIC REVEAL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.acrylicReveal)), item.frontAcrylicCover && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FRONT ACRYLIC COVER"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.frontAcrylicCover)), item.vinylWhite?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "3M VINYL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.vinylWhite?.name, " - [", item.vinylWhite?.code, "]")), item.waterproof && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "ENVIRONMENT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.waterproof)), item.mounting && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "MOUNTING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.mounting)), item.metalFinishing && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "METAL FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.metalFinishing)), item.studLength && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "STUD LENGTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.studLength)), item.spacerStandoffDistance && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "STANDOFF SPACE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.spacerStandoffDistance)), item.installation && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "INSTALLATION"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.installation)), item.pieces && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "PIECES"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.pieces)), item.sets && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "QUANTITY"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm"
  }, item.sets)), item.comments && item.comments.trim() && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.comments)), item.fileUrl && !item.files && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FILE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: item.fileUrl,
    target: "_blank"
  }, item.fileName))), item.fileNames?.length > 0 && item.fileUrls?.length > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-2 gap-4 py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "FILES"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.fileUrls.map((fileUrl, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: fileUrl,
    target: "_blank"
  }, item.fileNames[index]), index < item.fileUrls?.length - 1 ? ', ' : '')))), item.description && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "block py-[2px] mb-1"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left font-title md:tracking-[1.4px] text-sm"
  }, "DESCRIPTION"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-sm break-words"
  }, item.description)));
}

/***/ }),

/***/ "./src/scripts/PricesView.js":
/*!***********************************!*\
  !*** ./src/scripts/PricesView.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PricesView)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


function PricesView({
  item
}) {
  const currency = wcumcs_vars_data.currency;
  const price = currency === 'USD' ? item.usdPrice : item.cadPrice;
  const style = {
    margin: '0',
    fontSize: '50px',
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    fontFamily: item.font,
    color: item.color?.color || '#000000',
    textShadow: '0px 0px 1px rgba(0, 0, 0, 1)',
    wordBreak: 'break-all',
    lineHeight: '1.6',
    padding: '0 10px 20px 10px'
  };
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    if (!headlineRef.current) {
      return;
    }
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '50px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [item.type]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "pb-8 mb-8 border-b-nova-light border-b"
  }, item.type === 'letters' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md exclude-from-pdf max-w-[834px]"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    style: style,
    ref: headlineRef
  }, item.letters))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#5E5E5E] mb-8 mt-1 pl-2"
  }, "Preview Image. Actual product color may differ.")), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "block"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between py-2 font-title uppercase"
  }, item.title, ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, price > 0 && `${currency}$${parseFloat(price).toFixed(2).toLocaleString()}`)), item.letters && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "TEXT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.letters)), item.font && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FONT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.font)), item.fontFileUrl && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "CUSTOM FONT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: item.fontFileUrl,
    target: "_blank"
  }, item.fontFileName))), item.metal && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.metal)), item.metalThickness?.thickness && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL THICKNESS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] uppercase"
  }, item.metalThickness.thickness)), item.metalDepth?.thickness && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL DEPTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] uppercase"
  }, item.metalDepth.thickness)), item.thickness?.thickness && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "THICKNESS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] uppercase"
  }, item.thickness.thickness)), item.acrylicThickness?.thickness && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "ACRYLIC THICKNESS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] uppercase"
  }, item.acrylicThickness.thickness)), item.depth?.depth && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL DEPTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] uppercase"
  }, item.depth.depth)), item.width && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "LOGO WIDTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.width, "\"")), item.height && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "LOGO HEIGHT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.height, "\"")), item.layers && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "LAYERS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.layers)), item.letterHeight && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "LETTER HEIGHT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.letterHeight, "\"")), item.backLitFinishing && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.backLitFinishing)), item.backLitMetalFinish && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL FINISH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.backLitMetalFinish)), item.faceReturnColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FACE & RETURN COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.faceReturnColor?.name)), item.printPreference && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "PRINT PREFERENCE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.printPreference)), item.metalLaminate && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL LAMINATE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.metalLaminate)), item.pvcBaseColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "PVC BASE COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.pvcBaseColor?.name)), item.metalFinish?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL FINISH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.metalFinish?.name)), item.acrylicBase?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "ACRYLIC BASE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.acrylicBase.name)), typeof item.metalFinish !== 'object' && item.metalFinish && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.metalFinish)), item.color?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.color?.name)), item.returnColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "RETURN COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.returnColor?.name)), item.baseColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "BASE COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.baseColor)), item.customColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "CUSTOM COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.customColor)), item.ledLightColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "LED LIGHT COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.ledLightColor)), item.acrylicReveal && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "ACRYLIC REVEAL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.acrylicReveal)), item.frontAcrylicCover && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FRONT ACRYLIC COVER"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.frontAcrylicCover)), item.vinylWhite?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "3M VINYL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.vinylWhite?.name, " - [", item.vinylWhite?.code, "]")), item.finishing && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.finishing)), item.stainLessMetalFinish && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL FINISH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.stainLessMetalFinish)), item.metalColor?.name && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.metalColor?.name)), item.metalCustomColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "CUSTOM COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.metalCustomColor)), item.waterproof && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "ENVIRONMENT"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.waterproof)), item.mounting && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "MOUNTING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.mounting)), item.studLength && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "STUD LENGTH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.studLength)), item.spacerStandoffDistance && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "STANDOFF SPACE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.spacerStandoffDistance)), item.metalFinishing && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "METAL FINISHING"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.metalFinishing)), item.stainlessSteelPolished && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "STAINLESS STEEL POLISH"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.stainlessSteelPolished)), item.installation && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "INSTALLATION"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.installation)), item.pieces && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "PIECES/CUTOUTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.pieces)), item.sets && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "QUANTITY"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px]"
  }, item.sets)), item.comments && item.comments.trim() && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.comments)), item.description && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "DESCRIPTION"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.description)), item.fileUrl && item.fileUrls?.length == 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FILE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: item.fileUrl,
    target: "_blank"
  }, item.fileName))), item.fileNames?.length > 0 && item.fileUrls?.length > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-[160px_1fr] py-[2px] items-center gap-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-xs font-title"
  }, "FILES"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-left text-[14px] break-words"
  }, item.fileUrls.map((fileUrl, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: fileUrl,
    target: "_blank"
  }, item.fileNames[index]), index < item.fileUrls?.length - 1 ? ', ' : ''))))));
}

/***/ }),

/***/ "./src/scripts/QuoteView.js":
/*!**********************************!*\
  !*** ./src/scripts/QuoteView.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ QuoteView)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _DeleteQuote__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DeleteQuote */ "./src/scripts/DeleteQuote.js");
/* harmony import */ var _PricesView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PricesView */ "./src/scripts/PricesView.js");




const decodeHTML = html => {
  let txt = document.createElement('textarea');
  txt.innerHTML = html;
  return txt.value;
};
function QuoteView() {
  const NovaAccount = NovaMyAccount.quote;
  const taxRate = NovaMyAccount.tax_rate;
  const currency = wcumcs_vars_data.currency;
  const signage = NovaMyAccount.quote ? JSON.parse(NovaAccount.data) : null;
  const quoteRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [isDownloading, setIsDownloading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [isHovered, setIsHovered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [addedToCart, setAddedToCart] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(NovaQuote.is_added_to_cart);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!NovaAccount || Object.keys(NovaAccount).length === 0) {
      window.location.href = NovaQuote.mockup_account_url;
    }
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const addToCart = () => {
    if (addedToCart) return;
    setIsLoading(true);
    const formData = new FormData();
    formData.append('action', 'to_checkout');
    formData.append('quote', NovaAccount.ID);
    formData.append('nonce', NovaMyAccount.nonce);
    formData.append('role', NovaQuote.user_role[0]);
    formData.append('nova_product', NovaQuote.nova_quote_product.ID);
    formData.append('product', NovaAccount.product_name ? decodeHTML(NovaAccount.product_name) : 'Custom Project');
    formData.append('product_id', NovaQuote.generated_product_id);
    formData.append('product_line', NovaAccount.product_line?.ID);
    fetch(NovaMyAccount.ajax_url, {
      method: 'POST',
      credentials: 'same-origin',
      headers: {
        'Cache-Control': 'no-cache'
      },
      body: formData
    }).then(response => response.json()).then(data => {
      console.log(data);
      if (data.code == 2) {
        const cartTotal = document.querySelector('.header-cart-total');
        cartTotal.innerText = parseInt(cartTotal.innerText) + 1;
        setAddedToCart(true);
        let event = new Event('added_to_cart');
        //document.body.dispatchEvent(event);
        setIsLoading(false);
        alert('Added to cart');
      } else {
        alert(data.error);
        location.reload(true);
      }
    }).catch(error => console.error('Error:', error));
  };
  const quotePrice = NovaAccount?.final_price ? parseFloat(NovaAccount.final_price) : 0;
  const exchangeRate = 1.3;
  const finalPrice = currency === 'USD' ? quotePrice : quotePrice * exchangeRate;
  const flatRate = currency === 'USD' ? 14.75 : 14.75 * exchangeRate;
  const standardRate = parseFloat((finalPrice * 0.075).toFixed(2));
  const estimatedShipping = quotePrice > 0 ? Math.max(flatRate, standardRate) : 0;
  const tax = taxRate ? parseFloat((taxRate.tax_rate / 100).toFixed(2)) : 0;
  const taxCompute = parseFloat((finalPrice * tax).toFixed(2));
  const estimatedTotal = parseFloat((finalPrice + estimatedShipping + taxCompute).toFixed(2));
  const downloadFile = NovaAccount?.ID ? `/${NovaAccount.business_id}-INV-Q-${NovaAccount.ID}-${currency}.pdf` : null;
  return NovaAccount && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex pb-4 mb-4 border-b justify-between"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: NovaQuote.mockup_account_url,
    className: "border-nova-light rounded px-4 py-3 border font-title text-nova-gray uppercase text-xs bg-white inline-flex items-center hover:text-black hover:bg-nova-light"
  }, "\u2190 Back To Mockups"), NovaAccount?.quote_status?.value === 'ready' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: downloadFile && NovaQuote.invoice_url + downloadFile,
    className: `rounded px-4 py-3 border ${!isDownloading ? 'border-nova-light font-title text-nova-primary bg-white' : 'border-gray-300 text-gray-500 bg-gray-100'} text-xs inline-block hover:text-white hover:bg-nova-primary w-[160px] text-center cursor-pointer`,
    disabled: isDownloading,
    target: "_blank"
  }, isDownloading ? 'Downloading...' : 'DOWNLOAD PDF')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-1 md:grid-cols-[1fr_160px] gap-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    id: "quoteDiv",
    ref: quoteRef,
    className: "pb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center mb-4 "
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "m-0 text-nova-primary"
  }, "STATUS:", ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm font-normal font-thin"
  }, NovaAccount?.quote_status?.label))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mb-10 block"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h4", {
    className: "uppercase"
  }, "QUOTE ID: Q-", NovaAccount?.ID.padStart(4, '0'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "leading-[2] m-0"
  }, "INITIAL QUOTE REQUESTED ON:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm"
  }, NovaAccount?.published)), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "leading-[2] m-0"
  }, "LAST QUOTE SAVED:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm"
  }, NovaAccount?.updated_date)), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "leading-[2] m-0"
  }, "QUOTE NAME:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm"
  }, decodeHTML(NovaAccount?.title))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "leading-[2] m-0"
  }, "BUSINESS ID:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm"
  }, NovaAccount?.business_id ? NovaAccount?.business_id : 'None')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "leading-[2] m-0"
  }, "COMPANY NAME:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm"
  }, NovaAccount?.company_name ? NovaAccount?.company_name : 'None')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "leading-[2] m-0"
  }, "MATERIAL:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm"
  }, NovaAccount?.material ? NovaAccount?.material : 'None')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2 items-center mb-8 pb-8 border-b-nova-light border-b"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h6", {
    className: "leading-[2] m-0"
  }, "PRODUCT:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "text-sm"
  }, NovaAccount?.product_name ? decodeHTML(NovaAccount?.product_name) : 'None')), signage?.map(item => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_PricesView__WEBPACK_IMPORTED_MODULE_2__["default"], {
    id: item.id,
    item: item
  })), NovaAccount?.note && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "block mb-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", null, "Note:"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    id: "novaQuoteNote",
    className: "nova-quote-note block text-sm",
    dangerouslySetInnerHTML: {
      __html: NovaAccount?.note
    }
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between gap-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", null, `${NovaAccount?.quote_status?.value === 'ready' ? 'SUBTOTAL' : 'ESTIMATED SUBTOTAL'}`, ":"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", null, finalPrice > 0 ? `${currency}$${Number(finalPrice.toFixed(2)).toLocaleString()}` : 'TBD')), taxRate && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between gap-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", null, taxRate.tax_rate_name), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", null, taxCompute > 0 ? `${currency}$${Number(taxCompute.toFixed(2)).toLocaleString()}` : 'TBD')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between gap-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", {
    className: "flex gap-2"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    className: "w-6 h-6 cursor-pointer select-none",
    onClick: () => setIsHovered(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z"
  })), "PACKAGING & SHIPPING:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h5", null, estimatedShipping > 0 ? `${currency}$${Number(estimatedShipping.toFixed(2)).toLocaleString()}` : 'TBD')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `text-sm mb-2 ${isHovered ? 'opacity-100' : 'opacity-0'}`
  }, "The shipping cost depends on the address in your account. You can change the shipping type and shipping address during checkout."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between gap-4 border-b pb-14 mt-8"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h4", null, "ESTIMATED TOTAL:"), ' ', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h4", null, estimatedTotal > 0 ? `${currency}$${Number(parseFloat(estimatedTotal).toFixed(2)).toLocaleString()}` : 'TBD')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "mt-4 text-[10px] text-[#5E5E5E]"
  }, "Freight charges may vary based on factors such as shipping destination, package size, and delivery speed.\xA0")), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, NovaAccount?.quote_status.value === 'ready' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `rounded mb-3 px-4 py-3 border border-nova-light font-title text-white  text-xs inline-block hover:text-white  w-full text-center uppercase ${addedToCart ? 'bg-gray-400 cursor-not-allowed' : 'bg-nova-primary hover:bg-nova-secondary cursor-pointer'}`,
    disabled: isLoading,
    onClick: addToCart
  }, isLoading ? 'Adding To Cart...' : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "tracking-[1.6px]"
  }, addedToCart ? 'ADDED TO CART' : 'ADD TO CART')), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_DeleteQuote__WEBPACK_IMPORTED_MODULE_1__.DeleteQuote, null))));
}

/***/ }),

/***/ "./src/scripts/Sidebar.js":
/*!********************************!*\
  !*** ./src/scripts/Sidebar.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Sidebar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ModalSave__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ModalSave */ "./src/scripts/ModalSave.js");
/* harmony import */ var _Prices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Prices */ "./src/scripts/Prices.js");




const currency = wcumcs_vars_data.currency;
function Sidebar({
  signage,
  required,
  tempFolder,
  storage,
  isLoading,
  setIsLoading
}) {
  const taxRateObj = NovaMyAccount.tax_rate;
  //const tax = taxRateObj ? parseFloat(taxRateObj.tax_rate / 100) : 0;
  const tax = 0;
  const taxRateName = taxRateObj ? taxRateObj.tax_rate_name : 'Tax';
  const totalUsdPrice = signage.reduce((acc, item) => acc + parseFloat(item.usdPrice), 0);
  const totalCadPrice = signage.reduce((acc, item) => acc + parseFloat(item.cadPrice), 0);
  const totalPrice = currency === 'USD' ? totalUsdPrice : totalCadPrice;
  const exchangeRate = 1.3;
  const flatRate = currency === 'USD' ? 14.75 : 14.75 * exchangeRate;
  const standardRate = totalPrice > 0 ? parseFloat(totalPrice * 0.075) : 0;
  const estimatedShipping = totalPrice > 0 ? parseFloat(Math.max(flatRate, standardRate)) : 0;

  //const taxCompute = parseFloat(totalPrice * tax);
  const taxCompute = 0;
  const estimateTotalPrice = totalPrice + estimatedShipping + taxCompute;
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-1/4 w-full mt-8 md:mt-0"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "rounded-md border border-gray-200 p-4 sticky top-36"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full max-h-[calc(100vh-300px)] overflow-y-auto"
  }, signage.map(item => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Prices__WEBPACK_IMPORTED_MODULE_2__["default"], {
    id: item.id,
    item: item
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", {
    className: "mt-5"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "block mb-2"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between pt-2 font-title uppercase md:tracking-[1.6px]"
  }, "SUBTOTAL", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, currency, "$", Number(totalPrice.toFixed(2)).toLocaleString())), Number(totalPrice) > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between font-title uppercase md:tracking-[1.6px]"
  }, "SHIPPING", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, currency, "$", Number(estimatedShipping.toFixed(2)).toLocaleString())), tax > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between font-title uppercase md:tracking-[1.6px]"
  }, taxRateName, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, currency, "$", Number(taxCompute.toFixed(2)).toLocaleString()))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between mt-5 mb-3"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h4", {
    className: "text-2xl"
  }, "TOTAL:"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h4", {
    className: "text-2xl"
  }, currency, "$", Number(estimateTotalPrice.toFixed(2)).toLocaleString())), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-[11px] mb-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("ul", null, tax === 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", null, "Tax not included"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", null, "The final quote will be ready in 24 business hours."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", null, "Extra freight charges may apply for connected fonts."))), signage.length > 0 && NovaQuote.quote_status?.value !== 'processing' && NovaQuote.quote_status?.value !== 'ready' && NovaQuote.quote_status?.value !== 'archived' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, NovaQuote.is_editting === '1' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, NovaQuote.user_role[0] !== 'pending' && NovaQuote.not_author_but_admin === 'no' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_ModalSave__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading,
    required: required,
    action: "update-processing",
    label: "Submit Quote",
    btnClass: "mb-5 font-title rounded-md text-white w-full text-center bg-[#f22e00] text-sm h-[49px] hover:bg-[#ff5e3d]"
  }) : '', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_ModalSave__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading,
    required: required,
    action: "update",
    label: "Update Quote",
    btnClass: "mb-5 font-title border border-nova-light rounded-md text-nova-gray w-full text-center bg-white text-sm h-[49px] hover:bg-nova-light hover:text-white shadow-[0_0_0_1px_rgba(0,0,0,0.3)]"
  })) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, NovaQuote.user_role[0] !== 'pending' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_ModalSave__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading,
    required: required,
    action: "processing",
    label: "Submit Quote",
    btnClass: "mb-5 font-title rounded-md text-white w-full text-center bg-[#f22e00] text-sm h-[49px] hover:bg-[#ff5e3d]"
  }) : '', (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_ModalSave__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading,
    required: required,
    action: "draft",
    label: "Save to Draft",
    btnClass: "mb-5 font-title border border-nova-light rounded-md text-nova-gray w-full text-center bg-white text-sm h-[49px] hover:bg-nova-light hover:text-white shadow-[0_0_0_1px_rgba(0,0,0,0.3)]"
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-sm mb-4"
  }, "Quote & Draft Validity: 30 days")));
}

/***/ }),

/***/ "./src/scripts/SidebarNoPrice.js":
/*!***************************************!*\
  !*** ./src/scripts/SidebarNoPrice.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SidebarNoPrice)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ModalSave__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ModalSave */ "./src/scripts/ModalSave.js");
/* harmony import */ var _Prices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Prices */ "./src/scripts/Prices.js");




function SidebarNoPrice({
  signage,
  required,
  tempFolder,
  storage,
  isLoading,
  setIsLoading
}) {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-1/4 w-full mt-8 md:mt-0"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "rounded-md border border-gray-200 p-4 sticky top-36"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full max-h-[calc(100vh-300px)] overflow-y-auto"
  }, signage.map(item => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Prices__WEBPACK_IMPORTED_MODULE_2__["default"], {
    id: item.id,
    item: item
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", {
    className: "mt-5"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "block mb-2"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between pt-2 font-title uppercase md:tracking-[1.6px]"
  }, "SUBTOTAL", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, "TBD"))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-between my-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h4", {
    className: "text-2xl"
  }, "TOTAL:"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("h4", {
    className: "text-2xl"
  }, "TBD")), signage.length > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_ModalSave__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: required,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading,
    action: "processing",
    label: "Request Quote",
    btnClass: "mb-5 font-title rounded-md text-white w-full text-center bg-[#f22e00] text-sm h-[49px] hover:bg-[#ff5e3d]"
  })));
}

/***/ }),

/***/ "./src/scripts/Signage.js":
/*!********************************!*\
  !*** ./src/scripts/Signage.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Signage)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/react-tooltip.min.mjs");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _EditableText__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EditableText */ "./src/scripts/EditableText.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./svg/Icons */ "./src/scripts/svg/Icons.js");



 // Make sure to import uuid


function Signage({
  item,
  index,
  signage,
  setSignage,
  children,
  setMissing,
  storage
}) {
  const [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  const [itemTitle, setItemTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.title);
  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function recountSignageTitles(updatedSignage) {
    const count = {}; // Object to keep track of the count of each type
    return updatedSignage.map(sign => {
      const currentCount = (count[sign.type] || 0) + 1;
      count[sign.type] = currentCount;
      return {
        ...sign
      };
    });
  }
  function removeSignage(itemToRemove) {
    setSignage(currentSignage => {
      const updatedSignage = currentSignage.filter(sign => sign.id !== itemToRemove.id);
      return recountSignageTitles(updatedSignage);
    });
    setMissing(current => {
      const updatedMissing = current.filter(sign => sign.id !== itemToRemove.id);
      return updatedMissing;
    });
  }
  function duplicateSignage(item, index) {
    const duplicated = {
      ...item,
      id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__["default"])() + '-' + 'asdfadsf',
      filePaths: [],
      fileNames: [],
      fileUrls: [],
      files: [],
      fontFile: '',
      fontFileName: '',
      fontFilePath: '',
      fontFileUrl: ''
    };
    console.log(`Duplicate`, duplicated);
    setSignage(current => {
      const updated = [...current.slice(0, index + 1), duplicated, ...current.slice(index + 1)];
      return recountSignageTitles(updated);
    });
  }
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          title: itemTitle
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const clearStorage = e => {
    e.preventDefault();
    setLoading(true);
    localStorage.removeItem(storage);
    window.location.href = window.location.pathname;
  };
  const updateMissingTitle = () => {
    setMissing(prevMissing => {
      const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
      if (existingIndex !== -1) {
        const updatedMissing = [...prevMissing];
        updatedMissing[existingIndex] = {
          ...updatedMissing[existingIndex],
          title: itemTitle
        };
        return updatedMissing;
      }
      return prevMissing;
    });
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    updateMissingTitle();
  }, [itemTitle]);
  function handleOnChangeTitle(value) {
    return setItemTitle(value);
  }
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "rounded-md border border-gray-200 p-4 mb-8"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex justify-between ${open ? 'mb-4' : 'mb-0'}`
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_EditableText__WEBPACK_IMPORTED_MODULE_2__["default"], {
    id: item.id,
    text: item.title,
    onChange: handleOnChangeTitle
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, {
    id: item.id
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "cursor-pointer",
    onClick: clearStorage,
    "data-tooltip-id": `${item.id}`,
    "data-tooltip-content": "Create from scratch"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.ClearIcon, {
    loading: loading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "cursor-pointer",
    onClick: () => setOpen(!open),
    "data-tooltip-id": `${item.id}`,
    "data-tooltip-content": open ? 'Collapse' : 'Expand'
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.CollapseIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "cursor-pointer",
    onClick: () => duplicateSignage(item, index),
    "data-tooltip-id": `${item.id}`,
    "data-tooltip-content": "Duplicate"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.DuplicateIcon, null)), signage.length > 1 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "cursor-pointer",
    onClick: () => removeSignage(item),
    "data-tooltip-id": item.id,
    "data-tooltip-content": "Delete"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.TrashIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `signage-content ${open ? 'open' : ''}`
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: item.type === 'letters' ? 'overflow-hidden' : ''
  }, children)));
}

/***/ }),

/***/ "./src/scripts/UploadFiles.js":
/*!************************************!*\
  !*** ./src/scripts/UploadFiles.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ UploadFiles)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


function UploadFiles({
  setFilePaths,
  filePaths,
  setFileUrls,
  fileUrls,
  setFileNames,
  fileNames,
  tempFolder,
  isLoading,
  setIsLoading
}) {
  const fileRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [accessToken, setAccessToken] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const maxFiles = 5;
  const handleButtonClick = () => {
    console.log(fileNames);
    if (fileNames?.length >= maxFiles) {
      alert(`You can upload a maximum of ${maxFiles} files.`);
      return;
    }
    fileRef.current.click();
  };
  const handleChange = async event => {
    const totalAllowedUploads = maxFiles - (fileNames?.length || 0); // Calculate how many more files can be uploaded
    if (totalAllowedUploads <= 0) {
      alert(`You have reached the maximum upload limit of ${maxFiles} files.`);
      event.target.value = ''; // Reset the file input
      return;
    }
    const files = Array.from(event.target.files).slice(0, totalAllowedUploads); // Only take as many files as can still be uploaded
    if (files.length > 0) {
      for (const file of files) {
        await handleFileUpload(file, setFileUrls, setFileNames, setFilePaths, tempFolder);
      }
      event.target.value = ''; // Reset the file input after processing
    } else {
      console.log('No file to upload');
    }
  };
  const getRefreshToken = async () => {
    const clientId = NovaQuote.dropbox_app_key;
    const clientSecret = NovaQuote.dropbox_secret;
    const refreshToken = NovaQuote.dropbox_refresh_token;
    const url = 'https://api.dropboxapi.com/oauth2/token';
    const params = new URLSearchParams({
      grant_type: 'refresh_token',
      refresh_token: refreshToken,
      client_id: clientId,
      client_secret: clientSecret
    });
    try {
      const response = await fetch(url, {
        method: 'POST',
        body: params,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      });
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const data = await response.json();
      return data.access_token;
    } catch (error) {
      console.error('Error:', error);
      return null;
    }
  };
  const checkAndCreateFolder = async accessToken => {
    const folderPath = `/NOVA-CRM/${NovaQuote.business_id}/${tempFolder}/FromClient`;
    try {
      let response = await fetch('https://api.dropboxapi.com/2/files/get_metadata', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${accessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          path: folderPath
        })
      });
      if (response.ok) {
        return;
      }
      response = await fetch('https://api.dropboxapi.com/2/files/create_folder_v2', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${accessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          path: folderPath
        })
      });
      const data = await response.json();
      if (!response.ok) {
        throw new Error(data.error_summary || 'Unknown error during folder creation');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  };
  const checkForExistingSharedLink = async (token, filePath) => {
    const response = await fetch('https://api.dropboxapi.com/2/sharing/list_shared_links', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        path: filePath,
        direct_only: true
      })
    });
    const data = await response.json();
    if (!response.ok) {
      throw new Error(data.error_summary);
    }
    if (data.links && data.links.length > 0) {
      return data.links[0];
    }
    return null;
  };
  const handleFileUpload = async (file, setFileUrls, setFileNames, setFilePaths, tempFolder) => {
    setIsLoading(true);
    const token = await getRefreshToken();
    if (!token) {
      console.error('Failed to obtain access token');
      setIsLoading(false);
      return;
    }
    setAccessToken(token);
    await checkAndCreateFolder(token);
    const dropboxArgs = {
      path: `/NOVA-CRM/${NovaQuote.business_id}/${tempFolder}/FromClient/${file.name}`,
      mode: 'overwrite',
      autorename: false,
      mute: false
    };
    try {
      const uploadResponse = await fetch('https://content.dropboxapi.com/2/files/upload', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${token}`,
          'Dropbox-API-Arg': JSON.stringify(dropboxArgs),
          'Content-Type': 'application/octet-stream'
        },
        body: file
      });
      const uploadData = await uploadResponse.json();
      if (!uploadResponse.ok) throw new Error(uploadData.error_summary);
      setFilePaths(prev => Array.isArray(prev) ? [...prev, uploadData.path_display] : [uploadData.path_display]);
      const existingLink = await checkForExistingSharedLink(token, uploadData.path_display);
      if (existingLink) {
        setFileUrls(prev => Array.isArray(prev) ? [...prev, existingLink.url] : [existingLink.url]);
      } else {
        const sharedLinkResponse = await fetch('https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings', {
          method: 'POST',
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            path: uploadData.path_display,
            settings: {}
          })
        });
        const sharedLinkData = await sharedLinkResponse.json();
        setFileUrls(prev => Array.isArray(prev) ? [...prev, sharedLinkData.url] : [sharedLinkData.url]);
      }
      setFileNames(prev => Array.isArray(prev) ? [...prev, uploadData.name] : [uploadData.name]);
    } catch (error) {
      console.error('Error:', error);
    } finally {
      setIsLoading(false);
    }
  };
  const handleRemoveFile = async index => {
    setIsLoading(true);
    let currentAccessToken = accessToken || (await getRefreshToken());
    if (!currentAccessToken) {
      console.error('Failed to obtain access token');
      setIsLoading(false);
      return;
    }
    const filePath = filePaths[index];
    try {
      const response = await fetch('https://api.dropboxapi.com/2/files/delete_v2', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${currentAccessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          path: filePath
        })
      });
      const data = await response.json();
      if (response.ok) {
        setFileUrls(fileUrls.filter((_, i) => i !== index));
        setFilePaths(filePaths.filter((_, i) => i !== index));
        setFileNames(fileNames.filter((_, i) => i !== index));
      } else {
        throw new Error(data.error_summary || 'Unknown error during file deletion');
      }
    } catch (error) {
      console.error('Error:', error);
    } finally {
      setIsLoading(false);
    }
  };
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px]"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "UPLOAD PDF/AI FILE"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "h-[40px] w-full py-2 px-2 text-center text-red rounded-md text-sm uppercase bg-slate-400 hover:bg-slate-600 font-title leading-[1em]",
    onClick: handleButtonClick,
    "aria-label": "Upload design file",
    disabled: isLoading
  }, isLoading ? 'Please wait...' : 'Upload Design'), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    type: "file",
    ref: fileRef,
    className: "hidden",
    onChange: handleChange,
    accept: ".pdf,.ai,.png,.jpg,.jpeg",
    "aria-label": "File input",
    multiple: true
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "col-span-4 mb-4"
  }, fileNames?.length > 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "grid grid-cols-1 gap-2 text-sm border p-3 bg-slate-100"
  }, fileNames.map((fileName, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    key: index,
    className: "flex gap-4 items-center"
  }, fileName, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    onClick: () => handleRemoveFile(index),
    className: "text-xs"
  }, "Remove"))))));
}

/***/ }),

/***/ "./src/scripts/UploadFont.js":
/*!***********************************!*\
  !*** ./src/scripts/UploadFont.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ UploadFont)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


function UploadFont({
  setFontFilePath,
  fontFilePath,
  setFontFileUrl,
  setFontFile,
  fontFileUrl,
  setFontFileName,
  tempFolder
}) {
  const fileRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [accessToken, setAccessToken] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const handleButtonClick = () => {
    fileRef.current.click();
  };
  const handleChange = event => {
    const file = event.target.files[0];
    if (file) {
      setFontFile(file);
      handleFileUpload(file, setFontFileUrl, setFontFileName, setFontFilePath, tempFolder);
      event.target.value = '';
    } else {
      console.log('no file to upload');
    }
  };
  const getRefreshToken = async () => {
    const clientId = NovaQuote.dropbox_app_key;
    const clientSecret = NovaQuote.dropbox_secret;
    const refreshToken = NovaQuote.dropbox_refresh_token;
    const url = 'https://api.dropboxapi.com/oauth2/token';
    const params = new URLSearchParams({
      grant_type: 'refresh_token',
      refresh_token: refreshToken,
      client_id: clientId,
      client_secret: clientSecret
    });
    try {
      const response = await fetch(url, {
        method: 'POST',
        body: params,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      });
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const data = await response.json();
      return data.access_token;
    } catch (error) {
      console.error('Error:', error);
      return null;
    }
  };
  function getFormattedDate() {
    const today = new Date();
    return today.toISOString().split('T')[0]; // Returns 'YYYY-MM-DD'
  }

  const checkAndCreateFolder = async accessToken => {
    const folderPath = `/NOVA-CRM/${NovaQuote.business_id}/${tempFolder}/Fonts`;
    try {
      // Check if the folder exists
      let response = await fetch('https://api.dropboxapi.com/2/files/get_metadata', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${accessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          path: folderPath
        })
      });
      const metadata = await response.json();
      if (response.ok) {
        return;
      }
      response = await fetch('https://api.dropboxapi.com/2/files/create_folder_v2', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${accessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          autorename: false,
          path: folderPath
        })
      });
      const data = await response.json();
      if (response.ok) {
        console.log('Folder created successfully:', data);
      } else {
        throw new Error(data.error_summary || 'Unknown error during folder creation');
      }
    } catch (error) {
      // Handle errors for both checking and creating the folder
      console.error('Error:', error);
    }
  };
  const checkForExistingSharedLink = async (token, fontFilePath) => {
    const response = await fetch('https://api.dropboxapi.com/2/sharing/list_shared_links', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        path: fontFilePath,
        direct_only: true
      }) // `direct_only: true` to get direct links only
    });

    const data = await response.json();
    if (!response.ok) {
      throw new Error(data.error_summary);
    }

    // Check if any shared links exist for the file
    if (data.links && data.links.length > 0) {
      return data.links[0]; // Return the first shared link if available
    }

    return null; // Return null if no shared links exist
  };

  const handleFileUpload = async (file, setFontFileUrl, setFontFileName, setFontFilePath, tempFolder) => {
    setIsLoading(true);
    const token = await getRefreshToken();
    if (!token) {
      console.error('Failed to obtain access token');
      setIsLoading(false);
      return;
    }
    setAccessToken(token);
    await checkAndCreateFolder(token);
    const dropboxArgs = {
      path: `/NOVA-CRM/${NovaQuote.business_id}/${tempFolder}/Fonts/${file.name}`,
      mode: 'overwrite',
      autorename: false,
      mute: false
    };
    try {
      const uploadResponse = await fetch('https://content.dropboxapi.com/2/files/upload', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${token}`,
          'Dropbox-API-Arg': JSON.stringify(dropboxArgs),
          'Content-Type': 'application/octet-stream'
        },
        body: file
      });
      const uploadData = await uploadResponse.json();
      if (!uploadResponse.ok) throw new Error(uploadData.error_summary);
      console.log('File updated successfully:', uploadData.path_display);
      setFontFilePath(uploadData.path_display);

      // Check for existing shared links
      const existingLink = await checkForExistingSharedLink(token, uploadData.path_display);
      if (existingLink) {
        console.log('Existing shared link found:', existingLink.url);
        setFontFileUrl(existingLink.url); // Use the existing shared link
      } else {
        // Create a new shared link if none exist
        const sharedLinkResponse = await fetch('https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings', {
          method: 'POST',
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            path: uploadData.path_display,
            settings: {}
          })
        });
        if (!sharedLinkResponse.ok) {
          console.error('Error response:', await sharedLinkResponse.text());
          throw new Error(`Error creating shared link: ${sharedLinkResponse.statusText}`);
        }
        const sharedLinkData = await sharedLinkResponse.json();
        setFontFileUrl(sharedLinkData.url); // Use the newly created shared link
      }

      setFontFileName(uploadData.name);
    } catch (error) {
      console.error('Error:', error.message);
    } finally {
      setIsLoading(false);
    }
  };
  const handleRemoveFile = async () => {
    setIsLoading(true);
    let currentAccessToken = accessToken;
    if (!currentAccessToken) {
      console.log('no access token');
      const token = await getRefreshToken();
      if (!token) {
        console.error('Failed to obtain access token');
        setIsLoading(false);
        return;
      }
      setAccessToken(token);
      currentAccessToken = token;
    }
    console.log(fontFilePath);
    try {
      const response = await fetch('https://api.dropboxapi.com/2/files/delete_v2', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${currentAccessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          path: fontFilePath // Assuming fontFileUrl contains the path of the file in Dropbox
        })
      });

      const data = await response.json();
      if (response.ok) {
        console.log('File removed:', data);
        setFontFileUrl('');
        setFontFilePath('');
        setFontFileName('');
      } else {
        throw new Error(data.error_summary || 'Unknown error during file deletion');
      }
    } catch (error) {
      console.error('Error:', error);
    } finally {
      if (fileRef.current) {
        fileRef.current.value = '';
      }
      setIsLoading(false);
    }
  };
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px]"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "UPLOAD TTF/OTF File"), !fontFileUrl ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "h-[40px] w-full py-2 px-2 text-center text-red rounded-md text-sm uppercase bg-slate-400 hover:bg-slate-600 font-title leading-[1em]",
    onClick: handleButtonClick,
    "aria-label": "Upload font file",
    disabled: isLoading
  }, isLoading ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-center items-center"
  }, "Uploading...") : 'Upload Font') : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "h-[40px] w-full py-2 px-2 text-center text-red rounded-md text-sm uppercase bg-red-600 hover:bg-red-400 font-title leading-[1em]",
    onClick: handleRemoveFile,
    "aria-label": "Remove front file",
    disabled: isLoading
  }, isLoading ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex justify-center items-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    class: "animate-spin -ml-1 mr-3 h-5 w-5 text-white",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("circle", {
    class: "opacity-25",
    cx: "12",
    cy: "12",
    r: "10",
    stroke: "currentColor",
    "stroke-width": "4"
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "opacity-75",
    fill: "currentColor",
    d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
  })), "Removing...") : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex items-center justify-center"
  }, "Remove Font file", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    className: "w-5 h-5"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M6 18L18 6M6 6l12 12"
  })))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    type: "file",
    ref: fileRef,
    class: "hidden",
    onChange: handleChange,
    accept: ".ttf,.otf,.woff,.woff2,.zip,.rar,.png,.jpg,.jpeg,.pdf,.ai",
    "aria-label": "Font File input"
  }));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/LaserCutAcrylic/ColorOptions.js":
/*!**********************************************************************!*\
  !*** ./src/scripts/products/acrylic/LaserCutAcrylic/ColorOptions.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   colorOptions: () => (/* binding */ colorOptions),
/* harmony export */   metalFinishColors: () => (/* binding */ metalFinishColors),
/* harmony export */   translucentGraphicFilms: () => (/* binding */ translucentGraphicFilms)
/* harmony export */ });
const colorOptions = [{
  name: 'Clear',
  color: ''
}, {
  name: 'Frosted Clear',
  color: ''
}, {
  name: 'Custom Color',
  color: ''
}, {
  name: 'White',
  color: '#ffffff'
}, {
  name: 'Black',
  color: '#000000'
}, {
  name: 'Dove Grey',
  color: '#6d6c6c'
}, {
  name: 'Grey',
  color: '#808080'
}, {
  name: 'Desert Sand',
  color: '#edc9af'
}, {
  name: 'Ivory',
  color: '#fffff0'
}, {
  name: 'Lemon Yellow',
  color: '#fffff0'
}, {
  name: 'Yellow',
  color: '#ffff00'
}, {
  name: 'Citrus Yellow',
  color: '#fef250'
}, {
  name: 'Sundance Yellow',
  color: '#ffae00'
}, {
  name: 'Schoolbus Yellow',
  color: '#e8a317'
}, {
  name: 'Orange',
  color: '#ffa500'
}, {
  name: 'Red-Orange',
  color: '#ff5349'
}, {
  name: 'Rampart Orange',
  color: '#ef5e54'
}, {
  name: 'Red',
  color: '#ff0000'
}, {
  name: 'Brick Red',
  color: '#cb4154'
}, {
  name: 'Black Cherry',
  color: '#5e0013'
}, {
  name: 'Maroon',
  color: '#800000'
}, {
  name: 'Magenta',
  color: '#ff00ff'
}, {
  name: 'Violet Toner',
  color: '#3d4d97'
}, {
  name: 'Purple',
  color: '#800080'
}, {
  name: 'Midnight Blue',
  color: '#191970'
}, {
  name: 'Dark Blue',
  color: '#00008b'
}, {
  name: 'Medium Blue',
  color: '#0000cd'
}, {
  name: 'Blue',
  color: '#0000ff'
}, {
  name: 'Light Blue',
  color: '#add8e6'
}, {
  name: 'Marine Reef Blue',
  color: '#305279'
}, {
  name: 'Teal',
  color: '#008080'
}, {
  name: 'Safety Green',
  color: '#c6d219'
}, {
  name: 'Spring Green',
  color: '#00ff7f'
}, {
  name: 'Emerald Green',
  color: '#50c878'
}, {
  name: 'Federal Green',
  color: '#005d39'
}, {
  name: 'Light Green',
  color: '#90ee90'
}, {
  name: 'Dark Green',
  color: '#013220'
}, {
  name: 'Hunter Green',
  color: '#355e3b'
}, {
  name: 'Brown',
  color: '#964b00'
}];
const metalFinishColors = [{
  name: 'Stainless Steel Brushed',
  color: '#caccce'
}, {
  name: 'Stainless Steel Polished',
  color: '#caccce'
}, {
  name: 'Black Titanium Brushed',
  color: '#14130E'
}, {
  name: 'Black Titanium Polished',
  color: '#14130E'
}, {
  name: 'Gold Brushed',
  color: '#ffbf00'
}, {
  name: 'Gold Polished',
  color: '#ffbf00'
}];
const translucentGraphicFilms = [{
  name: 'White',
  color: '#ffffff'
}, {
  name: 'Ivory',
  color: '#ded1b4'
}, {
  name: 'Light Beige',
  color: '#c9bbae'
}, {
  name: 'Silver',
  color: '#b5b4bc'
}, {
  name: 'Gold Nugget',
  color: '#bf9152'
}, {
  name: 'Gold Metallic',
  color: '#a4896d'
}, {
  name: 'Bronze',
  color: '#b76e4b'
}, {
  name: 'Shadow Grey',
  color: '#8b858a'
}, {
  name: 'Silver Grey',
  color: '#858b91'
}, {
  name: 'Slate Grey',
  color: '#4e6478'
}, {
  name: 'Black',
  color: '#272e32'
}, {
  name: 'Duranodic',
  color: '#444041'
}, {
  name: 'Dark Brown',
  color: '#473434'
}, {
  name: 'Rust Brown',
  color: '#62322d'
}, {
  name: 'Light Rust Brown',
  color: '#6f332a'
}, {
  name: 'Burgundy',
  color: '#781729'
}, {
  name: 'Raspberry',
  color: '#ae044b'
}, {
  name: 'Vivid Rose',
  color: '#ca0f43'
}, {
  name: 'Rose Mauve',
  color: '#d96690'
}, {
  name: 'Cardinal Red',
  color: '#b10e22'
}, {
  name: 'Dark Red',
  color: '#b40b22'
}, {
  name: 'Red',
  color: '#bf1527'
}, {
  name: 'Regal Red',
  color: '#be1632'
}, {
  name: 'Poppy Red',
  color: '#d20d1a'
}, {
  name: 'Light Tomato Red',
  color: '#c90c15'
}, {
  name: 'Orange',
  color: '#d53b14'
}, {
  name: 'Tangerine',
  color: '#ed6c0b'
}, {
  name: 'Kumquat Orange',
  color: '#a4896d'
}, {
  name: 'Marigold',
  color: '#e59d00'
}, {
  name: 'Sunflower',
  color: '#dd9603'
}, {
  name: 'Golden Yellow',
  color: '#f0a901'
}, {
  name: 'Yellow',
  color: '#ecbf00'
}, {
  name: 'Light Lemon Yellow',
  color: '#d3ce05'
}, {
  name: 'Brilliant Green',
  color: '#43b110'
}, {
  name: 'Lime Green',
  color: '#35b225'
}, {
  name: 'Vivid Green',
  color: '#058342'
}, {
  name: 'Light Kelly Green',
  color: '#009a6b'
}, {
  name: 'Bright Jade Green',
  color: '#009b75'
}, {
  name: 'Green',
  color: '#026031'
}, {
  name: 'Holly Green',
  color: '#10502e'
}, {
  name: 'Dark Emerald Green',
  color: '#09502c'
}, {
  name: 'Torquioise',
  color: '#00898b'
}, {
  name: 'Teal Green',
  color: '#00788b'
}, {
  name: 'Evening Blue',
  color: '#879ac5'
}, {
  name: 'Light European Blue',
  color: '#0978bb'
}, {
  name: 'Olympic Blue',
  color: '#0478b6'
}, {
  name: 'Process Blue',
  color: '#0773c2'
}, {
  name: 'Intense Blue',
  color: '#0a5fb2'
}, {
  name: 'Bright Blue',
  color: '#0248a1'
}, {
  name: 'Bristol Blue',
  color: '#033998'
}, {
  name: 'Sultan Blue',
  color: '#062285'
}, {
  name: 'European Blue',
  color: '#152462'
}, {
  name: 'Blue',
  color: '#0e1466'
}, {
  name: 'Royal Blue',
  color: '#0e0173'
}, {
  name: 'Plum Purple',
  color: '#502960'
}, {
  name: 'Intense Magenta',
  color: '#a62579'
}, {
  name: 'Pink',
  color: '#da6bb4'
}];


/***/ }),

/***/ "./src/scripts/products/acrylic/LaserCutAcrylic/LaserCutAcrylic.js":
/*!*************************************************************************!*\
  !*** ./src/scripts/products/acrylic/LaserCutAcrylic/LaserCutAcrylic.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ LaserCutAcrylic)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/acrylic/LaserCutAcrylic/components/Letters.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/acrylic/LaserCutAcrylic/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function LaserCutAcrylic() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        letters: '',
        comments: '',
        font: '',
        mounting: '',
        waterproof: '',
        acrylicThickness: '',
        color: {
          name: '',
          color: ''
        },
        letterHeight: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        sets: 1,
        customFont: '',
        customColor: '',
        finishing: 'Matte',
        studLength: '',
        spacerStandoffDistance: '',
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        const savedStorage = JSON.parse(localStorage.getItem(storage));
        if (savedStorage?.length > 0) {
          setSignage(savedStorage);
        } else {
          setSignage(currentSignage);
        }
      } else {
        //window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    comments: '',
    mounting: '',
    acrylicThickness: '',
    waterproof: '',
    finishing: 'Matte',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    sets: 1,
    studLength: '',
    spacerStandoffDistance: '',
    color: {
      name: '',
      color: ''
    },
    customColor: '',
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          font: '',
          thickness_options: '',
          color: {
            name: '',
            color: ''
          },
          letterHeight: '',
          customFont: '',
          customColor: '',
          filePaths: [],
          fileNames: [],
          fileUrls: [],
          files: []
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    isLoading: isLoading,
    setIsLoading: setIsLoading,
    storage: storage
  }, item.type === 'letters' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/LaserCutAcrylic/components/Letters.js":
/*!****************************************************************************!*\
  !*** ./src/scripts/products/acrylic/LaserCutAcrylic/components/Letters.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _ColorOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ColorOptions */ "./src/scripts/products/acrylic/LaserCutAcrylic/ColorOptions.js");
/* harmony import */ var _LaserCutAcrylic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../LaserCutAcrylic */ "./src/scripts/products/acrylic/LaserCutAcrylic/LaserCutAcrylic.js");











const NovaOptions = NovaQuote.quote_options;
const NovaSingleOptions = NovaQuote.single_quote_options;
const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
//const AcrylicLetterPricing = JSON.parse(NovaOptions.letter_x_logo_pricing);

function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_LaserCutAcrylic__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicThickness);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fileName, setFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileName);
  const [fileUrl, setFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrl);
  const [filePath, setFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePath);
  const [file, setFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.file);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [customFont, setCustomFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customFont);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [mountingOptions, setMountingOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.mountingDefaultOptions);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(NovaOptions.letters_height);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const finishingOptions = NovaSingleOptions.finishing_options;
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_6__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (file) {
      setFiles([file]);
    }
    if (fileName) {
      setFileNames([fileName]);
    }
    if (filePath) {
      setFilePaths([filePath]);
    }
    if (fileUrl) {
      setFileUrls([fileUrl]);
    }
  }, [file, fileName, filePath, fileUrl]);
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          font: font,
          acrylicThickness: selectedThickness,
          mounting: selectedMounting,
          waterproof: waterproof,
          color: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          finishing: selectedFinishing,
          customFont: customFont,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const handleOnChangeMount = e => {
    const target = e.target.value;
    setSelectedMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
    if (parseInt(target) === 3 && parseInt(selectedLetterHeight) > 24) {
      setSelectedLetterHeight('');
    }
    if (parseInt(target) > 11 && parseInt(selectedLetterHeight) === 1) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  const handleChangePieces = e => {
    setPieces(e.target.value);
  };
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && selectedThickness && waterproof) {
      const pricingDetail = letterPricing[selectedLetterHeight - 1];
      const baseLetterPrice = pricingDetail[selectedThickness.value];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      lettersArray.forEach(letter => {
        let letterPrice = baseLetterPrice;
        if (letter === ' ') {
          // If the character is a space, set the price to 0 and skip further checks
          letterPrice = 0;
        } else if (letter.match(/[a-z]/)) {
          // Check for lowercase letter
          letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
        } else if (letter.match(/[A-Z]/)) {
          // Check for uppercase letter
          // Uppercase letters use 100% of base price, so no change needed
        } else if (letter.match(/[`~"*,.\-']/)) {
          // Check for small punctuation marks
          letterPrice *= smallPunctuations; // 30% of the base price
        } else if (letter.match(/[^a-zA-Z]/)) {
          // Check for symbol (not a letter or small punctuation)
          // Symbols use 100% of base price, so no change needed
        }

        // Adjusting for waterproof and finishing
        letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.1;
        letterPrice *= selectedFinishing === 'Gloss' ? 1.1 : 1;
        if (color?.name === 'Clear') {
          letterPrice *= 0.9;
        }
        if (color?.name === 'Frosted Clear') {
          letterPrice *= 0.95;
        }
        totalLetterPrice += letterPrice;
      });
      if (selectedMounting === 'Stud with spacer') {
        let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
        let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
        spacer = parseFloat(spacer.toFixed(2));
        totalLetterPrice += spacer;
      }
      totalLetterPrice *= sets;
      setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
      setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [selectedLetterHeight, selectedThickness, selectedFinishing, letters, waterproof, lettersHeight, color, sets, font, selectedMounting]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    // Log to ensure we're getting the expected value

    let newMountingOptions;
    if (selectedThickness?.value === '3') {
      if (selectedMounting === 'Flush stud') {
        setSelectedMounting('');
      }
      newMountingOptions = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.mountingDefaultOptions.filter(option => option.mounting_option !== 'Flush stud');
    } else {
      if (selectedMounting === 'Stud with Block') {
        setSelectedMounting('');
      }
      // Exclude 'Stud with Block' option
      newMountingOptions = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.mountingDefaultOptions.filter(option => option.mounting_option !== 'Stud with Block');
    }
    if (waterproof === 'Outdoor (Waterproof)') {
      if (selectedMounting === 'Double-sided tape') {
        setSelectedMounting('');
      }
      newMountingOptions = newMountingOptions.filter(option => option.mounting_option !== 'Double-sided tape');
    }

    // Update the state
    setMountingOptions(newMountingOptions);
  }, [selectedThickness, waterproof]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add your Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!color.name) missingFields.push('Select Color');
    if (color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!selectedMounting) missingFields.push('Select Mounting');
    if (selectedMounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (selectedMounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [letters, font, color, selectedThickness, selectedMounting, waterproof, selectedLetterHeight, fileUrls, fontFileUrl, selectedFinishing, customColor, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [letters, comments, font, selectedThickness, selectedMounting, waterproof, color, usdPrice, cadPrice, selectedLetterHeight, fileUrls, fileNames, filePaths, files, fontFileUrl, fontFileName, fontFilePath, fontFile, selectedFinishing, customFont, customColor, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[selectedThickness?.value];
      return value !== '' && value !== null && value !== undefined && value !== false && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Height,
        max: newHeightOptions[newHeightOptions.length - 1].Height
      }));
    }
  }, [selectedThickness]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
    if (!openColor && !openFont) return;
    setOpenColor(false);
    setOpenFont(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font === 'Custom font' ? '' : font,
      color: color.color,
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    setOpenColor: setOpenColor,
    handleSelectFont: handleSelectFont
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Acrylic Thickness",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenColor(prev => !prev);
      setOpenFont(false);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _ColorOptions__WEBPACK_IMPORTED_MODULE_8__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: item.finishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMount,
    options: mountingOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.mounting_option,
      selected: option.mounting_option === selectedMounting
    }, option.mounting_option)),
    value: item.mounting
  }), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), selectedMounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.setOptions,
    value: sets,
    onlyValue: true
  })), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/LaserCutAcrylic/components/Logo.js":
/*!*************************************************************************!*\
  !*** ./src/scripts/products/acrylic/LaserCutAcrylic/components/Logo.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _ColorOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ColorOptions */ "./src/scripts/products/acrylic/LaserCutAcrylic/ColorOptions.js");
/* harmony import */ var _LaserCutAcrylic__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../LaserCutAcrylic */ "./src/scripts/products/acrylic/LaserCutAcrylic/LaserCutAcrylic.js");










const NovaSingleOptions = NovaQuote.single_quote_options;
const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_LaserCutAcrylic__WEBPACK_IMPORTED_MODULE_8__.QuoteContext);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicThickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [maxWidthHeight, setMaxWidthHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(43);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const finishingOptions = NovaSingleOptions.finishing_options;
  const [maxWidthOptions, setMaxWidthOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: maxWidthHeight
  }, (_, index) => {
    const val = 1 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  }));
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [mountingOptions, setMountingOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.mountingDefaultOptions);
  const handleOnChangeMount = e => {
    const target = e.target.value;
    setSelectedMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!selectedThickness || selectedThickness.value === undefined) return;
    const {
      newMountingOptions,
      updatedSelectedMounting
    } = (0,_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.calculateMountingOptions)(selectedThickness, selectedMounting, waterproof);
    setSelectedMounting(updatedSelectedMounting); // Update the selected mounting if needed
    setMountingOptions(newMountingOptions);
    setMaxWidthOptions(() => Array.from({
      length: parseInt(maxWidthHeight) + 1
    }, (_, index) => {
      const val = 1 + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val
      }, val, "\"");
    }));
  }, [selectedThickness, selectedMounting, waterproof, maxWidthHeight]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (waterproof === 'Outdoor (Waterproof)') {
      let newMountingOptions = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.mountingDefaultOptions.filter(option => option.mounting_option !== 'Double-sided tape');
      if (selectedMounting === 'Double-sided tape') {
        setSelectedMounting('');
      }
      setMountingOptions(newMountingOptions);
    } else {
      setMountingOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.mountingDefaultOptions);
    }
  }, [waterproof, selectedMounting]);
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (parseInt(selectedThickness?.value) > 3) {
      setMaxWidthHeight(42);
    } else {
      setMaxWidthHeight(23);
      if (height > 25) {
        setHeight('');
      }
      if (width > 25) {
        setWidth('');
      }
    }
  }, [selectedThickness]);
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          acrylicThickness: selectedThickness,
          mounting: selectedMounting,
          waterproof: waterproof,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          finishing: selectedFinishing,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          sets: sets,
          color: color,
          customColor: customColor,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [comments, selectedThickness, selectedMounting, waterproof, width, height, usdPrice, cadPrice, fileUrls, fileNames, selectedFinishing, files, sets, filePaths, color, customColor, studLength, spacerStandoffDistance]);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_5__.getLogoPricingTablebyThickness)(`${selectedThickness.value}mm`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_4__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 1][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.1;
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        total *= selectedFinishing === 'Gloss' ? 1.1 : 1;
        if (color?.name === 'Clear') {
          total *= 0.9;
        }
        if (color?.name === 'Frosted Clear') {
          total *= 0.95;
        }
        if (selectedMounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, sets, color, selectedMounting]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!selectedMounting) missingFields.push('Select Mounting');
    if (selectedMounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (selectedMounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (!color.name) missingFields.push('Select Color');
    if (color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [width, height, selectedThickness, comments, selectedMounting, waterproof, fileUrls, fileNames, filePaths, files, selectedFinishing, sets, studLength, spacerStandoffDistance]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__["default"])([colorRef], () => {
    if (!openColor) return;
    setOpenColor(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
  }, [color]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Acrylic Thickness",
    value: item.acrylicThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === item.acrylicThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenColor(prev => !prev);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _ColorOptions__WEBPACK_IMPORTED_MODULE_7__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: selectedFinishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMount,
    options: mountingOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.mounting_option,
      selected: option.mounting_option === selectedMounting
    }, option.mounting_option)),
    value: selectedMounting
  }), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), selectedMounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.setOptions,
    value: sets,
    onlyValue: true
  })), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/LayeredAcrylic/LayeredAcrylic.js":
/*!***********************************************************************!*\
  !*** ./src/scripts/products/acrylic/LayeredAcrylic/LayeredAcrylic.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ASSEMBLY_FEES: () => (/* binding */ ASSEMBLY_FEES),
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ LayeredAcrylic)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/acrylic/LayeredAcrylic/components/Logo.js");







const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const ASSEMBLY_FEES = 1.1;
function LayeredAcrylic() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
        type: 'logo',
        title: 'LOGO 1',
        comments: '',
        mounting: '',
        acrylicThickness: '',
        waterproof: '',
        finishing: 'Matte',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        width: '',
        height: '',
        layers: '',
        sets: 1,
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
    mounting: '',
    acrylicThickness: '',
    waterproof: '',
    finishing: 'Matte',
    description: '',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    layers: '',
    sets: 1,
    studLength: '',
    spacerStandoffDistance: '',
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          comments: '',
          font: '',
          mounting: '',
          waterproof: '',
          acrylicThickness: '',
          thickness_options: '',
          color: {
            name: '',
            color: ''
          },
          letterHeight: '',
          studLength: '',
          spacerStandoffDistance: ''
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/LayeredAcrylic/components/Logo.js":
/*!************************************************************************!*\
  !*** ./src/scripts/products/acrylic/LayeredAcrylic/components/Logo.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _LayeredAcrylic__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../LayeredAcrylic */ "./src/scripts/products/acrylic/LayeredAcrylic/LayeredAcrylic.js");








const exchangeRate = 1.3;
const NovaSingleOptions = NovaQuote.single_quote_options;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    missing,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_LayeredAcrylic__WEBPACK_IMPORTED_MODULE_6__.QuoteContext);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicThickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [maxWidthHeight, setMaxWidthHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(23);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [pieces, setPieces] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.pieces);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [description, setDescription] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.description);
  const [layers, setLayers] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.layers);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const finishingOptions = NovaSingleOptions.finishing_options ? NovaSingleOptions.finishing_options : _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.defaultFinishOptions;
  const [maxWidthOptions, setMaxWidthOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: maxWidthHeight
  }, (_, index) => {
    const val = 1 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  }));
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [mountingOptions, setMountingOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.mountingDefaultOptions);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleOnChangeMount = e => {
    const target = e.target.value;
    setSelectedMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const handleOnChangeDescription = e => setDescription(e.target.value);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!selectedThickness || selectedThickness?.value === undefined) return;
    const {
      newMountingOptions,
      updatedSelectedMounting
    } = (0,_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.calculateMountingOptions)(selectedThickness, selectedMounting, waterproof);
    setSelectedMounting(updatedSelectedMounting); // Update the selected mounting if needed
    setMountingOptions(newMountingOptions);
    setMaxWidthOptions(() => Array.from({
      length: parseInt(maxWidthHeight) + 1
    }, (_, index) => {
      const val = 1 + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val
      }, val, "\"");
    }));
  }, [selectedThickness, selectedMounting, waterproof, maxWidthHeight]);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (parseInt(selectedThickness?.value) > 3) {
      setMaxWidthHeight(42);
    } else {
      setMaxWidthHeight(23);
      if (height > 25) {
        setHeight('');
      }
      if (width > 25) {
        setWidth('');
      }
    }
  }, [selectedThickness]);
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  const handleChangePieces = e => {
    setPieces(e.target.value);
  };
  const layersOptions = [1, 2, 3, 4, 5];
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          acrylicThickness: selectedThickness,
          mounting: selectedMounting,
          waterproof: waterproof,
          width: width,
          height: height,
          finishing: selectedFinishing,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          pieces: pieces,
          layers: layers,
          description: description,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [selectedThickness, selectedMounting, waterproof, width, height, fileUrls, fileNames, selectedFinishing, files, filePaths, pieces, description, layers, usdPrice, cadPrice, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    // Ensure width, height, and selectedThickness are provided
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_4__.getLogoPricingTablebyThickness)(`${selectedThickness.value}mm`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_3__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 1][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.1;
        }
        let total = (computed * multiplier * _LayeredAcrylic__WEBPACK_IMPORTED_MODULE_6__.ASSEMBLY_FEES).toFixed(2);
        total *= selectedFinishing === 'Gloss' ? 1.1 : 1;
        if (selectedMounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, sets, selectedMounting]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (!description) missingFields.push('Add Description');
    if (!selectedThickness) missingFields.push('Select Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!layers) missingFields.push('Layers');
    if (!waterproof) missingFields.push('Select Environment');
    if (!selectedMounting) missingFields.push('Select Mounting');
    if (selectedMounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (selectedMounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing Option');
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [fileUrls, comments, width, height, layers, selectedMounting, selectedThickness, description, waterproof, selectedFinishing, sets, studLength, spacerStandoffDistance]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "DESCRIPTION"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "h-[160px] rounded-md text-sm",
    onChange: handleOnChangeDescription
  }, description)), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Acrylic Thickness",
    value: item.acrylicThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === item.acrylicThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Number or Layers",
    value: layers,
    onChange: e => setLayers(e.target.value),
    options: layersOptions.map(layer => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: layer,
      selected: layer == item.layers
    }, layer))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: selectedFinishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMount,
    options: mountingOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.mounting_option,
      selected: option.mounting_option === selectedMounting
    }, option.mounting_option)),
    value: selectedMounting
  }), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), selectedMounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.setOptions,
    value: sets,
    onlyValue: true
  })), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/MetalLaminate/MetalLaminate.js":
/*!*********************************************************************!*\
  !*** ./src/scripts/products/acrylic/MetalLaminate/MetalLaminate.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   METAL_ACRYLIC_PRICING: () => (/* binding */ METAL_ACRYLIC_PRICING),
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   acrylicBaseOptions: () => (/* binding */ acrylicBaseOptions),
/* harmony export */   "default": () => (/* binding */ MetalLaminate)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/acrylic/MetalLaminate/components/Letters.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/acrylic/MetalLaminate/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const acrylicBaseOptions = [{
  option: 'Black'
}, {
  option: 'Custom (Pantone Code)'
}];
const METAL_ACRYLIC_PRICING = 1.3;
function MetalLaminate() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        letters: '',
        comments: '',
        font: '',
        mounting: '',
        waterproof: '',
        acrylicThickness: '',
        acrylicBase: {
          name: 'Black',
          color: '#000000'
        },
        metalLaminate: '',
        letterHeight: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        customFont: '',
        customColor: '',
        sets: 1,
        studLength: '',
        spacerStandoffDistance: '',
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    comments: '',
    mounting: '',
    acrylicThickness: '',
    waterproof: '',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    fontFilePath: '',
    fontFileName: '',
    fontFileUrl: '',
    fontFile: '',
    metalLaminate: '',
    acrylicBase: {
      name: 'Black',
      color: '#000000'
    },
    customColor: '',
    sets: 1,
    studLength: '',
    spacerStandoffDistance: '',
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          font: '',
          thickness_options: '',
          customFont: '',
          letterHeight: ''
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, item.type === 'letters' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/MetalLaminate/components/Letters.js":
/*!**************************************************************************!*\
  !*** ./src/scripts/products/acrylic/MetalLaminate/components/Letters.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _MetalLaminate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../MetalLaminate */ "./src/scripts/products/acrylic/MetalLaminate/MetalLaminate.js");











const NovaOptions = NovaQuote.quote_options;
const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
//const AcrylicLetterPricing = JSON.parse(NovaOptions.letter_x_logo_pricing);

function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_MetalLaminate__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [customFont, setCustomFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customFont);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [acrylicBase, setAcrylicBase] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicBase);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [openAcrylicColor, setOpenAcrylicColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicThickness);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [metalLaminate, setMetalLaminate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalLaminate);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(NovaOptions.letters_height);
  const [mountingOptions, setMountingOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.mountingDefaultOptions);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('#000000');
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleOnChangeMount = e => {
    const target = e.target.value;
    setSelectedMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const acrylicRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  let perLetterPrice = 0;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  const handleChangeMetalLaminate = e => {
    const selectedLaminate = _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.metalFinishColors.find(laminate => laminate.name === e.target.value);
    // Assuming setMetalLaminate and setColor are state setter functions
    setMetalLaminate(selectedLaminate.name);
    setColor(selectedLaminate.color);
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          font: font,
          acrylicThickness: selectedThickness,
          mounting: selectedMounting,
          waterproof: waterproof,
          acrylicBase: acrylicBase,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          metalLaminate: metalLaminate,
          customFont: customFont,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
    if (parseInt(target) === 3 && parseInt(selectedLetterHeight) > 24) {
      setSelectedLetterHeight('');
    }
    if (parseInt(target) > 11 && parseInt(selectedLetterHeight) === 1) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && selectedThickness) {
      const pricingDetail = letterPricing[selectedLetterHeight - 1];
      const baseLetterPrice = pricingDetail[selectedThickness.value];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      lettersArray.forEach(letter => {
        let letterPrice = baseLetterPrice;
        if (letter === ' ') {
          // If the character is a space, set the price to 0 and skip further checks
          letterPrice = 0;
        } else if (letter.match(/[a-z]/)) {
          // Check for lowercase letter
          letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
        } else if (letter.match(/[A-Z]/)) {
          // Check for uppercase letter
          // Uppercase letters use 100% of base price, so no change needed
        } else if (letter.match(/[`~"*,.\-']/)) {
          // Check for small punctuation marks
          letterPrice *= smallPunctuations; // 30% of the base price
        } else if (letter.match(/[^a-zA-Z]/)) {
          // Check for symbol (not a letter or small punctuation)
          // Symbols use 100% of base price, so no change needed
        }

        // Adjusting for waterproof and finishing
        letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.1;
        letterPrice *= _MetalLaminate__WEBPACK_IMPORTED_MODULE_9__.METAL_ACRYLIC_PRICING;
        letterPrice *= acrylicBase?.name === 'Black' ? 1 : 1.1;
        totalLetterPrice += letterPrice;
      });
      if (selectedMounting === 'Stud with spacer') {
        let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
        let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
        spacer = parseFloat(spacer.toFixed(2));
        totalLetterPrice += spacer;
      }
      totalLetterPrice *= sets;
      setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
      setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [selectedLetterHeight, selectedThickness, letters, waterproof, lettersHeight, acrylicBase, sets, font, selectedMounting]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    // Log to ensure we're getting the expected value

    let newMountingOptions;
    if (selectedThickness?.value === '3') {
      if (selectedMounting === 'Flush stud') {
        setSelectedMounting('');
      }
      newMountingOptions = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.mountingDefaultOptions.filter(option => option.mounting_option !== 'Flush stud');
    } else {
      if (selectedMounting === 'Stud with Block') {
        setSelectedMounting('');
      }
      // Exclude 'Stud with Block' option
      newMountingOptions = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.mountingDefaultOptions.filter(option => option.mounting_option !== 'Stud with Block');
    }
    if (waterproof === 'Outdoor (Waterproof)') {
      if (selectedMounting === 'Double-sided tape') {
        setSelectedMounting('');
      }
      newMountingOptions = newMountingOptions.filter(option => option.mounting_option !== 'Double-sided tape');
    }

    // Update the state
    setMountingOptions(newMountingOptions);
  }, [selectedThickness, waterproof]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [letters, comments, font, selectedThickness, waterproof, acrylicBase, usdPrice, cadPrice, selectedLetterHeight, fileUrls, fileNames, files, filePaths, fontFileUrl, fontFileName, fontFilePath, fontFile, metalLaminate, customFont, customColor, sets, selectedMounting, studLength, spacerStandoffDistance]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!metalLaminate) missingFields.push('Select Metal Laminate');
    if (!acrylicBase) missingFields.push('Select Acrylic Base');
    if (acrylicBase?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!selectedMounting) missingFields.push('Select Mounting');
    if (selectedMounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (selectedMounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    setMissing(prevMissing => {
      const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
      if (existingIndex !== -1) {
        const updatedMissing = [...prevMissing];
        updatedMissing[existingIndex] = {
          ...updatedMissing[existingIndex],
          missingFields: missingFields
        };
        return updatedMissing;
      } else if (missingFields.length > 0) {
        return [...prevMissing, {
          id: item.id,
          title: item.title,
          missingFields: missingFields
        }];
      }
      console.log(prevMissing);
      return prevMissing;
    });
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [letters, font, selectedThickness, selectedMounting, studLength, spacerStandoffDistance, waterproof, selectedLetterHeight, metalLaminate, acrylicBase, customColor, fontFileUrl, sets]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[selectedThickness?.value];
      return value !== '' && value !== null && value !== undefined && value !== false && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Height,
        max: newHeightOptions[newHeightOptions.length - 1].Height
      }));
    }
  }, [selectedThickness]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([acrylicRef, fontRef], () => {
    if (!openFont && !openAcrylicColor) return;
    setOpenAcrylicColor(false);
    setOpenFont(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    font != 'Custom font' && setFontFileUrl('');
    acrylicBase?.name != 'Custom Color' && setCustomColor('');
  }, [font, acrylicBase]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font,
      color: color,
      textShadow: `-1px 1px 3px ${acrylicBase.color}, 0 0 1px #000000`
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: () => {
      setOpenAcrylicColor(false);
    }
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Acrylic Thickness",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Laminate",
    onChange: handleChangeMetalLaminate,
    options: _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.metalFinishColors.map(laminate => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: laminate.name,
      selected: laminate.name === item.metalLaminate
    }, laminate.name)),
    value: metalLaminate
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: acrylicRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Acrylic Base"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${acrylicBase.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      console.log('Click');
      setOpenAcrylicColor(prev => !prev);
      setOpenFont(false);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: acrylicBase.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : acrylicBase.color
    }
  }), acrylicBase.name === '' ? 'CHOOSE OPTION' : acrylicBase.name), openAcrylicColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setAcrylicBase(color);
        setOpenAcrylicColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMount,
    options: mountingOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.mounting_option,
      selected: option.mounting_option === selectedMounting
    }, option.mounting_option)),
    value: item.mounting
  }), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), selectedMounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, acrylicBase?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/MetalLaminate/components/Logo.js":
/*!***********************************************************************!*\
  !*** ./src/scripts/products/acrylic/MetalLaminate/components/Logo.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _MetalLaminate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../MetalLaminate */ "./src/scripts/products/acrylic/MetalLaminate/MetalLaminate.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");









const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_MetalLaminate__WEBPACK_IMPORTED_MODULE_6__.QuoteContext);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicThickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [maxWidthHeight, setMaxWidthHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(23);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [metalLaminate, setMetalLaminate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalLaminate);
  const [acrylicBase, setAcrylicBase] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicBase);
  const [openAcrylicColor, setOpenAcrylicColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [maxWidthOptions, setMaxWidthOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: maxWidthHeight
  }, (_, index) => {
    const val = 1 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  }));
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [mountingOptions, setMountingOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.mountingDefaultOptions);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleOnChangeMount = e => {
    const target = e.target.value;
    setSelectedMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!selectedThickness || selectedThickness.value === undefined) return;
    const {
      newMountingOptions,
      updatedSelectedMounting
    } = (0,_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.calculateMountingOptions)(selectedThickness, selectedMounting, waterproof);
    setSelectedMounting(updatedSelectedMounting); // Update the selected mounting if needed
    setMountingOptions(newMountingOptions);
    setMaxWidthOptions(() => Array.from({
      length: parseInt(maxWidthHeight) + 1
    }, (_, index) => {
      const val = 1 + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val
      }, val, "\"");
    }));
  }, [selectedThickness, selectedMounting, waterproof, maxWidthHeight]);
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (parseInt(selectedThickness?.value) > 3) {
      setMaxWidthHeight(42);
    } else {
      setMaxWidthHeight(23);
      if (height > 25) {
        setHeight('');
      }
      if (width > 25) {
        setWidth('');
      }
    }
  }, [selectedThickness]);
  const acrylicRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const handleChangeMetalLaminate = e => {
    setMetalLaminate(e.target.value);
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          acrylicThickness: selectedThickness,
          mounting: selectedMounting,
          waterproof: waterproof,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          metalLaminate: metalLaminate,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          acrylicBase: acrylicBase,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [comments, selectedThickness, selectedMounting, waterproof, width, height, usdPrice, cadPrice, fileUrls, fileNames, metalLaminate, files, filePaths, acrylicBase, customColor, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_4__.getLogoPricingTablebyThickness)(`${selectedThickness.value}mm`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_3__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 1][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.1;
        }
        let total = (computed * multiplier * _MetalLaminate__WEBPACK_IMPORTED_MODULE_6__.METAL_ACRYLIC_PRICING).toFixed(2);
        total *= acrylicBase?.name === 'Black' ? 1 : 1.1;
        if (selectedMounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total).toFixed(2));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, acrylicBase, sets, selectedMounting]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!metalLaminate) missingFields.push('Select Metal Laminate');
    if (!acrylicBase) missingFields.push('Select Acrylic Base');
    if (acrylicBase?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!selectedMounting) missingFields.push('Select Mounting');
    if (selectedMounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (selectedMounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    setMissing(prevMissing => {
      const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
      if (existingIndex !== -1) {
        const updatedMissing = [...prevMissing];
        updatedMissing[existingIndex] = {
          ...updatedMissing[existingIndex],
          missingFields: missingFields
        };
        return updatedMissing;
      } else if (missingFields.length > 0) {
        return [...prevMissing, {
          id: item.id,
          title: item.title,
          missingFields: missingFields
        }];
      }
      console.log(prevMissing);
      return prevMissing;
    });
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [selectedThickness, comments, selectedMounting, waterproof, acrylicBase, width, height, metalLaminate, fileUrls, fileNames, filePaths, files, customColor, sets, studLength, spacerStandoffDistance]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Acrylic Thickness",
    value: item.acrylicThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === item.acrylicThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Laminate",
    onChange: handleChangeMetalLaminate,
    options: _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_7__.metalFinishColors.map(laminate => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: laminate.name,
      selected: laminate.name === item.metalLaminate
    }, laminate.name)),
    value: metalLaminate
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: acrylicRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Acrylic Base"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${acrylicBase.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenAcrylicColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      backgroundColor: acrylicBase.color
    }
  }), acrylicBase.name === '' ? 'CHOOSE OPTION' : acrylicBase.name), openAcrylicColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_7__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setAcrylicBase(color);
        setOpenAcrylicColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMount,
    options: mountingOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.mounting_option,
      selected: option.mounting_option === selectedMounting
    }, option.mounting_option)),
    value: selectedMounting
  }), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), selectedMounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_5__.setOptions,
    value: sets,
    onlyValue: true
  })), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, acrylicBase?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/UvPrintedAcrylic/UvPrintedAcrylic.js":
/*!***************************************************************************!*\
  !*** ./src/scripts/products/acrylic/UvPrintedAcrylic/UvPrintedAcrylic.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ UvPrintedAcrylic)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/acrylic/UvPrintedAcrylic/components/Logo.js");







const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function UvPrintedAcrylic() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
        type: 'logo',
        title: 'LOGO 1',
        comments: '',
        mounting: '',
        acrylicThickness: '',
        waterproof: '',
        finishing: 'Matte',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        width: '',
        height: '',
        printPreference: '',
        baseColor: 'Black',
        sets: 1,
        studLength: '',
        spacerStandoffDistance: '',
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
    comments: '',
    mounting: '',
    acrylicThickness: '',
    waterproof: '',
    finishing: 'Matte',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    baseColor: 'Black',
    printPreference: '',
    sets: 1,
    studLength: '',
    spacerStandoffDistance: '',
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          comments: '',
          font: '',
          mounting: '',
          waterproof: '',
          acrylicThickness: '',
          thickness_options: '',
          color: {
            name: '',
            color: ''
          },
          letterHeight: ''
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/acrylic/UvPrintedAcrylic/components/Logo.js":
/*!**************************************************************************!*\
  !*** ./src/scripts/products/acrylic/UvPrintedAcrylic/components/Logo.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _UvPrintedAcrylic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../UvPrintedAcrylic */ "./src/scripts/products/acrylic/UvPrintedAcrylic/UvPrintedAcrylic.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");








const NovaSingleOptions = NovaQuote.single_quote_options;
const exchangeRate = 1.3;
const UV_PRICE = 1.05;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_UvPrintedAcrylic__WEBPACK_IMPORTED_MODULE_5__.QuoteContext);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicThickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [maxWidthHeight, setMaxWidthHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(23);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [pieces, setPieces] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.pieces);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [baseColor, setBaseColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.baseColor);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [printPreference, setPrintPreference] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.printPreference);
  const finishingOptions = NovaSingleOptions.finishing_options;
  const [maxWidthOptions, setMaxWidthOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: maxWidthHeight
  }, (_, index) => {
    const val = 1 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  }));
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [mountingOptions, setMountingOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.mountingDefaultOptions);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleOnChangeMount = e => {
    const target = e.target.value;
    setSelectedMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!selectedThickness || selectedThickness.value === undefined) return;
    const {
      newMountingOptions,
      updatedSelectedMounting
    } = (0,_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.calculateMountingOptions)(selectedThickness, selectedMounting, waterproof);
    setSelectedMounting(updatedSelectedMounting); // Update the selected mounting if needed
    setMountingOptions(newMountingOptions);
    setMaxWidthOptions(() => Array.from({
      length: parseInt(maxWidthHeight) + 1
    }, (_, index) => {
      const val = 1 + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val
      }, val, "\"");
    }));
  }, [selectedThickness, selectedMounting, waterproof, maxWidthHeight]);
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (parseInt(selectedThickness?.value) > 3) {
      setMaxWidthHeight(42);
    } else {
      setMaxWidthHeight(23);
      if (height > 25) {
        setHeight('');
      }
      if (width > 25) {
        setWidth('');
      }
    }
  }, [selectedThickness]);
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  const handleChangePieces = e => {
    setPieces(e.target.value);
  };
  const printOptions = [{
    option: 'Print on top'
  }, {
    option: 'Print from back layer'
  }];
  const baseColorOptions = [{
    option: 'Black'
  }, {
    option: 'Custom Color'
  }];
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          acrylicThickness: selectedThickness,
          mounting: selectedMounting,
          waterproof: waterproof,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          finishing: selectedFinishing,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          baseColor: baseColor,
          customColor: customColor,
          printPreference: printPreference,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!selectedThickness) missingFields.push('Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!printPreference) missingFields.push('Select Printing Preference');
    if (!baseColor) missingFields.push('Select Base Color');
    if (!waterproof) missingFields.push('Select Environment');
    if (!selectedMounting) missingFields.push('Select Mounting Option');
    if (selectedMounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (selectedMounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing Option');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (baseColor === 'Custom Color' && !customColor) missingFields.push('Add the Pantone color code of your custom color');
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [selectedThickness, selectedMounting, waterproof, width, height, fileUrls, fileNames, selectedFinishing, files, filePaths, baseColor, printPreference, customColor, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [comments, selectedThickness, selectedMounting, waterproof, width, height, usdPrice, cadPrice, fileUrls, fileNames, customColor, selectedFinishing, files, filePaths, printPreference, baseColor, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_4__.getLogoPricingTablebyThickness)(`${selectedThickness.value}mm`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_3__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 1][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.1;
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        total *= selectedFinishing === 'Gloss' ? 1.1 : 1;
        total *= baseColor === 'Custom Color' ? UV_PRICE : 1;
        total *= 1.2;
        if (selectedMounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, baseColor, selectedMounting, sets]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Acrylic Thickness",
    value: item.acrylicThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === item.acrylicThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Printing Preference",
    value: printPreference,
    onChange: e => setPrintPreference(e.target.value),
    options: printOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.printPreference
    }, option.option))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Base Color",
    value: baseColor,
    onChange: e => setBaseColor(e.target.value),
    options: baseColorOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.baseColor
    }, option.option))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: selectedFinishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMount,
    options: mountingOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.mounting_option,
      selected: option.mounting_option === selectedMounting
    }, option.mounting_option)),
    value: selectedMounting
  }), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), selectedMounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_6__.setOptions,
    value: sets,
    onlyValue: true
  })), selectedMounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, baseColor === 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "CUSTOM COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/custom/CustomProject.js":
/*!******************************************************!*\
  !*** ./src/scripts/products/custom/CustomProject.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ CustomProject)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _SidebarNoPrice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../SidebarNoPrice */ "./src/scripts/SidebarNoPrice.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _utils_QuoteFunctions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/QuoteFunctions */ "./src/scripts/utils/QuoteFunctions.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/custom/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function CustomProject() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    setSignage([{
      id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
      type: 'custom',
      title: 'CUSTOM PROJECT',
      description: '',
      usdPrice: 0,
      cadPrice: 0,
      custom_id: '',
      filePaths: [],
      fileNames: [],
      fileUrls: [],
      files: [],
      product: NovaQuote.product
    }]);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    type: 'custom',
    title: 'CUSTOM PROJECT',
    description: '',
    custom_id: '',
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      args = {
        title: `${type} ${count + 1}`.toUpperCase()
      };
      const newSignage = {
        ...defaultArgs,
        ...args
      };
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    missing: missing,
    setMissing: setMissing,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    isLoading: isLoading,
    setIsLoading: setIsLoading,
    storage: storage
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('custom'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD PROJECT", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_SidebarNoPrice__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/custom/components/Logo.js":
/*!********************************************************!*\
  !*** ./src/scripts/products/custom/components/Logo.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _CustomProject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../CustomProject */ "./src/scripts/products/custom/CustomProject.js");




function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    missing,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_CustomProject__WEBPACK_IMPORTED_MODULE_2__.QuoteContext);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [description, setDescription] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.description);
  const handleOnChangeDescription = e => setDescription(e.target.value);
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          description: description
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!description) missingFields.push('Add your description');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [fileUrls, fileNames, files, filePaths, description]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "DESCRIPTION"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "h-[160px] rounded-md text-sm",
    onChange: handleOnChangeDescription
  }, description)), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_1__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal-channel/TrimLessBackLit/TrimLessBackLit.js":
/*!*******************************************************************************!*\
  !*** ./src/scripts/products/metal-channel/TrimLessBackLit/TrimLessBackLit.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ TrimLessBackLit)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/metal-channel/TrimLessBackLit/components/Letters.js");







const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function TrimLessBackLit() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        depth: '',
        letters: '',
        comments: '',
        font: '',
        customFont: '',
        waterproof: '',
        thickness: '',
        backLitFinishing: '',
        mounting: '',
        studLength: '',
        spacerStandoffDistance: '',
        customColor: '',
        letterHeight: '',
        ledLightColor: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        fontFilePath: '',
        fontFileName: '',
        fontFileUrl: '',
        backLitMetalFinish: '',
        fontFile: '',
        acrylicReveal: '0',
        sets: 1,
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
    type: 'letters',
    title: 'LETTERS 1',
    depth: '',
    letters: '',
    comments: '',
    font: '',
    customFont: '',
    waterproof: '',
    thickness: '',
    backLitFinishing: '',
    mounting: '',
    studLength: '',
    faceReturnColor: {
      name: '',
      color: ''
    },
    spacerStandoffDistance: '',
    customColor: '',
    backLitMetalFinish: '',
    letterHeight: '',
    ledLightColor: '6500K White',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    fontFilePath: '',
    fontFileName: '',
    fontFileUrl: '',
    fontFile: '',
    acrylicReveal: '0',
    sets: 1,
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase()
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal-channel/TrimLessBackLit/components/Letters.js":
/*!**********************************************************************************!*\
  !*** ./src/scripts/products/metal-channel/TrimLessBackLit/components/Letters.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _metalChannelOptions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../metalChannelOptions */ "./src/scripts/products/metal-channel/metalChannelOptions.js");
/* harmony import */ var _metal_metalOptions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../metal/metalOptions */ "./src/scripts/products/metal/metalOptions.js");
/* harmony import */ var _TrimLessBackLit__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TrimLessBackLit */ "./src/scripts/products/metal-channel/TrimLessBackLit/TrimLessBackLit.js");














const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_TrimLessBackLit__WEBPACK_IMPORTED_MODULE_12__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.faceReturnColor);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [letterPricing, setLetterPricing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [depth, setDepth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.depth);
  const [acrylicReveal, setAcrylicReveal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.acrylicReveal);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.backLitFinishing);
  const [metalFinish, setMetalFinish] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.backLitMetalFinish);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    min: 5,
    max: 40
  });
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_9__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [ledLightColor, setLedLightColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.ledLightColor);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          depth: depth,
          font: font,
          waterproof: waterproof,
          faceReturnColor: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          customColor: customColor,
          ledLightColor: ledLightColor,
          mounting: mounting,
          studLength: studLength,
          backLitFinishing: selectedFinishing,
          spacerStandoffDistance: spacerStandoffDistance,
          backLitMetalFinish: metalFinish,
          acrylicReveal: acrylicReveal,
          sets: sets
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeMounting = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeAcrylicReveal = e => {
    const target = e.target.value;
    setAcrylicReveal(() => target);
  };
  const handleOnChangeLedLight = e => setLedLightColor(e.target.value);
  const handleChangeFinishing = e => {
    const target = e.target.value;
    if (target === 'Metal') {
      setColor({
        name: '',
        color: ''
      });
    } else {
      setColor({
        name: 'Black',
        color: '#000000'
      });
      setMetalFinish('');
    }
    setSelectedFinishing(e.target.value);
  };
  const handelMetalFinishChange = e => {
    setMetalFinish(e.target.value);
  };
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleOnChangeDepth = e => {
    const target = e.target.value;
    const selected = _metalChannelOptions__WEBPACK_IMPORTED_MODULE_10__.depthOptions.filter(option => option.value === target);
    setDepth(() => selected[0]);
    if (parseFloat(target) === 5 && parseInt(selectedLetterHeight) < 6) {
      setSelectedLetterHeight('');
    }
    if (parseFloat(target) < 6 && parseFloat(target) > 1.5 && parseInt(selectedLetterHeight) < 7) {
      setSelectedLetterHeight('');
    }
    if (parseFloat(target) === 6 && parseInt(selectedLetterHeight) < 11) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_9__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!depth) missingFields.push('Select Metal Depth');
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (selectedFinishing === 'Painted') {
      if (!color.name) missingFields.push('Select Face & Return Color');
      if (color?.name === 'Custom Color' && !customColor) {
        missingFields.push('Add the Pantone color code of your custom color.');
      }
    }
    if (selectedFinishing === 'Metal') {
      if (!metalFinish) missingFields.push('Select Metal Finish');
    }
    if (!waterproof) missingFields.push('Select Environment');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!ledLightColor) missingFields.push('Select LED Light Color');
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [letters, depth, comments, font, waterproof, color, usdPrice, cadPrice, selectedLetterHeight, ledLightColor, fileUrls, fileNames, files, filePaths, customColor, fontFileUrl, fontFileName, fontFilePath, fontFile, mounting, studLength, spacerStandoffDistance, selectedFinishing, metalFinish, acrylicReveal, sets]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (depth?.value) {
      const table = (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])((0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_8__.getLetterPricingTableByTitle)(depth?.depth, NovaQuote.letter_pricing_tables));
      setLetterPricing(() => table);
      if (depth.value == 8) {
        if (selectedLetterHeight < 12) {
          setSelectedLetterHeight('');
        }
        setLettersHeight(() => ({
          min: 12,
          max: 40
        }));
      } else {
        setLettersHeight(() => ({
          min: 5,
          max: 40
        }));
      }
    }
  }, [depth, selectedLetterHeight]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing && selectedLetterHeight && depth && waterproof && acrylicReveal) {
      const pricingDetail = letterPricing[selectedLetterHeight - 5];
      if (pricingDetail) {
        let mm = 0;
        if (acrylicReveal == '1/5"') {
          mm = '5mm';
        } else if (acrylicReveal == '2/5"') {
          mm = '10mm';
        } else if (acrylicReveal == '3/5"') {
          mm = '15mm';
        } else {
          mm = 0;
        }
        const baseLetterPrice = pricingDetail[mm];
        let totalLetterPrice = 0;
        const lettersArray = letters.trim().split('');
        const noLowerCase = NovaQuote.no_lowercase.includes(font);
        lettersArray.forEach(letter => {
          let letterPrice = baseLetterPrice;
          if (letter === ' ') {
            // If the character is a space, set the price to 0 and skip further checks
            letterPrice = 0;
          } else if (letter.match(/[a-z]/)) {
            // Check for lowercase letter
            letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
          } else if (letter.match(/[A-Z]/)) {
            // Check for uppercase letter
            // Uppercase letters use 100% of base price, so no change needed
          } else if (letter.match(/[`~"*,.\-']/)) {
            // Check for small punctuation marks
            letterPrice *= smallPunctuations; // 30% of the base price
          } else if (letter.match(/[^a-zA-Z]/)) {
            // Check for symbol (not a letter or small punctuation)
            // Symbols use 100% of base price, so no change needed
          }

          // Adjusting for waterproof and finishing
          letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
          if (metalFinish && metalFinish.includes('Polished')) {
            letterPrice *= 1.3;
          }
          if (metalFinish && metalFinish.includes('Electroplated')) {
            letterPrice *= 1.2;
          }
          totalLetterPrice += letterPrice;
        });
        console.log(totalLetterPrice);
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          totalLetterPrice += spacer;
        }
        totalLetterPrice *= sets;
        setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
        setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [selectedLetterHeight, letters, waterproof, lettersHeight, letterPricing, depth, acrylicReveal, metalFinish, sets, font, mounting]);
  if (selectedFinishing === 'Painted') {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
      if (!openColor && !openFont) return;
      setOpenColor(false);
      setOpenFont(false);
    });
  } else {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([fontRef], () => {
      if (!openFont) return;
      setOpenFont(false);
    });
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font,
      color: color?.color || '#000000',
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: setOpenColor
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Depth",
    value: depth?.value,
    onChange: handleOnChangeDepth,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_10__.depthOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === depth
    }, thickness.depth))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing",
    onChange: handleChangeFinishing,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_10__.finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.value,
      selected: finishing.value === item.backLitFinishing
    }, finishing.value)),
    value: item.backLitFinishing
  }), selectedFinishing === 'Metal' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Finish",
    onChange: handelMetalFinishChange,
    options: _metal_metalOptions__WEBPACK_IMPORTED_MODULE_11__.metalFinishOptions.map(finish => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finish.option,
      selected: finish.option === metalFinish
    }, finish.option)),
    value: item.backLitMetalFinish
  }), selectedFinishing === 'Painted' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Face & Return Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "LED Light Color",
    onChange: handleOnChangeLedLight,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_10__.ledLightColors.map(color => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: color,
      selected: color == item.ledLightColor
    }, color)),
    value: item.ledLightColor
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Acrylic Reveal",
    onChange: handleOnChangeAcrylicReveal,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_10__.acrylicRevealOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option,
      selected: option == item.acrylicReveal
    }, option)),
    value: item.acrylicReveal
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_9__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting",
    onChange: handleOnChangeMounting,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_10__.mountingDefaultOptions.map(mounting => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: mounting.value,
      selected: mounting.value == item.mounting
    }, mounting.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_9__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_9__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_9__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/metal-channel/TrimLessFrontAndBackLit/TrimLessFrontAndBackLit.js":
/*!***********************************************************************************************!*\
  !*** ./src/scripts/products/metal-channel/TrimLessFrontAndBackLit/TrimLessFrontAndBackLit.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ TrimLessFrontAndBackLit)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/metal-channel/TrimLessFrontAndBackLit/components/Letters.js");







const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function TrimLessFrontAndBackLit() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      console.log('loading saved');
      setSignage(savedStorage);
    } else {
      console.log('setting');
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        depth: '',
        letters: '',
        comments: '',
        font: '',
        customFont: '',
        waterproof: '',
        thickness: '',
        vinylWhite: {
          name: '',
          color: '',
          code: ''
        },
        frontAcrylicCover: 'White',
        mounting: '',
        studLength: '',
        spacerStandoffDistance: '',
        returnColor: {
          name: 'Black',
          color: '#000000'
        },
        customColor: '',
        letterHeight: '',
        ledLightColor: '6500K White',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        sets: 1,
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
    type: 'letters',
    title: 'LETTERS 1',
    depth: '',
    letters: '',
    comments: '',
    font: '',
    customFont: '',
    waterproof: '',
    thickness: '',
    frontAcrylicCover: 'White',
    vinylWhite: {
      name: '',
      color: '',
      code: ''
    },
    mounting: '',
    studLength: '',
    spacerStandoffDistance: '',
    returnColor: {
      name: 'Black',
      color: '#000000'
    },
    customColor: '',
    letterHeight: '',
    ledLightColor: '6500K White',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    fontFilePath: '',
    fontFileName: '',
    fontFileUrl: '',
    fontFile: '',
    sets: 1,
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase()
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full flex flex-col"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal-channel/TrimLessFrontAndBackLit/components/Letters.js":
/*!******************************************************************************************!*\
  !*** ./src/scripts/products/metal-channel/TrimLessFrontAndBackLit/components/Letters.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../metalChannelOptions */ "./src/scripts/products/metal-channel/metalChannelOptions.js");
/* harmony import */ var _TrimLessFrontAndBackLit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TrimLessFrontAndBackLit */ "./src/scripts/products/metal-channel/TrimLessFrontAndBackLit/TrimLessFrontAndBackLit.js");












const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_TrimLessFrontAndBackLit__WEBPACK_IMPORTED_MODULE_10__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.returnColor);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [depth, setDepth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.depth);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    min: 6,
    max: 40
  });
  const [openAcrylicCover, setOpenAcrylicCover] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const [vinylWhite, setVinylWhite] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.vinylWhite);
  const [frontAcrylicCover, setFrontAcrylicCover] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.frontAcrylicCover);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [ledLightColor, setLedLightColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.ledLightColor);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const acrylicColorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          depth: depth,
          font: font,
          waterproof: waterproof,
          returnColor: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          customColor: customColor,
          ledLightColor: ledLightColor,
          mounting: mounting,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance,
          frontAcrylicCover: frontAcrylicCover,
          vinylWhite: vinylWhite,
          sets: sets
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeMounting = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeLedLight = e => setLedLightColor(e.target.value);
  const handleOnChangeWhite = e => {
    const target = e.target.value;
    setFrontAcrylicCover(target);
    if (target !== '3M Vinyl') {
      setVinylWhite({
        name: '',
        color: ''
      });
    }
  };
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const handleOnChangeDepth = e => {
    const target = e.target.value;
    const selected = _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.frontBackdepthOptions.filter(option => option.value === target);
    setDepth(() => selected[0]);
    if (parseFloat(target) > 5) {
      if (parseInt(selectedLetterHeight) < 15) {
        setSelectedLetterHeight('');
      }
      setLettersHeight(() => ({
        min: 12,
        max: 40
      }));
    } else {
      setLettersHeight(() => ({
        min: 6,
        max: 40
      }));
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && depth) {
      const pricingDetail = letterPricing[selectedLetterHeight - 6];
      const baseLetterPrice = pricingDetail[depth.depth];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      if (lettersArray.length > 0 && selectedLetterHeight && waterproof && depth) {
        lettersArray.forEach(letter => {
          let letterPrice = baseLetterPrice;
          if (letter === ' ') {
            // If the character is a space, set the price to 0 and skip further checks
            letterPrice = 0;
          } else if (letter.match(/[a-z]/)) {
            // Check for lowercase letter
            letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
          } else if (letter.match(/[A-Z]/)) {
            // Check for uppercase letter
            // Uppercase letters use 100% of base price, so no change needed
          } else if (letter.match(/[`~"*,.\-']/)) {
            // Check for small punctuation marks
            letterPrice *= smallPunctuations; // 30% of the base price
          } else if (letter.match(/[^a-zA-Z]/)) {
            // Check for symbol (not a letter or small punctuation)
            // Symbols use 100% of base price, so no change needed
          }

          // Adjusting for waterproof and finishing
          letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
          letterPrice *= vinylWhite?.name ? 1.1 : 1;
          totalLetterPrice += letterPrice;
        });
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          totalLetterPrice += spacer;
        }
        totalLetterPrice *= sets;
        setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
        setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    }
  }, [selectedLetterHeight, letters, waterproof, lettersHeight, vinylWhite, mounting, sets, font]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [depth, lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!depth) missingFields.push('Select Metal Depth');
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!color.name) missingFields.push('Select Color');
    if (color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!waterproof) missingFields.push('Select Environment');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!ledLightColor) missingFields.push('Select LED Light Color');
    if (!frontAcrylicCover) missingFields.push('Select Front Acrylic Cover');
    if (frontAcrylicCover === '3M Vinyl') {
      if (!vinylWhite?.name) missingFields.push('Select 3M 3630 Vinyl');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [letters, depth, comments, font, waterproof, color, frontAcrylicCover, usdPrice, cadPrice, selectedLetterHeight, ledLightColor, fileUrls, fileNames, files, filePaths, customColor, fontFileUrl, fontFileName, fontFilePath, fontFile, mounting, studLength, spacerStandoffDistance, frontAcrylicCover, vinylWhite, sets]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (depth?.value) {
      const newHeightOptions = letterPricing?.filter(item => {
        const value = item[depth?.depth];
        return value !== '' && value !== null && value !== undefined && value !== false && !isNaN(value);
      });
      if (newHeightOptions.length > 0) {
        setLettersHeight(() => ({
          min: newHeightOptions[0].Depth,
          max: newHeightOptions[newHeightOptions.length - 1].Depth
        }));
      }
    }
  }, [depth]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef, acrylicColorRef], () => {
    if (!openColor && !openFont && !openAcrylicCover) return;
    setOpenColor(false);
    setOpenFont(false);
    setOpenAcrylicCover(false);
  });
  if (true) {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
      if (!openColor && !openFont) return;
      setOpenColor(false);
      setOpenFont(false);
    });
  } else {}
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font === 'Custom font' ? '' : font,
      color: color.color,
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: () => {
      setOpenColor(false);
      setOpenAcrylicCover(false);
    }
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Depth",
    value: depth?.value,
    onChange: handleOnChangeDepth,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.frontBackdepthOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === depth
    }, thickness.depth))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Return Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenColor(prev => !prev);
      setOpenFont(false);
      setOpenAcrylicCover(false);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "LED Light Color",
    onChange: handleOnChangeLedLight,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.ledLightColors.map(color => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: color,
      selected: color == item.ledLightColor
    }, color)),
    value: item.ledLightColor
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Front Acrylic Cover",
    onChange: handleOnChangeWhite,
    options: _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.whiteOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option == item.frontAcrylicCover
    }, option.option)),
    value: item.frontAcrylicCover
  }), frontAcrylicCover === '3M Vinyl' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: acrylicColorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "3M VINYL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${vinylWhite.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenAcrylicCover(prev => !prev);
      setOpenColor(false);
      setOpenFont(false);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      backgroundColor: vinylWhite.color
    }
  }), vinylWhite.name === '' ? 'CHOOSE OPTION' : vinylWhite.name), openAcrylicCover && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.translucentGraphicFilms.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setVinylWhite(color);
        setOpenAcrylicCover(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting",
    onChange: handleOnChangeMounting,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.mountingDefaultOptions.map(mounting => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: mounting.value,
      selected: mounting.value == item.mounting
    }, mounting.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/metal-channel/TrimLessFrontLit/TrimLessFrontLit.js":
/*!*********************************************************************************!*\
  !*** ./src/scripts/products/metal-channel/TrimLessFrontLit/TrimLessFrontLit.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ TrimLessFrontLit)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/metal-channel/TrimLessFrontLit/components/Letters.js");







const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function TrimLessFrontLit() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        depth: '',
        letters: '',
        comments: '',
        font: '',
        customFont: '',
        waterproof: '',
        thickness: '',
        frontAcrylicCover: 'White',
        vinylWhite: {
          name: '',
          color: '',
          code: ''
        },
        mounting: '',
        studLength: '',
        spacerStandoffDistance: '',
        returnColor: {
          name: 'Black',
          color: '#000000'
        },
        customColor: '',
        letterHeight: '',
        ledLightColor: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        sets: 1,
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
    type: 'letters',
    title: 'LETTERS 1',
    depth: '',
    letters: '',
    comments: '',
    font: '',
    customFont: '',
    waterproof: '',
    thickness: '',
    vinylWhite: {
      name: '',
      color: '',
      code: ''
    },
    frontAcrylicCover: 'White',
    mounting: '',
    studLength: '',
    spacerStandoffDistance: '',
    returnColor: {
      name: 'Black',
      color: '#000000'
    },
    customColor: '',
    letterHeight: '',
    ledLightColor: '6500K White',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    fontFilePath: '',
    fontFileName: '',
    fontFileUrl: '',
    fontFile: '',
    sets: 1,
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase()
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal-channel/TrimLessFrontLit/components/Letters.js":
/*!***********************************************************************************!*\
  !*** ./src/scripts/products/metal-channel/TrimLessFrontLit/components/Letters.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../metalChannelOptions */ "./src/scripts/products/metal-channel/metalChannelOptions.js");
/* harmony import */ var _TrimLessFrontLit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TrimLessFrontLit */ "./src/scripts/products/metal-channel/TrimLessFrontLit/TrimLessFrontLit.js");












const NovaOptions = NovaQuote.quote_options;
const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_TrimLessFrontLit__WEBPACK_IMPORTED_MODULE_10__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.returnColor);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [depth, setDepth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.depth);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    min: 5,
    max: 40
  });
  const [openAcrylicCover, setOpenAcrylicCover] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const [vinylWhite, setVinylWhite] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.vinylWhite);
  const [frontAcrylicCover, setFrontAcrylicCover] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.frontAcrylicCover);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [ledLightColor, setLedLightColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.ledLightColor);
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const acrylicColorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          depth: depth,
          font: font,
          waterproof: waterproof,
          returnColor: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          customColor: customColor,
          ledLightColor: ledLightColor,
          frontAcrylicCover: frontAcrylicCover,
          vinylWhite: vinylWhite,
          mounting: mounting,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance,
          sets: sets
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeMounting = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeLedLight = e => setLedLightColor(e.target.value);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleOnChangeWhite = e => {
    const target = e.target.value;
    setFrontAcrylicCover(target);
    if (target !== '3M Vinyl') {
      setVinylWhite({
        name: '',
        color: ''
      });
    }
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const handleOnChangeDepth = e => {
    const target = e.target.value;
    const selected = _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.depthOptions.filter(option => option.value === target);
    setDepth(() => selected[0]);
    if (parseFloat(target) === 5 && parseInt(selectedLetterHeight) < 6) {
      setSelectedLetterHeight('');
    }
    if (parseFloat(target) < 6 && parseFloat(target) > 1.5 && parseInt(selectedLetterHeight) < 7) {
      setSelectedLetterHeight('');
    }
    if (parseFloat(target) === 6 && parseInt(selectedLetterHeight) < 11) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && depth) {
      const pricingDetail = letterPricing[selectedLetterHeight - 5];
      const baseLetterPrice = pricingDetail[depth.value];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      if (lettersArray.length > 0 && selectedLetterHeight && waterproof && depth) {
        lettersArray.forEach(letter => {
          let letterPrice = baseLetterPrice;
          if (letter === ' ') {
            // If the character is a space, set the price to 0 and skip further checks
            letterPrice = 0;
          } else if (letter.match(/[a-z]/)) {
            // Check for lowercase letter
            letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
          } else if (letter.match(/[A-Z]/)) {
            // Check for uppercase letter
            // Uppercase letters use 100% of base price, so no change needed
          } else if (letter.match(/[`~"*,.\-']/)) {
            // Check for small punctuation marks
            letterPrice *= smallPunctuations; // 30% of the base price
          } else if (letter.match(/[^a-zA-Z]/)) {
            // Check for symbol (not a letter or small punctuation)
            // Symbols use 100% of base price, so no change needed
          }

          // Adjusting for waterproof and finishing
          letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
          letterPrice *= vinylWhite?.name ? 1.1 : 1;
          totalLetterPrice += letterPrice;
        });
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          totalLetterPrice += spacer;
        }
        totalLetterPrice *= sets;
        console.log(sets);
        setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
        setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    }
  }, [selectedLetterHeight, letters, waterproof, lettersHeight, vinylWhite, sets, mounting, font]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!depth) missingFields.push('Select Metal Depth');
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!color.name) missingFields.push('Select Color');
    if (color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!waterproof) missingFields.push('Select Environment');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!ledLightColor) missingFields.push('Select LED Light Color');
    if (!frontAcrylicCover) missingFields.push('Select Front Acrylic Cover');
    if (frontAcrylicCover === '3M Vinyl') {
      if (!vinylWhite?.name) missingFields.push('Select 3M Vinyl');
    }
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [letters, depth, comments, font, waterproof, color, frontAcrylicCover, vinylWhite, usdPrice, cadPrice, selectedLetterHeight, ledLightColor, fileUrls, fileNames, files, filePaths, customColor, fontFileUrl, fontFileName, fontFilePath, fontFile, mounting, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[depth?.value];
      return value !== '' && value !== null && value !== undefined && value !== false && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Depth,
        max: newHeightOptions[newHeightOptions.length - 1].Depth
      }));
    }
  }, [depth]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef, acrylicColorRef], () => {
    if (!openColor && !openFont && !openAcrylicCover) return;
    setOpenColor(false);
    setOpenFont(false);
    setOpenAcrylicCover(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font === 'Custom font' ? '' : font,
      color: color.color,
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: () => {
      setOpenColor(false);
      setOpenAcrylicCover(false);
    }
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Depth",
    value: depth?.value,
    onChange: handleOnChangeDepth,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.depthOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === depth
    }, thickness.depth))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Return Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenColor(prev => !prev);
      setOpenFont(false);
      setOpenAcrylicCover(false);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "LED Light Color",
    onChange: handleOnChangeLedLight,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.ledLightColors.map(color => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: color,
      selected: color == item.ledLightColor
    }, color)),
    value: item.ledLightColor
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Front Acrylic Cover",
    onChange: handleOnChangeWhite,
    options: _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.whiteOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option == item.frontAcrylicCover
    }, option.option)),
    value: item.frontAcrylicCover
  }), frontAcrylicCover === '3M Vinyl' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: acrylicColorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "3M VINYL"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${vinylWhite.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenAcrylicCover(prev => !prev);
      setOpenColor(false);
      setOpenFont(false);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      backgroundColor: vinylWhite.color
    }
  }), vinylWhite.name === '' ? 'CHOOSE OPTION' : vinylWhite.name), openAcrylicCover && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.translucentGraphicFilms.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setVinylWhite(color);
        setOpenAcrylicCover(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting",
    onChange: handleOnChangeMounting,
    options: _metalChannelOptions__WEBPACK_IMPORTED_MODULE_9__.mountingDefaultOptions.map(mounting => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: mounting.value,
      selected: mounting.value == item.mounting
    }, mounting.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/metal-channel/metalChannelOptions.js":
/*!*******************************************************************!*\
  !*** ./src/scripts/products/metal-channel/metalChannelOptions.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   acrylicRevealOptions: () => (/* binding */ acrylicRevealOptions),
/* harmony export */   depthOptions: () => (/* binding */ depthOptions),
/* harmony export */   finishingOptions: () => (/* binding */ finishingOptions),
/* harmony export */   frontBackdepthOptions: () => (/* binding */ frontBackdepthOptions),
/* harmony export */   ledLightColors: () => (/* binding */ ledLightColors),
/* harmony export */   mountingDefaultOptions: () => (/* binding */ mountingDefaultOptions)
/* harmony export */ });
const mountingDefaultOptions = [{
  value: 'Stud Mount'
}, {
  value: 'Stud with spacer'
}];
const finishingOptions = [{
  value: 'Painted'
}, {
  value: 'Metal'
}];
const depthOptions = [{
  depth: '1.4"',
  value: '3.5'
}, {
  depth: '2"',
  value: '5'
}, {
  depth: '3.2"',
  value: '8'
}];
const frontBackdepthOptions = [{
  depth: '2"',
  value: '5'
}, {
  depth: '3.2"',
  value: '8'
}];
const ledLightColors = ['6500K White', '3000K Warm White', 'Red', 'Green', 'Blue'];
const acrylicRevealOptions = ['0', '1/5"', '2/5"', '3/5"'];


/***/ }),

/***/ "./src/scripts/products/metal/FabricatedStainless/FabricatedStainless.js":
/*!*******************************************************************************!*\
  !*** ./src/scripts/products/metal/FabricatedStainless/FabricatedStainless.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ FabricatedStainless)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/metal/FabricatedStainless/components/Letters.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/metal/FabricatedStainless/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function FabricatedStainless() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        letters: '',
        comments: '',
        font: '',
        customFont: '',
        customColor: '',
        waterproof: '',
        metalDepth: '',
        color: {
          name: '',
          color: ''
        },
        letterHeight: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        metalFinish: '',
        stainLessMetalFinish: '',
        studLength: '',
        spacerStandoffDistance: '',
        metal: '',
        sets: 1,
        mounting: '',
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    comments: '',
    mounting: '',
    metalDepth: '',
    waterproof: '',
    metalFinish: '',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    color: {
      name: '',
      color: ''
    },
    customColor: '',
    metal: '',
    stainLessMetalFinish: '',
    studLength: '',
    spacerStandoffDistance: '',
    product: NovaQuote.product,
    sets: 1
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          font: '',
          thickness_options: '',
          letterHeight: '',
          customFont: ''
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, item.type === 'letters' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal/FabricatedStainless/components/Letters.js":
/*!******************************************************************************!*\
  !*** ./src/scripts/products/metal/FabricatedStainless/components/Letters.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _metalOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../metalOptions */ "./src/scripts/products/metal/metalOptions.js");
/* harmony import */ var _FabricatedStainless__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../FabricatedStainless */ "./src/scripts/products/metal/FabricatedStainless/FabricatedStainless.js");












const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
//const AcrylicLetterPricing = JSON.parse(NovaOptions.letter_x_logo_pricing);

function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_FabricatedStainless__WEBPACK_IMPORTED_MODULE_10__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [metal, setMetal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metal);
  const [stainLessMetalFinish, setStainLessMetalFinish] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.stainLessMetalFinish);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalDepth);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalFinish);
  const [customFont, setCustomFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customFont);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    min: 2,
    max: 43
  });
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          font: font,
          metalDepth: selectedThickness,
          mounting: mounting,
          waterproof: waterproof,
          color: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          metalFinish: selectedFinishing,
          metal: metal,
          stainLessMetalFinish: stainLessMetalFinish,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeInstallation = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _metalOptions__WEBPACK_IMPORTED_MODULE_9__.fabricatedThicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
    if (parseFloat(target) === 2 && parseInt(selectedLetterHeight) < 5) {
      setSelectedLetterHeight('');
    }
    if (parseFloat(target) < 6 && parseFloat(target) > 1.5 && parseInt(selectedLetterHeight) < 7) {
      setSelectedLetterHeight('');
    }
    if (parseFloat(target) === 6 && parseInt(selectedLetterHeight) < 11) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  const handleChangeFinishing = e => {
    const value = e.target.value;
    if (value === '') {
      setStainLessMetalFinish('');
      setColor({
        name: '',
        color: ''
      });
    }
    if ('Metal Finish' === value) {
      setColor({
        name: '',
        color: ''
      });
    }
    if ('Painted Finish' === value) {
      setStainLessMetalFinish('');
    }
    setSelectedFinishing(e.target.value);
  };
  const handelMetalFinishChange = e => {
    setStainLessMetalFinish(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && selectedThickness) {
      const pricingDetail = letterPricing[selectedLetterHeight - 2];
      const baseLetterPrice = pricingDetail[selectedThickness.value];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      if (lettersArray.length > 0 && selectedLetterHeight && waterproof && selectedThickness) {
        lettersArray.forEach(letter => {
          let letterPrice = baseLetterPrice;
          if (letter === ' ') {
            // If the character is a space, set the price to 0 and skip further checks
            letterPrice = 0;
          } else if (letter.match(/[a-z]/)) {
            // Check for lowercase letter
            letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
          } else if (letter.match(/[A-Z]/)) {
            // Check for uppercase letter
            // Uppercase letters use 100% of base price, so no change needed
          } else if (letter.match(/[`~"*,.\-']/)) {
            // Check for small punctuation marks
            letterPrice *= smallPunctuations; // 30% of the base price
          } else if (letter.match(/[^a-zA-Z]/)) {
            // Check for symbol (not a letter or small punctuation)
            // Symbols use 100% of base price, so no change needed
          }

          // Adjusting for waterproof and finishing
          letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.1;
          letterPrice *= metal === '316 Stainless Steel' ? 1.3 : 1;
          if (stainLessMetalFinish && stainLessMetalFinish.includes('Polished')) {
            letterPrice *= 1.1;
          }
          if (stainLessMetalFinish && stainLessMetalFinish.includes('Electroplated')) {
            letterPrice *= 1.2;
          }
          if (mounting === 'PVC Backing') {
            letterPrice *= 1.05;
          }
          totalLetterPrice += parseFloat(letterPrice.toFixed(2));
        });
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          totalLetterPrice += spacer;
        }
        totalLetterPrice *= sets;
        setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
        setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    }
  }, [selectedLetterHeight, selectedThickness, selectedFinishing, letters, waterproof, lettersHeight, metal, stainLessMetalFinish, mounting, sets, font]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!metal) missingFields.push('Metal Option');
    if (!selectedThickness) missingFields.push('Select Metal Thickness');
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedFinishing) missingFields.push('Select Finishing Options');
    if (selectedFinishing === 'Painted Finish') {
      if (!color.name) missingFields.push('Select Color');
      if (color?.name === 'Custom Color' && !customColor) {
        missingFields.push('Add the Pantone color code of your custom color.');
      }
    }
    if (selectedFinishing === 'Metal Finish') {
      if (!stainLessMetalFinish) missingFields.push('Select Metal Finishing Options');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [letters, comments, font, selectedThickness, mounting, waterproof, color, usdPrice, cadPrice, selectedLetterHeight, fileUrls, fileNames, files, filePaths, metal, selectedFinishing, stainLessMetalFinish, customColor, fontFileUrl, fontFileName, fontFilePath, fontFile, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[selectedThickness?.value];
      return value !== '' && value !== null && value !== undefined && value !== false && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Height,
        max: newHeightOptions[newHeightOptions.length - 1].Height
      }));
    }
  }, [selectedThickness]);
  if (selectedFinishing === 'Painted Finish') {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
      if (!openColor && !openFont) return;
      setOpenColor(false);
      setOpenFont(false);
    });
  } else {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([fontRef], () => {
      if (!openFont) return;
      setOpenFont(false);
    });
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font === 'Custom font' ? '' : font,
      color: color.color,
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: setOpenColor
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Option",
    onChange: e => setMetal(e.target.value),
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.metalOptions.map(metal => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metal.option,
      selected: metal.option === item.metal
    }, metal.option)),
    value: item.metal
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Depth",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.fabricatedThicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.finishOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.option,
      selected: finishing.option === selectedFinishing
    }, finishing.option)),
    value: item.metalFinish
  }), selectedFinishing === 'Metal Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Finish",
    onChange: handelMetalFinishChange,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.metalFinishOptions.map(metalFinish => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metalFinish.option,
      selected: metalFinish.option === stainLessMetalFinish
    }, metalFinish.option)),
    value: item.stainLessMetalFinish
  }), selectedFinishing === 'Painted Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Painted Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex px-2 items-center select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeInstallation,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.fabricatedMetalInstallationOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option === mounting
    }, option.option)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "SPACER DISTANCE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/metal/FabricatedStainless/components/Logo.js":
/*!***************************************************************************!*\
  !*** ./src/scripts/products/metal/FabricatedStainless/components/Logo.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _metalOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../metalOptions */ "./src/scripts/products/metal/metalOptions.js");
/* harmony import */ var _FabricatedStainless__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../FabricatedStainless */ "./src/scripts/products/metal/FabricatedStainless/FabricatedStainless.js");











const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_FabricatedStainless__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalDepth);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalFinish);
  const [metal, setMetal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metal);
  const [stainLessMetalFinish, setStainLessMetalFinish] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.stainLessMetalFinish);
  const maxWidthHeightOptions = Array.from({
    length: 41
  }, (_, index) => {
    const val = 3 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  });
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handelMetalFinishChange = e => {
    const value = e.target.value;
    setStainLessMetalFinish(e.target.value);
  };
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _metalOptions__WEBPACK_IMPORTED_MODULE_8__.fabricatedThicknessOptions.filter(option => option.value === target);
    console.log(selected[0]);
    setSelectedThickness(() => selected[0]);
  };
  const handleChangeFinishing = e => {
    const value = e.target.value;
    if (value === '') {
      setStainLessMetalFinish('');
      setColor({
        name: '',
        color: ''
      });
    }
    if ('Metal Finish' === value) {
      setColor({
        name: '',
        color: ''
      });
    }
    if ('Painted Finish' === value) {
      setStainLessMetalFinish('');
    }
    setSelectedFinishing(e.target.value);
  };
  const handleOnChangeInstallation = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          metalDepth: selectedThickness,
          waterproof: waterproof,
          color: color,
          customColor: customColor,
          mounting: mounting,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          metalFinish: selectedFinishing,
          files: files,
          metal: metal,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          stainLessMetalFinish: stainLessMetalFinish,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!metal) missingFields.push('Metal Option');
    if (!selectedThickness) missingFields.push('Select Metal Depth');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (!selectedFinishing) missingFields.push('Select Finishing Options');
    if (selectedFinishing === 'Painted Finish') {
      if (!color.name) missingFields.push('Select Color');
      if (color?.name === 'Custom Color' && !customColor) {
        missingFields.push('Add the Pantone color code of your custom color.');
      }
    }
    if (selectedFinishing === 'Metal Finish') {
      if (!stainLessMetalFinish) missingFields.push('Select Metal Finishing Options');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [comments, selectedThickness, selectedMounting, waterproof, width, height, usdPrice, cadPrice, fileUrls, fileNames, selectedFinishing, stainLessMetalFinish, files, filePaths, mounting, color, customColor, metal, sets, studLength, spacerStandoffDistance]);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_6__.getLogoPricingTablebyThickness)(`${selectedThickness.value}`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 3][height] : 0;
        console.log(logoPricingTable[width - 3][height]);
        let multiplier = 1;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.05;
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        total *= metal === '316 Stainless Steel' ? 1.3 : 1;
        if (stainLessMetalFinish && stainLessMetalFinish.includes('Polished')) {
          total *= 1.1;
        }
        if (stainLessMetalFinish && stainLessMetalFinish.includes('Electroplated')) {
          total *= 1.2;
        }
        total = parseFloat(total.toFixed(2));
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, metal, stainLessMetalFinish, mounting, sets]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__["default"])([colorRef], () => {
    if (!openColor) return;
    setOpenColor(false);
  });
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Option",
    onChange: e => setMetal(e.target.value),
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.metalOptions.map(metal => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metal.option,
      selected: metal.option === item.metal
    }, metal.option)),
    value: item.metal
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Depth",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.fabricatedThicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthHeightOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthHeightOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.finishOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.option,
      selected: finishing.option === selectedFinishing
    }, finishing.option)),
    value: item.metalFinish
  }), selectedFinishing === 'Metal Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Finish",
    onChange: handelMetalFinishChange,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.metalFinishOptions.map(metalFinish => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metalFinish.option,
      selected: metalFinish.option === stainLessMetalFinish
    }, metalFinish.option)),
    value: item.stainLessMetalFinish
  }), selectedFinishing === 'Painted Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Painted Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex px-2 items-center select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeInstallation,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.fabricatedMetalInstallationOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option === mounting
    }, option.option)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal/LaserCutAluminum/LaserCutAluminum.js":
/*!*************************************************************************!*\
  !*** ./src/scripts/products/metal/LaserCutAluminum/LaserCutAluminum.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ LaserCutAluminum)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/metal/LaserCutAluminum/components/Letters.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/metal/LaserCutAluminum/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function LaserCutAluminum() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        letters: '',
        comments: '',
        font: '',
        waterproof: '',
        metalThickness: '',
        metalColor: {
          name: '',
          color: ''
        },
        letterHeight: '',
        usdPrice: 0,
        cadPrice: 0,
        filePath: '',
        fileName: '',
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        fileUrl: '',
        file: '',
        finishing: '',
        customFont: '',
        metalCustomColor: '',
        studLength: '',
        spacerStandoffDistance: '',
        sets: 1,
        mounting: '',
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    comments: '',
    mounting: '',
    metalThickness: '',
    waterproof: '',
    finishing: '',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    product: NovaQuote.product,
    customFont: '',
    metalCustomColor: '',
    studLength: '',
    spacerStandoffDistance: '',
    sets: 1
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          font: '',
          filePaths: [],
          fileNames: [],
          fileUrls: [],
          files: [],
          thickness_options: '',
          metalColor: {
            name: '',
            color: ''
          },
          letterHeight: ''
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          metalColor: {
            name: '',
            color: ''
          },
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, item.type === 'letters' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal/LaserCutAluminum/components/Letters.js":
/*!***************************************************************************!*\
  !*** ./src/scripts/products/metal/LaserCutAluminum/components/Letters.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _LaserCutAluminum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../LaserCutAluminum */ "./src/scripts/products/metal/LaserCutAluminum/LaserCutAluminum.js");











const NovaOptions = NovaQuote.quote_options;
const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
//const AcrylicLetterPricing = JSON.parse(NovaOptions.letter_x_logo_pricing);

function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_LaserCutAluminum__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalColor);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalThickness);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [customFont, setCustomFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customFont);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalCustomColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(NovaOptions.letters_height);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          font: font,
          metalThickness: selectedThickness,
          mounting: mounting,
          waterproof: waterproof,
          metalColor: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          finishing: selectedFinishing,
          customFont: customFont,
          metalCustomColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeInstallation = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.metalThicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
    if (parseInt(target) === 3 && parseInt(selectedLetterHeight) > 24) {
      setSelectedLetterHeight('');
    }
    if (parseInt(target) > 11 && parseInt(selectedLetterHeight) === 1) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  const handleChangeFinishing = e => {
    const value = e.target.value;
    if ('Brushed' === value) {
      setColor({
        name: '',
        color: ''
      });
    }
    setSelectedFinishing(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && selectedThickness && waterproof) {
      const pricingDetail = letterPricing[selectedLetterHeight - 1];
      const baseLetterPrice = pricingDetail[selectedThickness.value];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      lettersArray.forEach(letter => {
        let letterPrice = baseLetterPrice;
        if (letter === ' ') {
          // If the character is a space, set the price to 0 and skip further checks
          letterPrice = 0;
        } else if (letter.match(/[a-z]/)) {
          // Check for lowercase letter
          letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
        } else if (letter.match(/[A-Z]/)) {
          // Check for uppercase letter
          // Uppercase letters use 100% of base price, so no change needed
        } else if (letter.match(/[`~"*,.\-']/)) {
          // Check for small punctuation marks
          letterPrice *= smallPunctuations; // 30% of the base price
        } else if (letter.match(/[^a-zA-Z]/)) {
          // Check for symbol (not a letter or small punctuation)
          // Symbols use 100% of base price, so no change needed
        }

        // Adjusting for waterproof and finishing
        letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.02;
        letterPrice *= selectedFinishing === 'Gloss' ? 1.1 : 1;
        totalLetterPrice += letterPrice;
      });
      if (mounting === 'Stud with spacer') {
        let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
        let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
        spacer = parseFloat(spacer.toFixed(2));
        totalLetterPrice += spacer;
      }
      totalLetterPrice *= sets;
      setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
      setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [selectedLetterHeight, selectedThickness, selectedFinishing, letters, waterproof, lettersHeight, sets, font, mounting]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [letters, comments, font, selectedThickness, mounting, waterproof, color, usdPrice, cadPrice, selectedLetterHeight, fileUrls, fileNames, files, filePaths, fontFileUrl, fontFileName, fontFilePath, fontFile, selectedFinishing, customFont, sets, customColor, studLength, spacerStandoffDistance]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!selectedFinishing) missingFields.push('Select Finishing Options');
    if (selectedFinishing === 'Painted') {
      if (!color.name) missingFields.push('Select Color');
    }
    if (selectedFinishing === 'Painted' && color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [letters, font, color, selectedThickness, mounting, waterproof, selectedLetterHeight, fileUrls, fileNames, files, filePaths, fontFileUrl, selectedFinishing, studLength, spacerStandoffDistance, customFont, customColor, sets]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[selectedThickness?.value];
      return value !== '' && value !== null && value !== undefined && value !== false && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Height,
        max: newHeightOptions[newHeightOptions.length - 1].Height
      }));
    }
  }, [selectedThickness]);
  if (selectedFinishing === 'Painted') {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
      if (!openColor && !openFont) return;
      setOpenColor(false);
      setOpenFont(false);
    });
  } else {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([fontRef], () => {
      if (!openFont) return;
      setOpenFont(false);
    });
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font,
      color: color?.color,
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenColor: setOpenColor,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Thickness",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.metalThicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.metalFinishOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.option,
      selected: finishing.option === item.finishing
    }, finishing.option)),
    value: item.finishing
  }), selectedFinishing === 'Painted' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex px-2 items-center select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenFont(false);
      setOpenColor(prev => !prev);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeInstallation,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.metalInstallationOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option === mounting
    }, option.option)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/metal/LaserCutAluminum/components/Logo.js":
/*!************************************************************************!*\
  !*** ./src/scripts/products/metal/LaserCutAluminum/components/Logo.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _LaserCutAluminum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../LaserCutAluminum */ "./src/scripts/products/metal/LaserCutAluminum/LaserCutAluminum.js");










const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_LaserCutAluminum__WEBPACK_IMPORTED_MODULE_8__.QuoteContext);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalThickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalColor);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalCustomColor);
  const maxWidthHeightOptions = Array.from({
    length: 43
  }, (_, index) => {
    const val = 1 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  });
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.metalThicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  const handleChangeFinishing = e => {
    const value = e.target.value;
    if ('Brushed' === value) {
      setColor({
        name: '',
        color: ''
      });
    }
    setSelectedFinishing(e.target.value);
  };
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const handleOnChangeInstallation = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          metalThickness: selectedThickness,
          waterproof: waterproof,
          metalColor: color,
          mounting: mounting,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          finishing: selectedFinishing,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          metalCustomColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [comments, selectedThickness, selectedMounting, waterproof, width, height, usdPrice, cadPrice, fileUrls, fileNames, selectedFinishing, files, filePaths, mounting, color, customColor, sets, studLength, spacerStandoffDistance]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (selectedFinishing === 'Painted') {
      if (!color.name) missingFields.push('Select Color');
    }
    if (selectedFinishing === 'Painted' && color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_6__.getLogoPricingTablebyThickness)(`${selectedThickness.value}mm`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 1][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.02;
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, sets, mounting]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__["default"])([colorRef], () => {
    if (!openColor) return;
    setOpenColor(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
  }, [color]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Thickness",
    value: item.metalThickness?.value,
    onChange: handleOnChangeThickness,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.metalThicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthHeightOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthHeightOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.metalFinishOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.option,
      selected: finishing.option === item.finishing
    }, finishing.option)),
    value: item.finishing
  }), selectedFinishing === 'Painted' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex px-2 items-center select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeInstallation,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.metalInstallationOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option === mounting
    }, option.option)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, selectedFinishing === 'Painted' && color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal/LaserCutStainless/LaserCutStainless.js":
/*!***************************************************************************!*\
  !*** ./src/scripts/products/metal/LaserCutStainless/LaserCutStainless.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ FabricatedStainless)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/metal/LaserCutStainless/components/Letters.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/metal/LaserCutStainless/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function FabricatedStainless() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        letters: '',
        comments: '',
        font: '',
        customFont: '',
        customColor: '',
        mounting: '',
        waterproof: '',
        metalThickness: '',
        color: {
          name: '',
          color: ''
        },
        letterHeight: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        metalFinish: '',
        stainlessSteelPolished: '',
        stainLessMetalFinish: '',
        studLength: '',
        spacerStandoffDistance: '',
        metal: '',
        sets: 1,
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        setSignage(currentSignage);
      } else {
        window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    comments: '',
    mounting: '',
    metalThickness: '',
    waterproof: '',
    metalFinish: '',
    usdPrice: 0,
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    color: {
      name: '',
      color: ''
    },
    customColor: '',
    metal: '',
    stainLessMetalFinish: '',
    stainlessSteelPolished: '',
    studLength: '',
    spacerStandoffDistance: '',
    sets: 1,
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          font: '',
          thickness_options: '',
          letterHeight: '',
          customFont: ''
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, item.type === 'letters' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal/LaserCutStainless/components/Letters.js":
/*!****************************************************************************!*\
  !*** ./src/scripts/products/metal/LaserCutStainless/components/Letters.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _metalOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../metalOptions */ "./src/scripts/products/metal/metalOptions.js");
/* harmony import */ var _LaserCutStainless__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../LaserCutStainless */ "./src/scripts/products/metal/LaserCutStainless/LaserCutStainless.js");












const NovaOptions = NovaQuote.quote_options;
const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
//const AcrylicLetterPricing = JSON.parse(NovaOptions.letter_x_logo_pricing);

function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_LaserCutStainless__WEBPACK_IMPORTED_MODULE_10__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [metal, setMetal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metal);
  const [stainLessMetalFinish, setStainLessMetalFinish] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.stainLessMetalFinish);
  const [stainlessSteelPolished, setStainlessSteelPolished] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.stainlessSteelPolished);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalThickness);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalFinish);
  const [customFont, setCustomFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customFont);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(NovaOptions.letters_height);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          font: font,
          metalThickness: selectedThickness,
          mounting: mounting,
          waterproof: waterproof,
          color: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          metalFinish: selectedFinishing,
          stainlessSteelPolished: stainlessSteelPolished,
          metal: metal,
          stainLessMetalFinish: stainLessMetalFinish,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeInstallation = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _metalOptions__WEBPACK_IMPORTED_MODULE_9__.metalThicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
    if (parseInt(target) === 4 && parseInt(selectedLetterHeight) > 24) {
      setSelectedLetterHeight('');
    }
    if (parseInt(target) > 11 && parseInt(selectedLetterHeight) === 1) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  const handleChangeFinishing = e => {
    const value = e.target.value;
    if (value === '') {
      setStainLessMetalFinish('');
      setColor({
        name: '',
        color: ''
      });
      setStainlessSteelPolished('');
    }
    if ('Metal Finish' === value) {
      setColor({
        name: '',
        color: ''
      });
    }
    if ('Painted Finish' === value) {
      setStainLessMetalFinish('');
    }
    setSelectedFinishing(e.target.value);
  };
  const handelMetalFinishChange = e => {
    const value = e.target.value;
    if ('Stainless Steel Polished' !== value) {
      setStainlessSteelPolished('');
    }
    setStainLessMetalFinish(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && selectedThickness) {
      const pricingDetail = letterPricing[selectedLetterHeight - 1];
      const baseLetterPrice = pricingDetail[selectedThickness.value];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      if (lettersArray.length > 0 && selectedLetterHeight && waterproof && selectedThickness) {
        lettersArray.forEach(letter => {
          let letterPrice = baseLetterPrice;
          if (letter === ' ') {
            // If the character is a space, set the price to 0 and skip further checks
            letterPrice = 0;
          } else if (letter.match(/[a-z]/)) {
            // Check for lowercase letter
            letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
          } else if (letter.match(/[A-Z]/)) {
            // Check for uppercase letter
            // Uppercase letters use 100% of base price, so no change needed
          } else if (letter.match(/[`~"*,.\-']/)) {
            // Check for small punctuation marks
            letterPrice *= smallPunctuations; // 30% of the base price
          } else if (letter.match(/[^a-zA-Z]/)) {
            // Check for symbol (not a letter or small punctuation)
            // Symbols use 100% of base price, so no change needed
          }

          // Adjusting for waterproof and finishing
          letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.02;
          letterPrice *= metal === '316 Stainless Steel' ? 1.3 : 1;
          if (stainlessSteelPolished) {
            if ('Standard (Face)' === stainlessSteelPolished) {
              letterPrice *= 1.3;
            }
            if ('Premium (Face & Side)' === stainlessSteelPolished) {
              letterPrice *= 1.7;
            }
          }
          if (stainLessMetalFinish && stainLessMetalFinish !== 'Stainless Steel Brushed' && stainLessMetalFinish !== 'Stainless Steel Polished') {
            letterPrice *= 1.2;
          }
          totalLetterPrice += letterPrice;
        });
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          totalLetterPrice += spacer;
        }
        totalLetterPrice *= sets;
        setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
        setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    }
  }, [selectedLetterHeight, selectedThickness, selectedFinishing, letters, waterproof, lettersHeight, metal, stainLessMetalFinish, stainlessSteelPolished, sets, mounting, font]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!metal) missingFields.push('Metal Option');
    if (!selectedThickness) missingFields.push('Select Metal Thickness');
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedFinishing) missingFields.push('Select Finishing Options');
    if (selectedFinishing === 'Painted Finish') {
      if (!color.name) missingFields.push('Select Color');
      if (color?.name === 'Custom Color' && !customColor) {
        missingFields.push('Add the Pantone color code of your custom color.');
      }
    }
    if (selectedFinishing === 'Metal Finish') {
      if (!stainLessMetalFinish) missingFields.push('Select Metal Finishing Options');
    }
    if (stainLessMetalFinish && stainLessMetalFinish === 'Stainless Steel Polished') {
      if (!stainlessSteelPolished) missingFields.push('Select Steel Polished');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Installation');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [letters, comments, font, selectedThickness, mounting, waterproof, color, usdPrice, cadPrice, selectedLetterHeight, fileUrls, fileNames, files, filePaths, metal, selectedFinishing, stainLessMetalFinish, stainlessSteelPolished, customColor, fontFileUrl, fontFileName, fontFilePath, fontFile, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[selectedThickness?.value];
      return value !== '' && value !== null && value !== undefined && value !== false && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Height,
        max: newHeightOptions[newHeightOptions.length - 1].Height
      }));
    }
  }, [selectedThickness]);
  if (selectedFinishing === 'Painted Finish') {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
      if (!openColor && !openFont) return;
      setOpenColor(false);
      setOpenFont(false);
    });
  } else {
    (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([fontRef], () => {
      if (!openFont) return;
      setOpenFont(false);
    });
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font === 'Custom font' ? '' : font,
      color: color.color,
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: setOpenColor
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Option",
    onChange: e => setMetal(e.target.value),
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.metalOptions.map(metal => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metal.option,
      selected: metal.option === item.metal
    }, metal.option)),
    value: item.metal
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Thickness",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.metalThicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.finishOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.option,
      selected: finishing.option === selectedFinishing
    }, finishing.option)),
    value: item.metalFinish
  }), selectedFinishing === 'Metal Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Finish",
    onChange: handelMetalFinishChange,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.metalFinishOptions.map(metalFinish => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metalFinish.option,
      selected: metalFinish.option === stainLessMetalFinish
    }, metalFinish.option)),
    value: item.stainLessMetalFinish
  }), stainLessMetalFinish === 'Stainless Steel Polished' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Steel Polish",
    onChange: e => setStainlessSteelPolished(e.target.value),
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.stainlessSteelPolishedOptions.map(steelPolished => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: steelPolished.option,
      selected: steelPolished.option === item.stainlessSteelPolished
    }, steelPolished.option)),
    value: item.stainlessSteelPolished
  }), selectedFinishing === 'Painted Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Painted Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex px-2 items-center select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => {
      setOpenFont(false);
      setOpenColor(prev => !prev);
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeInstallation,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_9__.metalInstallationOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option === mounting
    }, option.option)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/metal/LaserCutStainless/components/Logo.js":
/*!*************************************************************************!*\
  !*** ./src/scripts/products/metal/LaserCutStainless/components/Logo.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _metalOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../metalOptions */ "./src/scripts/products/metal/metalOptions.js");
/* harmony import */ var _LaserCutStainless__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../LaserCutStainless */ "./src/scripts/products/metal/LaserCutStainless/LaserCutStainless.js");











const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_LaserCutStainless__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [selectedMounting, setSelectedMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalThickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalFinish);
  const [metal, setMetal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metal);
  const [stainLessMetalFinish, setStainLessMetalFinish] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.stainLessMetalFinish);
  const [stainlessSteelPolished, setStainlessSteelPolished] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.stainlessSteelPolished);
  const maxWidthHeightOptions = Array.from({
    length: 43
  }, (_, index) => {
    const val = 1 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  });
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [mounting, setInstallation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  function handleComments(e) {
    setComments(e.target.value);
  }
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handelMetalFinishChange = e => {
    const value = e.target.value;
    if ('Stainless Steel Polished' !== value) {
      setStainlessSteelPolished('');
    }
    setStainLessMetalFinish(e.target.value);
  };
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _metalOptions__WEBPACK_IMPORTED_MODULE_8__.metalThicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  const handleChangeFinishing = e => {
    const value = e.target.value;
    if (value === '') {
      setStainLessMetalFinish('');
      setColor({
        name: '',
        color: ''
      });
      setStainlessSteelPolished('');
    }
    if ('Metal Finish' === value) {
      setColor({
        name: '',
        color: ''
      });
    }
    if ('Painted Finish' === value) {
      setStainLessMetalFinish('');
    }
    setSelectedFinishing(e.target.value);
  };
  const handleOnChangeInstallation = e => {
    const target = e.target.value;
    setInstallation(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          metalThickness: selectedThickness,
          waterproof: waterproof,
          color: color,
          customColor: customColor,
          mounting: mounting,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          metalFinish: selectedFinishing,
          files: files,
          metal: metal,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          stainlessSteelPolished: stainlessSteelPolished,
          stainLessMetalFinish: stainLessMetalFinish,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!metal) missingFields.push('Metal Option');
    if (!selectedThickness) missingFields.push('Select Metal Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (!selectedFinishing) missingFields.push('Select Finishing Options');
    if (selectedFinishing === 'Painted Finish') {
      if (!color.name) missingFields.push('Select Color');
      if (color?.name === 'Custom Color' && !customColor) {
        missingFields.push('Add the Pantone color code of your custom color.');
      }
    }
    if (selectedFinishing === 'Metal Finish') {
      if (!stainLessMetalFinish) missingFields.push('Select Metal Finishing Options');
    }
    if (stainLessMetalFinish && stainLessMetalFinish === 'Stainless Steel Polished') {
      if (!stainlessSteelPolished) missingFields.push('Select Steel Polished');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Installation');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (mounting === 'Stud Mount') {
      if (!studLength) missingFields.push('Select Stud Length');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
    checkAndAddMissingFields();
  }, [comments, selectedThickness, selectedMounting, waterproof, width, height, usdPrice, cadPrice, fileUrls, fileNames, selectedFinishing, stainLessMetalFinish, stainlessSteelPolished, files, filePaths, mounting, color, customColor, metal, sets, studLength, spacerStandoffDistance]);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_6__.getLogoPricingTablebyThickness)(`${selectedThickness.value}mm`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 1][height] : 0;
        let multiplier = 1;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.02;
          multiplier = parseFloat(multiplier).toFixed(2);
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        total *= metal === '316 Stainless Steel' ? 1.3 : 1;
        total = parseFloat(total.toFixed(2));
        if (stainlessSteelPolished) {
          if ('Standard (Face)' === stainlessSteelPolished) {
            total *= 1.3;
          }
          if ('Premium (Face & Side)' === stainlessSteelPolished) {
            total *= 1.7;
          }
          total = parseFloat(total.toFixed(2));
        }
        if (stainLessMetalFinish && stainLessMetalFinish !== 'Stainless Steel Brushed' && stainLessMetalFinish !== 'Stainless Steel Polished') {
          total *= 1.2;
        }
        total = parseFloat(total.toFixed(2));
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, metal, stainLessMetalFinish, stainlessSteelPolished, sets, mounting]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__["default"])([colorRef], () => {
    if (!openColor) return;
    setOpenColor(false);
  });
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Option",
    onChange: e => setMetal(e.target.value),
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.metalOptions.map(metal => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metal.option,
      selected: metal.option === item.metal
    }, metal.option)),
    value: item.metal
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Thickness",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.metalThicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthHeightOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthHeightOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.finishOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.option,
      selected: finishing.option === selectedFinishing
    }, finishing.option)),
    value: item.metalFinish
  }), selectedFinishing === 'Metal Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Finish",
    onChange: handelMetalFinishChange,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.metalFinishOptions.map(metalFinish => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: metalFinish.option,
      selected: metalFinish.option === stainLessMetalFinish
    }, metalFinish.option)),
    value: item.stainLessMetalFinish
  }), stainLessMetalFinish === 'Stainless Steel Polished' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Steel Polish",
    onChange: e => setStainlessSteelPolished(e.target.value),
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.stainlessSteelPolishedOptions.map(steelPolished => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: steelPolished.option,
      selected: steelPolished.option === item.stainlessSteelPolished
    }, steelPolished.option)),
    value: item.stainlessSteelPolished
  }), selectedFinishing === 'Painted Finish' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Painted Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex px-2 items-center select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeInstallation,
    options: _metalOptions__WEBPACK_IMPORTED_MODULE_8__.metalInstallationOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option === mounting
    }, option.option)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/metal/metalOptions.js":
/*!****************************************************!*\
  !*** ./src/scripts/products/metal/metalOptions.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fabricatedLogoInstallationOptions: () => (/* binding */ fabricatedLogoInstallationOptions),
/* harmony export */   fabricatedMetalInstallationOptions: () => (/* binding */ fabricatedMetalInstallationOptions),
/* harmony export */   fabricatedThicknessOptions: () => (/* binding */ fabricatedThicknessOptions),
/* harmony export */   finishOptions: () => (/* binding */ finishOptions),
/* harmony export */   metalFinishColors: () => (/* binding */ metalFinishColors),
/* harmony export */   metalFinishOptions: () => (/* binding */ metalFinishOptions),
/* harmony export */   metalInstallationOptions: () => (/* binding */ metalInstallationOptions),
/* harmony export */   metalOptions: () => (/* binding */ metalOptions),
/* harmony export */   metalThicknessOptions: () => (/* binding */ metalThicknessOptions),
/* harmony export */   stainlessSteelPolishedOptions: () => (/* binding */ stainlessSteelPolishedOptions)
/* harmony export */ });
const metalOptions = [{
  option: '304 Stainless Steel'
}, {
  option: '316 Stainless Steel'
}];
const metalThicknessOptions = [{
  thickness: '1/8"',
  value: '4'
}, {
  thickness: '7/32"',
  value: '6'
}, {
  thickness: '3/8"',
  value: '9'
}, {
  thickness: '1/2"',
  value: '12'
}];
const fabricatedThicknessOptions = [{
  thickness: '1"',
  value: '1'
}, {
  thickness: '1.5"',
  value: '1.5'
}, {
  thickness: '2"',
  value: '2'
}, {
  thickness: '3"',
  value: '3'
}, {
  thickness: '4"',
  value: '4'
}, {
  thickness: '5"',
  value: '5'
}, {
  thickness: '6"',
  value: '6'
}];
const finishOptions = [{
  option: 'Metal Finish'
}, {
  option: 'Painted Finish'
}];
const stainlessSteelPolishedOptions = [{
  option: 'Standard (Face)'
}, {
  option: 'Premium (Face & Side)'
}];
const metalFinishOptions = [{
  option: 'Stainless Steel Brushed'
}, {
  option: 'Stainless Steel Polished'
}, {
  option: 'Electroplated Gold Brushed'
}, {
  option: 'Electroplated Gold Polished'
}, {
  option: 'Electroplated Black Titanium Brushed'
}, {
  option: 'Electroplated Black Titanium Polished'
}, {
  option: 'Electroplated Bronze Brushed'
}, {
  option: 'Electroplated Red Copper Brushed'
}];
const metalFinishColors = [{
  name: 'Stainless Steel Brushed',
  color: '#caccce'
}, {
  name: 'Stainless Steel Polished',
  color: '#caccce'
}, {
  name: 'Electroplated Gold Brushed',
  color: '#ffbf00'
}, {
  name: 'Electroplated Gold Polished',
  color: '#ffbf00'
}, {
  name: 'Electroplated Black Titanium Brushed',
  color: '#14130E'
}, {
  name: 'Electroplated Black Titanium Polished',
  color: '#14130E'
}, {
  name: 'Electroplated Bronze Brushed',
  color: '#CD7F32'
}, {
  name: 'Electroplated Red Copper Brushed',
  color: '#771B0C'
}];
const metalInstallationOptions = [{
  option: 'Stud Mount'
}, {
  option: 'Stud with spacer'
}];
const fabricatedLogoInstallationOptions = [{
  option: 'Plain Mount'
}, {
  option: 'Stud Mount'
}];
const fabricatedMetalInstallationOptions = [{
  option: 'PVC Backing'
}, {
  option: 'Stud Mount'
}, {
  option: 'Stud with spacer'
}];


/***/ }),

/***/ "./src/scripts/products/pvc/PVCMetalLaminate/PVCMetalLaminate.js":
/*!***********************************************************************!*\
  !*** ./src/scripts/products/pvc/PVCMetalLaminate/PVCMetalLaminate.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ PVCMetalLaminate)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/pvc/PVCMetalLaminate/components/Letters.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/pvc/PVCMetalLaminate/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function PVCMetalLaminate() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        letters: '',
        comments: '',
        font: '',
        mounting: '',
        waterproof: '',
        thickness: '',
        metalLaminate: '',
        pvcBaseColor: {
          name: 'Black',
          color: '#000000'
        },
        letterHeight: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        sets: 1,
        customFont: '',
        customColor: '',
        studLength: '',
        spacerStandoffDistance: '',
        finishing: 'Matte',
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        const savedStorage = JSON.parse(localStorage.getItem(storage));
        if (savedStorage?.length > 0) {
          setSignage(savedStorage);
        } else {
          setSignage(currentSignage);
        }
      } else {
        //window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    comments: '',
    mounting: '',
    thickness: '',
    waterproof: '',
    finishing: 'Matte',
    usdPrice: 0,
    cadPrice: 0,
    pvcBaseColor: {
      name: 'Black',
      color: '#000000'
    },
    metalLaminate: '',
    customColor: '',
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    studLength: '',
    spacerStandoffDistance: '',
    sets: 1,
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          font: '',
          thickness_options: '',
          letterHeight: '',
          customFont: '',
          customColor: '',
          filePaths: [],
          fileNames: [],
          fileUrls: [],
          files: [],
          sets: 1
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, item.type === 'letters' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/pvc/PVCMetalLaminate/components/Letters.js":
/*!*************************************************************************!*\
  !*** ./src/scripts/products/pvc/PVCMetalLaminate/components/Letters.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _pvcOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../pvcOptions */ "./src/scripts/products/pvc/pvcOptions.js");
/* harmony import */ var _PVCMetalLaminate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../PVCMetalLaminate */ "./src/scripts/products/pvc/PVCMetalLaminate/PVCMetalLaminate.js");












const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
//const AcrylicLetterPricing = JSON.parse(NovaOptions.letter_x_logo_pricing);

function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_PVCMetalLaminate__WEBPACK_IMPORTED_MODULE_10__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [pvcBaseColor, setPvcBaseColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.pvcBaseColor);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.thickness);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('#000000');
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [customFont, setCustomFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customFont);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [metalLaminate, setMetalLaminate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalLaminate);
  const handleChangeMetalLaminate = e => {
    const selectedLaminate = _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.metalFinishColors.find(laminate => laminate.name === e.target.value);
    // Assuming setMetalLaminate and setColor are state setter functions
    setMetalLaminate(selectedLaminate.name);
    setColor(selectedLaminate.color);
  };
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [mountingSelections, setMountingSelections] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_pvcOptions__WEBPACK_IMPORTED_MODULE_9__.mountingOptions);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    min: 4,
    max: 39
  });
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if ('Outdoor (Waterproof)' === waterproof) {
      if ('Double-sided tape' === mounting) {
        setMounting('');
      }
      let newOptions = _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.mountingOptions.filter(option => option.value !== 'Double-sided tape');
      setMountingSelections(newOptions);
    } else {
      setMountingSelections(_pvcOptions__WEBPACK_IMPORTED_MODULE_9__.mountingOptions);
    }
  }, [waterproof]);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          font: font,
          thickness: selectedThickness,
          waterproof: waterproof,
          pvcBaseColor: pvcBaseColor,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          finishing: selectedFinishing,
          customFont: customFont,
          customColor: customColor,
          mounting: mounting,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance,
          metalLaminate: metalLaminate
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeMounting = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
    if (parseInt(target) === 40 && parseInt(selectedLetterHeight) === 4) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && selectedThickness && waterproof) {
      const pricingDetail = letterPricing[selectedLetterHeight - 4];
      const baseLetterPrice = pricingDetail[selectedThickness.thickness];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      lettersArray.forEach(letter => {
        let letterPrice = baseLetterPrice;
        if (letter === ' ') {
          // If the character is a space, set the price to 0 and skip further checks
          letterPrice = 0;
        } else if (letter.match(/[a-z]/)) {
          // Check for lowercase letter
          letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
        } else if (letter.match(/[A-Z]/)) {
          // Check for uppercase letter
          // Uppercase letters use 100% of base price, so no change needed
        } else if (letter.match(/[`~"*,.\-']/)) {
          // Check for small punctuation marks
          letterPrice *= smallPunctuations; // 30% of the base price
        } else if (letter.match(/[^a-zA-Z]/)) {
          // Check for symbol (not a letter or small punctuation)
          // Symbols use 100% of base price, so no change needed
        }

        // Adjusting for waterproof and finishing
        letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
        letterPrice *= selectedFinishing === 'Gloss' ? 1.03 : 1;
        letterPrice *= mounting === 'Double-sided tape' ? 1.01 : 1;
        letterPrice *= pvcBaseColor?.name !== 'Black' ? 1.1 : 1;
        totalLetterPrice += letterPrice;
      });
      if (mounting === 'Stud with spacer') {
        let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
        let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
        spacer = parseFloat(spacer.toFixed(2));
        totalLetterPrice += spacer;
      }
      totalLetterPrice *= sets;
      setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
      setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [selectedLetterHeight, selectedThickness, selectedFinishing, letters, waterproof, lettersHeight, mounting, font, sets, pvcBaseColor]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add your Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedThickness) missingFields.push('Select Thickness');
    if (!metalLaminate) missingFields.push('Select Metal Laminate');
    if (!pvcBaseColor.name) missingFields.push('Select PVC Base Color');
    if (pvcBaseColor?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [letters, font, pvcBaseColor, selectedThickness, waterproof, selectedLetterHeight, fileUrls, fontFileUrl, selectedFinishing, customColor, mounting, sets, studLength, spacerStandoffDistance, metalLaminate]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [letters, comments, font, selectedThickness, waterproof, pvcBaseColor, usdPrice, cadPrice, selectedLetterHeight, fileUrls, fileNames, filePaths, files, fontFileUrl, fontFileName, fontFilePath, fontFile, selectedFinishing, customFont, customColor, mounting, sets, studLength, spacerStandoffDistance, metalLaminate]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[selectedThickness?.thickness];
      return value !== '' && value !== null && value !== undefined && value !== false && value !== 0 && value !== '0' && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Height,
        max: newHeightOptions[newHeightOptions.length - 1].Height
      }));
    }
  }, [selectedThickness]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
    if (!openColor && !openFont) return;
    setOpenColor(false);
    setOpenFont(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    pvcBaseColor?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [pvcBaseColor, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font === 'Custom font' ? '' : font,
      color: color,
      textShadow: `-1px 1px 3px ${pvcBaseColor.color}, 0 0 1px #000000`
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: setOpenColor
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Thickness",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Laminate",
    onChange: handleChangeMetalLaminate,
    options: _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.metalFinishColors.map(laminate => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: laminate.name,
      selected: laminate.name === item.metalLaminate
    }, laminate.name)),
    value: metalLaminate
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "PVC BASE COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${pvcBaseColor.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: pvcBaseColor.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : pvcBaseColor.color
    }
  }), pvcBaseColor.name === '' ? 'CHOOSE OPTION' : pvcBaseColor.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setPvcBaseColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: item.finishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "MOUNTING OPTIONS",
    onChange: handleOnChangeMounting,
    options: mountingSelections.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: option.value,
      value: option.value,
      selected: option.value === mounting
    }, option.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, pvcBaseColor?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/pvc/PVCMetalLaminate/components/Logo.js":
/*!**********************************************************************!*\
  !*** ./src/scripts/products/pvc/PVCMetalLaminate/components/Logo.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _pvcOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../pvcOptions */ "./src/scripts/products/pvc/pvcOptions.js");
/* harmony import */ var _PVCMetalLaminate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../PVCMetalLaminate */ "./src/scripts/products/pvc/PVCMetalLaminate/PVCMetalLaminate.js");











const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_PVCMetalLaminate__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.thickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [maxWidthHeight, setMaxWidthHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(36);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileName, setFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileName);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [pvcBaseColor, setPvcBaseColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.pvcBaseColor);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [metalLaminate, setMetalLaminate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.metalLaminate);
  const handleChangeMetalLaminate = e => {
    setMetalLaminate(e.target.value);
  };
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [mountingSelections, setMountingSelections] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions);
  const [maxWidthOptions, setMaxWidthOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: maxWidthHeight
  }, (_, index) => {
    const val = 4 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  }));
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const handleOnChangeMounting = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (parseInt(selectedThickness.value) > 3) {
      setMaxWidthHeight(42);
    } else {
      setMaxWidthHeight(23);
      if (height > 25) {
        setHeight('');
      }
      if (width > 25) {
        setWidth('');
      }
    }
  }, [selectedThickness]);
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          thickness: selectedThickness,
          mounting: mounting,
          waterproof: waterproof,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          finishing: selectedFinishing,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance,
          pvcBaseColor: pvcBaseColor,
          metalLaminate: metalLaminate
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [comments, selectedThickness, waterproof, width, height, mounting, usdPrice, cadPrice, fileUrls, fileNames, selectedFinishing, files, filePaths, customColor, sets, studLength, spacerStandoffDistance, metalLaminate, pvcBaseColor]);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_6__.getLogoPricingTablebyThickness)(`${selectedThickness.value}`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 4][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        total *= selectedFinishing === 'Gloss' ? 1.03 : 1;
        total *= mounting === 'Double-sided tape' ? 1.01 : 1;
        total *= pvcBaseColor?.name !== 'Black' ? 1.1 : 1;
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, mounting, pvcBaseColor, sets]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!pvcBaseColor.name) missingFields.push('Select Color');
    if (pvcBaseColor?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [width, comments, height, selectedThickness, mounting, waterproof, fileUrls, fileNames, files, filePaths, selectedFinishing, pvcBaseColor, customColor, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if ('Outdoor (Waterproof)' === waterproof) {
      if ('Double-sided tape' === mounting) {
        setMounting('');
      }
      let newOptions = _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions.filter(option => option.value !== 'Double-sided tape');
      setMountingSelections(newOptions);
    } else {
      setMountingSelections(_pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions);
    }
  }, [waterproof]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__["default"])([colorRef], () => {
    if (!openColor) return;
    setOpenColor(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    pvcBaseColor?.name != 'Custom Color' && setCustomColor('');
  }, [pvcBaseColor]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Thickness",
    value: item.thickness?.value,
    onChange: handleOnChangeThickness,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === item.thickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Metal Laminate",
    onChange: handleChangeMetalLaminate,
    options: _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__.metalFinishColors.map(laminate => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: laminate.name,
      selected: laminate.name === item.metalLaminate
    }, laminate.name)),
    value: metalLaminate
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "PVC BASE COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${pvcBaseColor.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: pvcBaseColor.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : pvcBaseColor.color
    }
  }), pvcBaseColor.name === '' ? 'CHOOSE OPTION' : pvcBaseColor.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setPvcBaseColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: selectedFinishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMounting,
    options: mountingSelections.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value === mounting
    }, option.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, pvcBaseColor?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/pvc/PVCPainted/PVCPainted.js":
/*!***********************************************************!*\
  !*** ./src/scripts/products/pvc/PVCPainted/PVCPainted.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ PVCPainted)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Letters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Letters */ "./src/scripts/products/pvc/PVCPainted/components/Letters.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/pvc/PVCPainted/components/Logo.js");








const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function PVCPainted() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
        type: 'letters',
        title: 'LETTERS 1',
        letters: '',
        comments: '',
        font: '',
        mounting: '',
        waterproof: '',
        thickness: '',
        color: {
          name: '',
          color: ''
        },
        letterHeight: '',
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        sets: 1,
        customFont: '',
        customColor: '',
        studLength: '',
        spacerStandoffDistance: '',
        finishing: 'Matte',
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        const savedStorage = JSON.parse(localStorage.getItem(storage));
        if (savedStorage?.length > 0) {
          setSignage(savedStorage);
        } else {
          setSignage(currentSignage);
        }
      } else {
        //window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_6__["default"])(),
    comments: '',
    mounting: '',
    thickness: '',
    waterproof: '',
    finishing: 'Matte',
    usdPrice: 0,
    cadPrice: 0,
    color: {
      name: '',
      color: ''
    },
    customColor: '',
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    studLength: '',
    spacerStandoffDistance: '',
    sets: 1,
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      // Create new signage with incremented title number
      if (type === 'letters') {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          letters: '',
          font: '',
          thickness_options: '',
          letterHeight: '',
          customFont: '',
          customColor: '',
          filePaths: [],
          fileNames: [],
          fileUrls: [],
          files: [],
          sets: 1
        };
      } else {
        args = {
          type: type,
          title: `${type} ${count + 1}`.toUpperCase(),
          width: '',
          height: ''
        };
      }
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, item.type === 'letters' ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Letters__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_5__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('letters'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LETTERS", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)), signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/pvc/PVCPainted/components/Letters.js":
/*!*******************************************************************!*\
  !*** ./src/scripts/products/pvc/PVCPainted/components/Letters.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Letters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _FontsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../FontsDropdown */ "./src/scripts/FontsDropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _UploadFont__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../UploadFont */ "./src/scripts/UploadFont.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _pvcOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../pvcOptions */ "./src/scripts/products/pvc/pvcOptions.js");
/* harmony import */ var _PVCPainted__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../PVCPainted */ "./src/scripts/products/pvc/PVCPainted/PVCPainted.js");












const exchangeRate = 1.3;
const lowerCasePricing = parseFloat(NovaQuote.lowercase_pricing ? NovaQuote.lowercase_pricing : 1);
const smallPunctuations = parseFloat(NovaQuote.small_punctuations_pricing ? NovaQuote.small_punctuations_pricing : 1);
//const AcrylicLetterPricing = JSON.parse(NovaOptions.letter_x_logo_pricing);

function Letters({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_PVCPainted__WEBPACK_IMPORTED_MODULE_10__.QuoteContext);
  const [letters, setLetters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letters);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.comments);
  const [font, setFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.font);
  const [openFont, setOpenFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.thickness);
  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [fontFileName, setFontFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileName);
  const [fontFileUrl, setFontFileUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFileUrl);
  const [fontFilePath, setFontFilePath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFilePath);
  const [fontFile, setFontFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fontFile);
  const [letterHeightOptions, setLetterHeightOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [customFont, setCustomFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customFont);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [selectedLetterHeight, setSelectedLetterHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.letterHeight);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [mountingSelections, setMountingSelections] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_pvcOptions__WEBPACK_IMPORTED_MODULE_9__.mountingOptions);
  const [lettersHeight, setLettersHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    min: 4,
    max: 39
  });
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const fontRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const letterPricing = NovaQuote.letter_pricing_table?.pricing_table.length > 0 ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_7__["default"])(NovaQuote.letter_pricing_table.pricing_table) : [];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    console.log('Attempting to preload fonts...');
    async function preloadFonts() {
      try {
        await loadingFonts();
      } catch (error) {
        console.error('Error loading fonts:', error);
      }
    }
    preloadFonts();
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if ('Outdoor (Waterproof)' === waterproof) {
      if ('Double-sided tape' === mounting) {
        setMounting('');
      }
      let newOptions = _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.mountingOptions.filter(option => option.value !== 'Double-sided tape');
      setMountingSelections(newOptions);
    } else {
      setMountingSelections(_pvcOptions__WEBPACK_IMPORTED_MODULE_9__.mountingOptions);
    }
  }, [waterproof]);
  const loadingFonts = async () => {
    const loadPromises = NovaQuote.fonts.map(font => loadFont(font));
    await Promise.all(loadPromises);
  };
  async function loadFont({
    name,
    src
  }) {
    const fontFace = new FontFace(name, `url(${src})`);
    try {
      await fontFace.load();
      document.fonts.add(fontFace);
    } catch (e) {
      console.error(`Font ${name} failed to load`);
    }
  }
  const headlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const adjustFontSize = () => {
    const container = headlineRef.current.parentNode;
    const headline = headlineRef.current;

    // Reset the font-size to the maximum desired font-size
    headline.style.fontSize = '96px';

    // Check if the headline is wider than its container
    while (headline.scrollWidth > container.offsetWidth && parseFloat(window.getComputedStyle(headline).fontSize) > 0) {
      // Reduce the font-size by 1px until it fits
      headline.style.fontSize = `${parseFloat(window.getComputedStyle(headline).fontSize) - 1}px`;
    }
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          letters: letters,
          comments: comments,
          font: font,
          thickness: selectedThickness,
          waterproof: waterproof,
          color: color,
          letterHeight: selectedLetterHeight,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          fontFile: fontFile,
          fontFileName: fontFileName,
          fontFilePath: fontFilePath,
          fontFileUrl: fontFileUrl,
          finishing: selectedFinishing,
          customFont: customFont,
          customColor: customColor,
          mounting: mounting,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  const handleOnChangeLetters = e => setLetters(() => e.target.value);
  const handleComments = e => setComments(e.target.value);
  const handleSelectFont = value => setFont(value);
  const handleOnChangeMounting = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const handleOnChangeWaterproof = e => setWaterproof(e.target.value);
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
    if (parseInt(target) === 40 && parseInt(selectedLetterHeight) === 4) {
      setSelectedLetterHeight('');
    }
  };
  const handleOnChangeLetterHeight = e => {
    setSelectedLetterHeight(e.target.value);
  };
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (letterPricing.length > 0 && selectedLetterHeight && selectedThickness && waterproof) {
      const pricingDetail = letterPricing[selectedLetterHeight - 4];
      const baseLetterPrice = pricingDetail[selectedThickness.thickness];
      let totalLetterPrice = 0;
      const lettersArray = letters.trim().split('');
      const noLowerCase = NovaQuote.no_lowercase.includes(font);
      lettersArray.forEach(letter => {
        let letterPrice = baseLetterPrice;
        if (letter === ' ') {
          // If the character is a space, set the price to 0 and skip further checks
          letterPrice = 0;
        } else if (letter.match(/[a-z]/)) {
          // Check for lowercase letter
          letterPrice *= noLowerCase ? 1 : lowerCasePricing; // 80% of the base price
        } else if (letter.match(/[A-Z]/)) {
          // Check for uppercase letter
          // Uppercase letters use 100% of base price, so no change needed
        } else if (letter.match(/[`~"*,.\-']/)) {
          // Check for small punctuation marks
          letterPrice *= smallPunctuations; // 30% of the base price
        } else if (letter.match(/[^a-zA-Z]/)) {
          // Check for symbol (not a letter or small punctuation)
          // Symbols use 100% of base price, so no change needed
        }

        // Adjusting for waterproof and finishing
        letterPrice *= waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
        letterPrice *= selectedFinishing === 'Gloss' ? 1.03 : 1;
        letterPrice *= mounting === 'Double-sided tape' ? 1.01 : 1;
        totalLetterPrice += letterPrice;
      });
      if (mounting === 'Stud with spacer') {
        let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
        let spacer = totalLetterPrice * 1.02 > maxVal ? maxVal : totalLetterPrice * 1.02;
        spacer = parseFloat(spacer.toFixed(2));
        totalLetterPrice += spacer;
      }
      totalLetterPrice *= sets;
      setUsdPrice(parseFloat(totalLetterPrice).toFixed(2));
      setCadPrice((totalLetterPrice * parseFloat(exchangeRate)).toFixed(2));
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [selectedLetterHeight, selectedThickness, selectedFinishing, letters, waterproof, lettersHeight, mounting, font, sets]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setLetterHeightOptions(() => Array.from({
      length: parseInt(lettersHeight.max) - parseInt(lettersHeight.min) + 1
    }, (_, index) => {
      const val = parseInt(lettersHeight.min) + index;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
        key: index,
        value: val,
        selected: val === selectedLetterHeight
      }, val, "\"");
    }));
  }, [lettersHeight, letterHeightOptions]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    adjustFontSize();
  }, [letters]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!letters) missingFields.push('Add your Line Text');
    if (!font) missingFields.push('Select Font');
    if (font == 'Custom font' && !fontFileUrl) {
      missingFields.push('Upload your custom font.');
    }
    if (!selectedLetterHeight) missingFields.push('Select Letter Height');
    if (!selectedThickness) missingFields.push('Select Thickness');
    if (!color.name) missingFields.push('Select Color');
    if (color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [letters, font, color, selectedThickness, waterproof, selectedLetterHeight, fileUrls, fontFileUrl, selectedFinishing, customColor, mounting, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [letters, comments, font, selectedThickness, waterproof, color, usdPrice, cadPrice, selectedLetterHeight, fileUrls, fileNames, filePaths, files, fontFileUrl, fontFileName, fontFilePath, fontFile, selectedFinishing, customFont, customColor, mounting, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const newHeightOptions = letterPricing?.filter(item => {
      const value = item[selectedThickness?.thickness];
      return value !== '' && value !== null && value !== undefined && value !== false && value !== 0 && value !== '0' && !isNaN(value);
    });
    if (newHeightOptions.length > 0) {
      setLettersHeight(() => ({
        min: newHeightOptions[0].Height,
        max: newHeightOptions[newHeightOptions.length - 1].Height
      }));
    }
  }, [selectedThickness]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])([colorRef, fontRef], () => {
    if (!openColor && !openFont) return;
    setOpenColor(false);
    setOpenFont(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
    font != 'Custom font' && setFontFileUrl('');
  }, [color, font]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "mt-4 p-4 border border-gray-200 w-full h-72 flex align-middle justify-center rounded-md"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "w-full self-center"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "self-center text-center",
    ref: headlineRef,
    style: {
      margin: '0',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      fontFamily: font === 'Custom font' ? '' : font,
      color: color.color,
      textShadow: '0px 0px 1px rgba(0, 0, 0, 1)'
    }
  }, letters ? letters : 'PREVIEW'))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "py-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Text"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 color-black border-gray-200 text-sm font-bold rounded-md h-14 placeholder:text-slate-400 ",
    type: "text",
    onChange: handleOnChangeLetters,
    maxLength: 100,
    value: letters,
    placeholder: "YOUR TEXT HERE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_FontsDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    font: item.font,
    fontRef: fontRef,
    openFont: openFont,
    setOpenFont: setOpenFont,
    handleSelectFont: handleSelectFont,
    setOpenColor: setOpenColor
  }), font == 'Custom font' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFont__WEBPACK_IMPORTED_MODULE_4__["default"], {
    setFontFilePath: setFontFilePath,
    setFontFile: setFontFile,
    fontFilePath: fontFilePath,
    fontFileUrl: fontFileUrl,
    isLoading: isLoading,
    setFontFileUrl: setFontFileUrl,
    setFontFileName: setFontFileName,
    tempFolder: tempFolder
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Thickness",
    value: selectedThickness?.value,
    onChange: handleOnChangeThickness,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === selectedThickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Letter Height",
    onChange: handleOnChangeLetterHeight,
    options: letterHeightOptions,
    value: item.letterHeight
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_6__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_9__.finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: item.finishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: handleOnChangeWaterproof,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: item.waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting Options",
    onChange: handleOnChangeMounting,
    options: mountingSelections.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: option.value,
      value: option.value,
      selected: option.value === mounting
    }, option.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_8__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_3__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] pt-4"
  }, "We size the letters in proportion to your chosen font. Some uppercase/lowercase letters may appear shorter or taller than your selected height on the form to maintain visual harmony."));
}

/***/ }),

/***/ "./src/scripts/products/pvc/PVCPainted/components/Logo.js":
/*!****************************************************************!*\
  !*** ./src/scripts/products/pvc/PVCPainted/components/Logo.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _pvcOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../pvcOptions */ "./src/scripts/products/pvc/pvcOptions.js");
/* harmony import */ var _PVCPainted__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../PVCPainted */ "./src/scripts/products/pvc/PVCPainted/PVCPainted.js");











const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_PVCPainted__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.thickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [maxWidthHeight, setMaxWidthHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(36);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileName, setFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileName);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.color);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [mounting, setMounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [mountingSelections, setMountingSelections] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions);
  const [maxWidthOptions, setMaxWidthOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: maxWidthHeight
  }, (_, index) => {
    const val = 4 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  }));
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const handleOnChangeMounting = e => {
    const target = e.target.value;
    setMounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (parseInt(selectedThickness.value) > 3) {
      setMaxWidthHeight(42);
    } else {
      setMaxWidthHeight(23);
      if (height > 25) {
        setHeight('');
      }
      if (width > 25) {
        setWidth('');
      }
    }
  }, [selectedThickness]);
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          thickness: selectedThickness,
          mounting: mounting,
          waterproof: waterproof,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          finishing: selectedFinishing,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          color: color,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [comments, selectedThickness, waterproof, width, height, mounting, usdPrice, cadPrice, fileUrls, fileNames, selectedFinishing, files, filePaths, color, customColor, sets, studLength, spacerStandoffDistance]);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_6__.getLogoPricingTablebyThickness)(`${selectedThickness.value}`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 4][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        total *= selectedFinishing === 'Gloss' ? 1.03 : 1;
        total *= mounting === 'Double-sided tape' ? 1.01 : 1;
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, mounting, sets]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!color.name) missingFields.push('Select Color');
    if (color?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select Mounting');
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [width, comments, height, selectedThickness, mounting, waterproof, fileUrls, fileNames, files, filePaths, selectedFinishing, color, customColor, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if ('Outdoor (Waterproof)' === waterproof) {
      if ('Double-sided tape' === mounting) {
        setMounting('');
      }
      let newOptions = _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions.filter(option => option.value !== 'Double-sided tape');
      setMountingSelections(newOptions);
    } else {
      setMountingSelections(_pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions);
    }
  }, [waterproof]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__["default"])([colorRef], () => {
    if (!openColor) return;
    setOpenColor(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    color?.name != 'Custom Color' && setCustomColor('');
  }, [color]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Thickness",
    value: item.thickness?.value,
    onChange: handleOnChangeThickness,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === item.thickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${color.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
    }
  }), color.name === '' ? 'CHOOSE OPTION' : color.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: selectedFinishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Mounting",
    onChange: handleOnChangeMounting,
    options: mountingSelections.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value === mounting
    }, option.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, color?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/pvc/PVCUv/PVCUv.js":
/*!*************************************************!*\
  !*** ./src/scripts/products/pvc/PVCUv/PVCUv.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuoteContext: () => (/* binding */ QuoteContext),
/* harmony export */   "default": () => (/* binding */ PVCUv)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Sidebar */ "./src/scripts/Sidebar.js");
/* harmony import */ var _Signage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Signage */ "./src/scripts/Signage.js");
/* harmony import */ var _svg_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../svg/Icons */ "./src/scripts/svg/Icons.js");
/* harmony import */ var _components_Logo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Logo */ "./src/scripts/products/pvc/PVCUv/components/Logo.js");







const QuoteContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
function PVCUv() {
  const [signage, setSignage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [missing, setMissing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [tempFolder, setTempFolder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const tempFolderName = `temp-${Math.random().toString(36).substring(2, 9)}`;
  const storage = window.location.href + NovaQuote.user_id + NovaQuote.quote_div_id + 'x';
  const localStorageQuote = localStorage.getItem(storage);
  const savedStorage = JSON.parse(localStorageQuote);
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  function setDefaultSignage() {
    if (savedStorage?.length > 0) {
      setSignage(savedStorage);
    } else {
      setSignage([{
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
        type: 'logo',
        title: 'LOGO 1',
        comments: '',
        mounting: '',
        waterproof: '',
        thickness: '',
        pvcBaseColor: {
          name: 'Black',
          color: '#000000'
        },
        usdPrice: 0,
        cadPrice: 0,
        filePaths: [],
        fileNames: [],
        fileUrls: [],
        files: [],
        finishing: 'Matte',
        studLength: '',
        spacerStandoffDistance: '',
        sets: 1,
        product: NovaQuote.product
      }]);
    }
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting === '1') {
      const currentSignage = JSON.parse(NovaQuote.signage);
      if (currentSignage) {
        const savedStorage = JSON.parse(localStorage.getItem(storage));
        if (savedStorage?.length > 0) {
          setSignage(savedStorage);
        } else {
          setSignage(currentSignage);
        }
      } else {
        //window.location.href = window.location.pathname;
      }
    } else {
      setDefaultSignage();
    }
  }, []);
  const defaultArgs = {
    id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__["default"])(),
    comments: '',
    mounting: '',
    thickness: '',
    waterproof: '',
    finishing: 'Matte',
    usdPrice: 0,
    pvcBaseColor: {
      name: 'Black',
      color: '#000000'
    },
    cadPrice: 0,
    filePaths: [],
    fileNames: [],
    fileUrls: [],
    files: [],
    studLength: '',
    spacerStandoffDistance: '',
    sets: 1,
    product: NovaQuote.product
  };
  function addSignage(type) {
    setSignage(prevSignage => {
      // Count how many signages of this type already exist
      const count = prevSignage.filter(sign => sign.type === type).length;
      let args;
      args = {
        type: type,
        title: `${type} ${count + 1}`.toUpperCase(),
        width: '',
        height: ''
      };
      const newSignage = {
        ...defaultArgs,
        ...args
      };

      // Append the new signage to the array
      return [...prevSignage, newSignage];
    });
  }

  /* useEffect(() => {
  	localStorage.setItem(storage + '-x', JSON.stringify(signage));
  }, [signage]); */

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (NovaQuote.is_editting.length === 0) {
      const savedStorageFolder = JSON.parse(localStorage.getItem(window.location.href + NovaQuote.user_id + '-folder'));
      if (savedStorageFolder?.length > 0) {
        setTempFolder(savedStorageFolder);
      } else {
        localStorage.setItem(window.location.href + NovaQuote.user_id + '-folder', JSON.stringify(tempFolderName));
        setTempFolder(tempFolderName);
      }
    } else {
      setTempFolder(`Q-${NovaQuote.current_quote_id}`);
    }
  }, []);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(QuoteContext.Provider, {
    value: {
      signage,
      setSignage,
      addSignage,
      missing,
      setMissing,
      tempFolder,
      isLoading,
      setIsLoading
    }
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:flex gap-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "md:w-3/4 w-full"
  }, signage.map((item, index) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Signage__WEBPACK_IMPORTED_MODULE_2__["default"], {
    index: index,
    id: item.id,
    item: item,
    signage: signage,
    setSignage: setSignage,
    addSignage: addSignage,
    setMissing: setMissing,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_Logo__WEBPACK_IMPORTED_MODULE_4__["default"], {
    key: item.id,
    item: item
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "flex gap-2"
  }, signage.length < 10 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
    className: "flex leading-none items-center rounded-md border bg-white border-gray-200 p-4 cursor-pointer w-[193px] justify-between hover:bg-slate-600 font-title text-black hover:text-white",
    onClick: () => addSignage('logo'),
    style: {
      border: '1px solid #d2d2d2d2'
    }
  }, "ADD LOGO", (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_svg_Icons__WEBPACK_IMPORTED_MODULE_3__.PlusIcon, null)))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Sidebar__WEBPACK_IMPORTED_MODULE_1__["default"], {
    signage: signage,
    required: missing,
    tempFolder: tempFolder,
    storage: storage,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/pvc/PVCUv/components/Logo.js":
/*!***********************************************************!*\
  !*** ./src/scripts/products/pvc/PVCUv/components/Logo.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Dropdown */ "./src/scripts/Dropdown.js");
/* harmony import */ var _UploadFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../UploadFiles */ "./src/scripts/UploadFiles.js");
/* harmony import */ var _utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/ClickOutside */ "./src/scripts/utils/ClickOutside.js");
/* harmony import */ var _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/ColorOptions */ "./src/scripts/utils/ColorOptions.js");
/* harmony import */ var _utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/ConvertJson */ "./src/scripts/utils/ConvertJson.js");
/* harmony import */ var _utils_Pricing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/Pricing */ "./src/scripts/utils/Pricing.js");
/* harmony import */ var _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/SignageOptions */ "./src/scripts/utils/SignageOptions.js");
/* harmony import */ var _pvcOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../pvcOptions */ "./src/scripts/products/pvc/pvcOptions.js");
/* harmony import */ var _PVCUv__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../PVCUv */ "./src/scripts/products/pvc/PVCUv/PVCUv.js");











const exchangeRate = 1.3;
function Logo({
  item
}) {
  const {
    signage,
    setSignage,
    setMissing,
    tempFolder,
    isLoading,
    setIsLoading
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_PVCUv__WEBPACK_IMPORTED_MODULE_9__.QuoteContext);
  const [selectedThickness, setSelectedThickness] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.thickness);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.width);
  const [maxWidthHeight, setMaxWidthHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(36);
  const [usdPrice, setUsdPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.usdPrice);
  const [cadPrice, setCadPrice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.cadPrice);
  const [fileName, setFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileName);
  const [openColor, setOpenColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [pvcBaseColor, setPvcBaseColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.pvcBaseColor);
  const [customColor, setCustomColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.customColor);
  const [mounting, setmounting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.mounting);
  const [sets, setSets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.sets);
  const handleOnChangeSets = e => {
    setSets(e.target.value);
  };
  const [studLength, setStudLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.studLength);
  const [spacerStandoffOptions, setSpacerStandoffOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions);
  const [spacerStandoffDistance, setSpacerStandoffDistance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.spacerStandoffDistance);
  const handleonChangeSpacerDistance = e => {
    setSpacerStandoffDistance(e.target.value);
  };
  const handleonChangeStudLength = e => {
    const target = e.target.value;
    setStudLength(target); // Directly set the value without a callback

    if (target === '1.5"') {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }]);
      if (!['0.5"', '1"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if not one of the valid options
      }
    } else if (['3.2"', '4"'].includes(target)) {
      setSpacerStandoffOptions([{
        value: '0.5"'
      }, {
        value: '1"'
      }, {
        value: '1.5"'
      }, {
        value: '2"'
      }]);
      if (['3"', '4"'].includes(spacerStandoffDistance)) {
        setSpacerStandoffDistance(''); // Reset if the distance is invalid for these options
      }
    } else {
      setSpacerStandoffOptions(_utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.spacerStandoffDefaultOptions); // Reset to default if none of the conditions are met
    }

    if (target === '') {
      setSpacerStandoffDistance(''); // Always reset if the target is empty
    }
  };

  const [fileNames, setFileNames] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileNames);
  const [fileUrls, setFileUrls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.fileUrls);
  const [filePaths, setFilePaths] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.filePaths);
  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.files);
  const [selectedFinishing, setSelectedFinishing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.finishing);
  const [mountingSelections, setmountingSelections] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions);
  const [maxWidthOptions, setMaxWidthOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: maxWidthHeight
  }, (_, index) => {
    const val = 4 + index;
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      key: index,
      value: val
    }, val, "\"");
  }));
  const colorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.height);
  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [waterproof, setWaterproof] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(item.waterproof);
  const handleOnChangemounting = e => {
    const target = e.target.value;
    setmounting(target);
    if (target === 'Stud with spacer' || target === 'Stud Mount') {
      if (target === 'Stud Mount') {
        setSpacerStandoffDistance('');
      }
    } else {
      setStudLength('');
      setSpacerStandoffDistance('');
    }
  };
  function handleComments(e) {
    setComments(e.target.value);
  }
  const handleOnChangeThickness = e => {
    const target = e.target.value;
    const selected = _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.filter(option => option.value === target);
    setSelectedThickness(() => selected[0]);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (parseInt(selectedThickness.value) > 3) {
      setMaxWidthHeight(42);
    } else {
      setMaxWidthHeight(23);
      if (height > 25) {
        setHeight('');
      }
      if (width > 25) {
        setWidth('');
      }
    }
  }, [selectedThickness]);
  const handleChangeFinishing = e => {
    setSelectedFinishing(e.target.value);
  };
  function updateSignage() {
    const updatedSignage = signage.map(sign => {
      if (sign.id === item.id) {
        return {
          ...sign,
          comments: comments,
          thickness: selectedThickness,
          mounting: mounting,
          waterproof: waterproof,
          width: width,
          height: height,
          usdPrice: usdPrice,
          cadPrice: cadPrice,
          finishing: selectedFinishing,
          files: files,
          fileNames: fileNames,
          filePaths: filePaths,
          fileUrls: fileUrls,
          pvcBaseColor: pvcBaseColor,
          customColor: customColor,
          sets: sets,
          studLength: studLength,
          spacerStandoffDistance: spacerStandoffDistance
        };
      } else {
        return sign;
      }
    });
    setSignage(() => updatedSignage);
  }
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setComments(item.comments);
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateSignage();
  }, [comments, selectedThickness, waterproof, width, height, mounting, usdPrice, cadPrice, fileUrls, fileNames, selectedFinishing, files, filePaths, pvcBaseColor, customColor, sets, studLength, spacerStandoffDistance]);
  const logoPricingObject = NovaQuote.logo_pricing_tables;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (width && height && selectedThickness && waterproof && logoPricingObject !== null) {
      const logoPricing = (0,_utils_Pricing__WEBPACK_IMPORTED_MODULE_6__.getLogoPricingTablebyThickness)(`${selectedThickness.value}`, logoPricingObject);
      if (logoPricing !== undefined) {
        const logoPricingTable = logoPricing !== undefined ? (0,_utils_ConvertJson__WEBPACK_IMPORTED_MODULE_5__["default"])(logoPricing) : [];
        const computed = logoPricingTable.length > 0 ? logoPricingTable[width - 4][height] : 0;
        let multiplier = 0;
        if (waterproof) {
          multiplier = waterproof === 'Indoor (Not Waterproof)' ? 1 : 1.03;
        }
        let total = parseFloat((computed * multiplier).toFixed(2));
        total *= selectedFinishing === 'Gloss' ? 1.03 : 1;
        total *= mounting === 'Double-sided tape' ? 1.01 : 1;
        total *= pvcBaseColor?.name === 'Black' ? 1.2 : 1.1;
        if (mounting === 'Stud with spacer') {
          let maxVal = wcumcs_vars_data.currency === 'USD' ? 25 : 25 * 1.3;
          let spacer = total * 1.02 > maxVal ? maxVal : total * 1.02;
          spacer = parseFloat(spacer.toFixed(2));
          total += spacer;
        }
        total *= sets;
        setUsdPrice(parseFloat(total.toFixed(2)));
        setCadPrice((total * parseFloat(exchangeRate)).toFixed(2));
      } else {
        setUsdPrice(0);
        setCadPrice(0);
      }
    } else {
      setUsdPrice(0);
      setCadPrice(0);
    }
  }, [width, height, selectedThickness, waterproof, selectedFinishing, mounting, pvcBaseColor, mounting, sets]);
  const checkAndAddMissingFields = () => {
    const missingFields = [];
    if (!selectedThickness) missingFields.push('Select Acrylic Thickness');
    if (!width) missingFields.push('Select Logo Width');
    if (!height) missingFields.push('Select Logo Height');
    if (!waterproof) missingFields.push('Select Waterproof');
    if (!mounting) missingFields.push('Select mounting');
    if (!pvcBaseColor.name) missingFields.push('Select PVC Base Color');
    if (pvcBaseColor?.name === 'Custom Color' && !customColor) {
      missingFields.push('Add the Pantone color code of your custom color.');
    }
    if (mounting === 'Stud with spacer') {
      if (!studLength) missingFields.push('Select Stud Length');
      if (!spacerStandoffDistance) missingFields.push('Select Standoff Space');
    }
    if (!selectedFinishing) missingFields.push('Select Finishing');
    if (!fileUrls || fileUrls.length === 0) missingFields.push('Upload a PDF/AI File');
    if (!sets) missingFields.push('Select Quantity');
    if (missingFields.length > 0) {
      setMissing(prevMissing => {
        const existingIndex = prevMissing.findIndex(entry => entry.id === item.id);
        if (existingIndex !== -1) {
          const updatedMissing = [...prevMissing];
          updatedMissing[existingIndex] = {
            ...updatedMissing[existingIndex],
            missingFields: missingFields
          };
          return updatedMissing;
        } else if (missingFields.length > 0) {
          return [...prevMissing, {
            id: item.id,
            title: item.title,
            missingFields: missingFields
          }];
        }
        console.log(prevMissing);
        return prevMissing;
      });
    } else {
      setMissing(current => {
        const updatedMissing = current.filter(sign => sign.id !== item.id);
        return updatedMissing;
      });
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkAndAddMissingFields();
  }, [width, comments, height, selectedThickness, mounting, waterproof, fileUrls, fileNames, files, filePaths, selectedFinishing, sets, studLength, spacerStandoffDistance]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if ('Outdoor (Waterproof)' === waterproof) {
      if ('Double-sided tape' === mounting) {
        setmounting('');
      }
      let newOptions = _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions.filter(option => option.value !== 'Double-sided tape');
      setmountingSelections(newOptions);
    } else {
      setmountingSelections(_pvcOptions__WEBPACK_IMPORTED_MODULE_8__.mountingOptions);
    }
  }, [waterproof]);
  (0,_utils_ClickOutside__WEBPACK_IMPORTED_MODULE_3__["default"])([colorRef], () => {
    if (!openColor) return;
    setOpenColor(false);
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    pvcBaseColor?.name != 'Custom Color' && setCustomColor('');
  }, [pvcBaseColor]);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid mb-6"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Thickness",
    value: item.thickness?.value,
    onChange: handleOnChangeThickness,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.thicknessOptions.map(thickness => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: thickness.value,
      selected: thickness === item.thickness
    }, thickness.thickness))
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Width",
    value: width,
    onChange: e => setWidth(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Logo Height",
    value: height,
    onChange: e => setHeight(e.target.value),
    options: maxWidthOptions
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] relative",
    ref: colorRef
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "PVC BASE COLOR"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `flex items-center px-2 select border border-gray-200 w-full rounded-md text-sm font-title uppercase h-[40px] cursor-pointer ${pvcBaseColor.name ? 'text-black' : 'text-[#dddddd]'}`,
    onClick: () => setOpenColor(prev => !prev)
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
    className: "rounded-full w-[18px] h-[18px] border mr-2",
    style: {
      background: pvcBaseColor.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : pvcBaseColor.color
    }
  }), pvcBaseColor.name === '' ? 'CHOOSE OPTION' : pvcBaseColor.name), openColor && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "absolute w-[205px] max-h-[180px] bg-white z-20 border border-gray-200 rounded-md overflow-y-auto"
  }, _utils_ColorOptions__WEBPACK_IMPORTED_MODULE_4__.colorOptions.map(color => {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2 cursor-pointer flex items-center gap-2 hover:bg-slate-200 text-sm",
      onClick: () => {
        setPvcBaseColor(color);
        setOpenColor(false);
      }
    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "w-[18px] h-[18px] inline-block rounded-full border",
      style: {
        background: color.name == 'Custom Color' ? `conic-gradient( from 90deg, violet, indigo, blue, green, yellow, orange, red, violet)` : color.color
      }
    }), color.name);
  }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Finishing Options",
    onChange: handleChangeFinishing,
    options: _pvcOptions__WEBPACK_IMPORTED_MODULE_8__.finishingOptions.map(finishing => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: finishing.name,
      selected: finishing.name === item.finishing
    }, finishing.name)),
    value: selectedFinishing
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Environment",
    onChange: e => setWaterproof(e.target.value),
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.waterProofOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.option,
      selected: option.option == item.waterproof
    }, option.option)),
    value: waterproof
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "mounting",
    onChange: handleOnChangemounting,
    options: mountingSelections.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value === mounting
    }, option.value)),
    value: item.mounting
  }), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "STANDOFF SPACE",
    onChange: handleonChangeSpacerDistance,
    options: spacerStandoffOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.spacerStandoffDistance
    }, option.value)),
    value: item.spacerStandoffDistance
  })), mounting === 'Stud Mount' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Stud Length",
    onChange: handleonChangeStudLength,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.studLengthOptions.map(option => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
      value: option.value,
      selected: option.value == item.studLength
    }, option.value)),
    value: item.studLength
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"], {
    title: "Quantity",
    onChange: handleOnChangeSets,
    options: _utils_SignageOptions__WEBPACK_IMPORTED_MODULE_7__.setOptions,
    value: sets,
    onlyValue: true
  })), mounting === 'Stud with spacer' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "text-xs text-[#9F9F9F] mb-4"
  }, "*Note: The spacer will be black (default) or match the painted sign's color."), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "quote-grid"
  }, pvcBaseColor?.name == 'Custom Color' && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "Custom Color"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md h-[40px] placeholder:text-slate-400",
    type: "text",
    value: customColor,
    onChange: e => setCustomColor(e.target.value),
    placeholder: "ADD THE PANTONE COLOR CODE"
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "px-[1px] col-span-4"
  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
    className: "uppercase font-title text-sm tracking-[1.4px] px-2"
  }, "COMMENTS"), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
    className: "w-full py-4 px-2 border-gray-200 color-black text-sm font-bold rounded-md placeholder:text-slate-400",
    value: comments,
    onChange: handleComments,
    placeholder: "ADD COMMENTS",
    rows: 4
  })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_UploadFiles__WEBPACK_IMPORTED_MODULE_2__["default"], {
    setFilePaths: setFilePaths,
    setFiles: setFiles,
    filePaths: filePaths,
    fileUrls: fileUrls,
    fileNames: fileNames,
    setFileUrls: setFileUrls,
    setFileNames: setFileNames,
    tempFolder: tempFolder,
    isLoading: isLoading,
    setIsLoading: setIsLoading
  })));
}

/***/ }),

/***/ "./src/scripts/products/pvc/pvcOptions.js":
/*!************************************************!*\
  !*** ./src/scripts/products/pvc/pvcOptions.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   finishingOptions: () => (/* binding */ finishingOptions),
/* harmony export */   installationOptions: () => (/* binding */ installationOptions),
/* harmony export */   metalLaminateOptions: () => (/* binding */ metalLaminateOptions),
/* harmony export */   mountingOptions: () => (/* binding */ mountingOptions),
/* harmony export */   thicknessOptions: () => (/* binding */ thicknessOptions)
/* harmony export */ });
const finishingOptions = [{
  name: 'Matte'
}, {
  name: 'Gloss'
}];
const installationOptions = [{
  value: 'Plain'
}, {
  value: 'Double-sided tape'
}, {
  value: 'Pad - Combination All'
}, {
  value: 'Stud Mount'
}, {
  value: 'Stud with spacer'
}];
const mountingOptions = [{
  value: 'Plain'
}, {
  value: 'Double-sided tape'
}, {
  value: 'Pad - Combination All'
}, {
  value: 'Stud Mount'
}, {
  value: 'Stud with spacer'
}];
const thicknessOptions = [{
  thickness: '1/2"',
  value: '12mm'
}, {
  thickness: '3/4"',
  value: '20mm'
}, {
  thickness: '1"',
  value: '25mm'
}, {
  thickness: '1 1/2"',
  value: '40mm'
}];
const metalLaminateOptions = [{
  option: 'Stainless Steel Brushed'
}, {
  option: 'Stainless Steel Polished'
}, {
  option: 'Black Titanium Brushed'
}, {
  option: 'Black Titanium Polished'
}, {
  option: 'Gold Brushed'
}, {
  option: 'Gold Polished'
}];

/***/ }),

/***/ "./src/scripts/svg/Icons.js":
/*!**********************************!*\
  !*** ./src/scripts/svg/Icons.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClearIcon: () => (/* binding */ ClearIcon),
/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon),
/* harmony export */   CollapseIcon: () => (/* binding */ CollapseIcon),
/* harmony export */   DuplicateIcon: () => (/* binding */ DuplicateIcon),
/* harmony export */   LoadingIcon: () => (/* binding */ LoadingIcon),
/* harmony export */   PlusIcon: () => (/* binding */ PlusIcon),
/* harmony export */   TrashIcon: () => (/* binding */ TrashIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const CollapseIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "6",
  height: "11",
  viewBox: "0 0 6 11",
  fill: "none"
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
  d: "M0.933333 11L0 10.0375L3 6.94375L6 10.0375L5.06667 11L3 8.86875L0.933333 11ZM3 4.05625L0 0.9625L0.933333 0L3 2.13125L5.06667 0L6 0.9625L3 4.05625Z",
  fill: "black"
}));
const TrashIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "11",
  height: "13",
  viewBox: "0 0 11 13",
  fill: "none"
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
  d: "M0.6875 13V2.16667H0V0.722222H3.4375V0H7.5625V0.722222H11V2.16667H10.3125V13H0.6875ZM2.0625 11.5556H8.9375V2.16667H2.0625V11.5556ZM3.4375 10.1111H4.8125V3.61111H3.4375V10.1111ZM6.1875 10.1111H7.5625V3.61111H6.1875V10.1111Z",
  fill: "black"
}));
const ClearIcon = ({
  loading
}) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 16",
  fill: "currentColor",
  className: `w-4 h-4 ${loading && 'animate-spin'}`
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
  fillRule: "evenodd",
  d: "M13.836 2.477a.75.75 0 0 1 .75.75v3.182a.75.75 0 0 1-.75.75h-3.182a.75.75 0 0 1 0-1.5h1.37l-.84-.841a4.5 4.5 0 0 0-7.08.932.75.75 0 0 1-1.3-.75 6 6 0 0 1 9.44-1.242l.842.84V3.227a.75.75 0 0 1 .75-.75Zm-.911 7.5A.75.75 0 0 1 13.199 11a6 6 0 0 1-9.44 1.241l-.84-.84v1.371a.75.75 0 0 1-1.5 0V9.591a.75.75 0 0 1 .75-.75H5.35a.75.75 0 0 1 0 1.5H3.98l.841.841a4.5 4.5 0 0 0 7.08-.932.75.75 0 0 1 1.025-.273Z",
  clipRule: "evenodd"
}));
const DuplicateIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "14",
  viewBox: "0 0 12 14",
  fill: "none"
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
  d: "M2.82353 11.2V0H12V11.2H2.82353ZM4.23529 9.8H10.5882V1.4H4.23529V9.8ZM0 14V2.8H1.41176V12.6H9.17647V14H0Z",
  fill: "black"
}));
const PlusIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "14",
  height: "14",
  viewBox: "0 0 14 14",
  fill: "none"
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("line", {
  x1: "7",
  y1: "1",
  x2: "7",
  y2: "13",
  stroke: "black",
  "stroke-width": "2",
  "stroke-linecap": "square",
  stroke: "currentColor"
}), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("line", {
  x1: "13",
  y1: "7",
  x2: "1",
  y2: "7",
  stroke: "black",
  "stroke-width": "2",
  "stroke-linecap": "square",
  stroke: "currentColor"
}));
const CloseIcon = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 24 24",
  "stroke-width": "1.5",
  stroke: "currentColor",
  class: "w-6 h-6"
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  d: "M6 18L18 6M6 6l12 12"
}));
const LoadingIcon = ({
  text
}) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
  className: "flex justify-center items-center"
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
  class: "animate-spin -ml-1 mr-3 h-5 w-5 text-white",
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 24 24"
}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("circle", {
  class: "opacity-25",
  cx: "12",
  cy: "12",
  r: "10",
  stroke: "currentColor",
  "stroke-width": "4"
}), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
  class: "opacity-75",
  fill: "currentColor",
  d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
})), text);

/***/ }),

/***/ "./src/scripts/utils/ClickOutside.js":
/*!*******************************************!*\
  !*** ./src/scripts/utils/ClickOutside.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useOutsideClick)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

function useOutsideClick(refs, callback) {
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    function handleClickOutside(event) {
      if (refs.every(ref => ref.current && !ref.current.contains(event.target))) {
        callback();
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [refs, callback]);
}

/***/ }),

/***/ "./src/scripts/utils/ColorOptions.js":
/*!*******************************************!*\
  !*** ./src/scripts/utils/ColorOptions.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   colorOptions: () => (/* binding */ colorOptions),
/* harmony export */   metalFinishColors: () => (/* binding */ metalFinishColors),
/* harmony export */   translucentGraphicFilms: () => (/* binding */ translucentGraphicFilms),
/* harmony export */   whiteOptions: () => (/* binding */ whiteOptions)
/* harmony export */ });
const colorOptions = [{
  name: 'Custom Color',
  color: ''
}, {
  name: 'White',
  color: '#ffffff'
}, {
  name: 'Black',
  color: '#000000'
}, {
  name: 'Dove Grey',
  color: '#6d6c6c'
}, {
  name: 'Grey',
  color: '#808080'
}, {
  name: 'Desert Sand',
  color: '#edc9af'
}, {
  name: 'Ivory',
  color: '#fffff0'
}, {
  name: 'Lemon Yellow',
  color: '#fffff0'
}, {
  name: 'Yellow',
  color: '#ffff00'
}, {
  name: 'Citrus Yellow',
  color: '#fef250'
}, {
  name: 'Sundance Yellow',
  color: '#ffae00'
}, {
  name: 'Schoolbus Yellow',
  color: '#e8a317'
}, {
  name: 'Orange',
  color: '#ffa500'
}, {
  name: 'Red-Orange',
  color: '#ff5349'
}, {
  name: 'Rampart Orange',
  color: '#ef5e54'
}, {
  name: 'Red',
  color: '#ff0000'
}, {
  name: 'Brick Red',
  color: '#cb4154'
}, {
  name: 'Black Cherry',
  color: '#5e0013'
}, {
  name: 'Maroon',
  color: '#800000'
}, {
  name: 'Magenta',
  color: '#ff00ff'
}, {
  name: 'Violet Toner',
  color: '#3d4d97'
}, {
  name: 'Purple',
  color: '#800080'
}, {
  name: 'Midnight Blue',
  color: '#191970'
}, {
  name: 'Dark Blue',
  color: '#00008b'
}, {
  name: 'Medium Blue',
  color: '#0000cd'
}, {
  name: 'Blue',
  color: '#0000ff'
}, {
  name: 'Light Blue',
  color: '#add8e6'
}, {
  name: 'Marine Reef Blue',
  color: '#305279'
}, {
  name: 'Teal',
  color: '#008080'
}, {
  name: 'Safety Green',
  color: '#c6d219'
}, {
  name: 'Spring Green',
  color: '#00ff7f'
}, {
  name: 'Emerald Green',
  color: '#50c878'
}, {
  name: 'Federal Green',
  color: '#005d39'
}, {
  name: 'Light Green',
  color: '#90ee90'
}, {
  name: 'Dark Green',
  color: '#013220'
}, {
  name: 'Hunter Green',
  color: '#355e3b'
}, {
  name: 'Brown',
  color: '#964b00'
}];
const metalFinishColors = [{
  name: 'Stainless Steel Brushed',
  color: '#caccce'
}, {
  name: 'Stainless Steel Polished',
  color: '#caccce'
}, {
  name: 'Black Titanium Brushed',
  color: '#14130E'
}, {
  name: 'Black Titanium Polished',
  color: '#14130E'
}, {
  name: 'Gold Brushed',
  color: '#ffbf00'
}, {
  name: 'Gold Polished',
  color: '#ffbf00'
}];
const whiteOptions = [{
  option: 'White'
}, {
  option: '3M Vinyl'
}];
const translucentGraphicFilms = [{
  name: 'Ivory',
  color: '#ded1b4',
  code: '3630-005'
}, {
  name: 'Light Beige',
  color: '#c9bbae',
  code: '3630-149'
}, {
  name: 'Silver',
  color: '#b5b4bc',
  code: '3630-121'
}, {
  name: 'Gold Nugget',
  color: '#bf9152',
  code: '3630-141'
}, {
  name: 'Gold Metallic',
  color: '#a4896d',
  code: '3630-131'
}, {
  name: 'Bronze',
  color: '#b76e4b',
  code: '3630-129'
}, {
  name: 'Shadow Grey',
  color: '#8b858a',
  code: '3630-71'
}, {
  name: 'Silver Grey',
  color: '#858b91',
  code: '3630-51'
}, {
  name: 'Slate Grey',
  color: '#4e6478',
  code: '3630-61'
}, {
  name: 'Black',
  color: '#272e32',
  code: '3630-22'
}, {
  name: 'Duranodic',
  color: '#444041',
  code: '3630-69'
}, {
  name: 'Dark Brown',
  color: '#473434',
  code: '3630-59'
}, {
  name: 'Rust Brown',
  color: '#62322d',
  code: '3630-63'
}, {
  name: 'Light Rust Brown',
  color: '#6f332a',
  code: '3630-109'
}, {
  name: 'Burgundy',
  color: '#781729',
  code: '3630-49'
}, {
  name: 'Raspberry',
  color: '#ae044b',
  code: '3630-133'
}, {
  name: 'Vivid Rose',
  color: '#ca0f43',
  code: '3630-78'
}, {
  name: 'Rose Mauve',
  color: '#d96690',
  code: '3630-68'
}, {
  name: 'Cardinal Red',
  color: '#b10e22',
  code: '3630-53'
}, {
  name: 'Dark Red',
  color: '#b40b22',
  code: '3630-73'
}, {
  name: 'Red',
  color: '#bf1527',
  code: '3630-33'
}, {
  name: 'Regal Red',
  color: '#be1632',
  code: '3630-83'
}, {
  name: 'Poppy Red',
  color: '#d20d1a',
  code: '3630-143'
}, {
  name: 'Light Tomato Red',
  color: '#c90c15',
  code: '3630-43'
}, {
  name: 'Orange',
  color: '#d53b14',
  code: '3630-44'
}, {
  name: 'Tangerine',
  color: '#ed6c0b',
  code: '3630-84'
}, {
  name: 'Kumquat Orange',
  color: '#a4896d',
  code: '3630-74'
}, {
  name: 'Marigold',
  color: '#e59d00',
  code: '3630-75'
}, {
  name: 'Sunflower',
  color: '#dd9603',
  code: '3630-25'
}, {
  name: 'Golden Yellow',
  color: '#f0a901',
  code: '3630-125'
}, {
  name: 'Yellow',
  color: '#ecbf00',
  code: '3630-015'
}, {
  name: 'Light Lemon Yellow',
  color: '#d3ce05',
  code: '3630-115'
}, {
  name: 'Brilliant Green',
  color: '#43b110',
  code: '3630-106'
}, {
  name: 'Lime Green',
  color: '#35b225',
  code: '3630-136'
}, {
  name: 'Vivid Green',
  color: '#058342',
  code: '3630-156'
}, {
  name: 'Light Kelly Green',
  color: '#009a6b',
  code: '3630-146'
}, {
  name: 'Bright Jade Green',
  color: '#009b75',
  code: '3630-116'
}, {
  name: 'Green',
  color: '#026031',
  code: '3630-26'
}, {
  name: 'Holly Green',
  color: '#10502e',
  code: '3630-76'
}, {
  name: 'Dark Emerald Green',
  color: '#09502c',
  code: '3630-126'
}, {
  name: 'Torquioise',
  color: '#00898b',
  code: '3630-236'
}, {
  name: 'Teal Green',
  color: '#00788b',
  code: '3630-246'
}, {
  name: 'Evening Blue',
  color: '#879ac5',
  code: '3630-317'
}, {
  name: 'Light European Blue',
  color: '#0978bb',
  code: '3630-147'
}, {
  name: 'Olympic Blue',
  color: '#0478b6',
  code: '3630-57'
}, {
  name: 'Process Blue',
  color: '#0773c2',
  code: '3630-337'
}, {
  name: 'Intense Blue',
  color: '#0a5fb2',
  code: '3630-127'
}, {
  name: 'Bright Blue',
  color: '#0248a1',
  code: '3630-167'
}, {
  name: 'Bristol Blue',
  color: '#033998',
  code: '3630-97'
}, {
  name: 'Sultan Blue',
  color: '#062285',
  code: '3630-157'
}, {
  name: 'European Blue',
  color: '#152462',
  code: '3630-137'
}, {
  name: 'Blue',
  color: '#0e1466',
  code: '3630-36'
}, {
  name: 'Royal Blue',
  color: '#0e0173',
  code: '3630-87'
}, {
  name: 'Plum Purple',
  color: '#502960',
  code: '3630-128'
}, {
  name: 'Intense Magenta',
  color: '#a62579',
  code: '3630-118'
}, {
  name: 'Pink',
  color: '#da6bb4',
  code: '3630-108'
}];


/***/ }),

/***/ "./src/scripts/utils/ConvertJson.js":
/*!******************************************!*\
  !*** ./src/scripts/utils/ConvertJson.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ convert_json)
/* harmony export */ });
function convert_json(tableString) {
  const rows = tableString.trim().split('\n');

  // Use the first row as headers
  const headers = rows[0].trim().split('\t');

  // Map over the remaining rows to create objects
  return rows.slice(1).map(row => {
    const values = row.split('\t');
    let obj = headers.reduce((acc, header, index) => {
      // Convert to the appropriate type; assuming all non-header values are numbers
      acc[header] = values[index] ? parseFloat(values[index].replace(/,/g, '')) : null;
      return acc;
    }, {});
    return obj;
  });
}

/***/ }),

/***/ "./src/scripts/utils/FontOptions.js":
/*!******************************************!*\
  !*** ./src/scripts/utils/FontOptions.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fontDefaultOptions: () => (/* binding */ fontDefaultOptions)
/* harmony export */ });
const fontDefaultOptions = {
  popular_fonts: 'Arial,Futura,Helvetica,Garamond,Palatino,Optima,Montserrat,Patua One,Bebas Neue,Versa',
  fonts: 'Antonio Bold,Arial Bold,Arial Regular,Arial Rounded,Bai Jamjeree Semibold,Bebas Neue,Boogaloo Regular,Century Schoolbook,Chateau de Garage,Coiny Regular,Comfortaa,Cooper Black,Fredoka,Futura Bold Italic,Futura Extra Black,Garamond Bold,Garamond Regular,Heavitas,Helvetica Bold,Helvetica Regular,Malvie,Montserrat,Muloka Karesh,Optima,Optima Semibold,Palatino Semibold,Patua One,Segoe Print Bold,Times New Roman,Trajan Bold,Twentieth Century,Versa,Zilla Slab Semibold'
};

/***/ }),

/***/ "./src/scripts/utils/Pricing.js":
/*!**************************************!*\
  !*** ./src/scripts/utils/Pricing.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getLetterPricingTableByTitle: () => (/* binding */ getLetterPricingTableByTitle),
/* harmony export */   getLogoPricingTablebyThickness: () => (/* binding */ getLogoPricingTablebyThickness)
/* harmony export */ });
function getLogoPricingTablebyThickness(thickness, logoPricingObject) {
  const table = logoPricingObject?.find(element => element.logo_pricing.logo_size === thickness);
  return table ? table.logo_pricing.logo_pricing_table : undefined;
}
function getLetterPricingTableByTitle(title, letterPricingObject) {
  const table = letterPricingObject?.find(element => element.letter_pricing.title === title);
  return table ? table.letter_pricing.letter_pricing_table : undefined;
}

/***/ }),

/***/ "./src/scripts/utils/QuoteFunctions.js":
/*!*********************************************!*\
  !*** ./src/scripts/utils/QuoteFunctions.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignageCount: () => (/* binding */ SignageCount),
/* harmony export */   processQuote: () => (/* binding */ processQuote)
/* harmony export */ });
const processQuote = async formData => {
  try {
    const response = await fetch(NovaQuote.ajax_url, {
      method: 'POST',
      credentials: 'same-origin',
      headers: {
        'Cache-Control': 'no-cache'
      },
      body: formData
    });
    const data = await response.json();
    console.log(data); // Optional: to log the response data for debugging
    return data;
  } catch (error) {
    console.error('Error:', error);
    return 'error'; // Return 'error' in case of an exception
  }
};

const SignageCount = (signage, type) => signage.filter(sign => sign.type === type).length;


/***/ }),

/***/ "./src/scripts/utils/SignageOptions.js":
/*!*********************************************!*\
  !*** ./src/scripts/utils/SignageOptions.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calculateMountingOptions: () => (/* binding */ calculateMountingOptions),
/* harmony export */   defaultFinishOptions: () => (/* binding */ defaultFinishOptions),
/* harmony export */   installationDefaultOptions: () => (/* binding */ installationDefaultOptions),
/* harmony export */   metalFinishOptions: () => (/* binding */ metalFinishOptions),
/* harmony export */   metalInstallationOptions: () => (/* binding */ metalInstallationOptions),
/* harmony export */   metalThicknessOptions: () => (/* binding */ metalThicknessOptions),
/* harmony export */   mountingDefaultOptions: () => (/* binding */ mountingDefaultOptions),
/* harmony export */   piecesOptions: () => (/* binding */ piecesOptions),
/* harmony export */   setOptions: () => (/* binding */ setOptions),
/* harmony export */   spacerStandoffDefaultOptions: () => (/* binding */ spacerStandoffDefaultOptions),
/* harmony export */   studLengthOptions: () => (/* binding */ studLengthOptions),
/* harmony export */   thicknessOptions: () => (/* binding */ thicknessOptions),
/* harmony export */   waterProofOptions: () => (/* binding */ waterProofOptions)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const defaultFinishOptions = [{
  name: 'Matte'
}, {
  name: 'Gloss'
}];
const thicknessOptions = [{
  thickness: '1/8"',
  value: '3'
}, {
  thickness: '1/4"',
  value: '6'
}, {
  thickness: '3/8"',
  value: '9'
}, {
  thickness: '1/2"',
  value: '12'
}, {
  thickness: '3/4"',
  value: '19'
}, {
  thickness: '1"',
  value: '25'
}, {
  thickness: '1.5"',
  value: '38'
}];
const metalThicknessOptions = [{
  thickness: '1/8"',
  value: '3'
}, {
  thickness: '7/32"',
  value: '6'
}, {
  thickness: '3/8"',
  value: '9'
}, {
  thickness: '1/2"',
  value: '12'
}, {
  thickness: '3/4"',
  value: '20'
}, {
  thickness: '1"',
  value: '26'
}];
const metalFinishOptions = [{
  option: 'Brushed'
}, {
  option: 'Painted'
}];
const waterProofOptions = [{
  option: 'Indoor (Not Waterproof)'
}, {
  option: 'Outdoor (Waterproof)'
}];
const mountingDefaultOptions = [{
  mounting_option: 'Plain'
}, {
  mounting_option: 'Double-sided tape'
}, {
  mounting_option: 'Pad'
}, {
  mounting_option: 'Pad - Combination All'
}, {
  mounting_option: 'Stud Mount'
}, {
  mounting_option: 'Stud with spacer'
}];
const installationDefaultOptions = [{
  option: 'Plain'
}, {
  option: 'Double-sided tape'
}, {
  option: 'Pad'
}, {
  option: 'Pad - Combination All'
}, {
  option: 'Stud Mount'
}, {
  option: 'Stud with spacer'
}];
const metalInstallationOptions = [{
  option: 'Plain'
}, {
  option: 'Stud Mount'
}, {
  option: 'Stud with spacer'
}];
const calculateMountingOptions = (selectedThickness, selectedMounting, waterproof) => {
  let newMountingOptions;
  let updatedSelectedMounting = selectedMounting;
  if (selectedThickness && selectedThickness.value === '3') {
    newMountingOptions = mountingDefaultOptions.filter(option => option.mounting_option !== 'Flush stud');
    if (updatedSelectedMounting === 'Flush stud') {
      updatedSelectedMounting = '';
    }
  } else {
    newMountingOptions = mountingDefaultOptions.filter(option => option.mounting_option !== 'Stud with Block');
    if (updatedSelectedMounting === 'Stud with Block') {
      updatedSelectedMounting = '';
    }
  }
  if (waterproof === 'Outdoor (Waterproof)') {
    newMountingOptions = newMountingOptions.filter(option => option.mounting_option !== 'Double-sided tape');
    if (updatedSelectedMounting === 'Double-sided tape') {
      var _mountingDefaultOptio;
      updatedSelectedMounting = (_mountingDefaultOptio = mountingDefaultOptions[0]?.mounting_option) !== null && _mountingDefaultOptio !== void 0 ? _mountingDefaultOptio : '';
    }
  }
  return {
    newMountingOptions,
    updatedSelectedMounting
  };
};
const piecesOptions = ['30 pieces or fewer'];
const setOptions = Array.from({
  length: 100
}, (_, index) => {
  const val = 1 + index;
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
    key: index,
    value: val
  }, val);
});
const spacerStandoffDefaultOptions = [{
  value: '0.5"'
}, {
  value: '1"'
}, {
  value: '1.5"'
}, {
  value: '2"'
}, {
  value: '3"'
}, {
  value: '4"'
}];
const studLengthOptions = [{
  value: '1.5"'
}, {
  value: '3.2"'
}, {
  value: '4"'
}, {
  value: '6"'
}];


/***/ }),

/***/ "./src/scripts/utils/uploadFunctions.js":
/*!**********************************************!*\
  !*** ./src/scripts/utils/uploadFunctions.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkAndCreateFolder: () => (/* binding */ checkAndCreateFolder),
/* harmony export */   getRefreshToken: () => (/* binding */ getRefreshToken),
/* harmony export */   renameFolder: () => (/* binding */ renameFolder)
/* harmony export */ });
const renameFolder = async (oldPath, newPath) => {
  if (!oldPath || !newPath) return false;
  const accessToken = await getRefreshToken();
  if (!accessToken) {
    console.error('Failed to get access token');
    return false; // indicate failure
  }

  const moveUrl = 'https://api.dropboxapi.com/2/files/move_v2';
  const moveParams = JSON.stringify({
    from_path: oldPath,
    to_path: newPath,
    autorename: false
  });
  try {
    const moveResponse = await fetch(moveUrl, {
      method: 'POST',
      body: moveParams,
      headers: {
        Authorization: `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });
    if (!moveResponse.ok) {
      const error = await moveResponse.text(); // Get the text of the error response
      console.error('Failed to move folder. Response:', error);
      throw new Error('Failed to move folder');
    }
    const moveData = await moveResponse.json();
    console.log('Folder moved successfully:', moveData);
    return true; // indicate success
  } catch (error) {
    console.error('Error moving folder:', error);
    return false; // indicate failure
  }
};

const getRefreshToken = async () => {
  const clientId = NovaQuote.dropbox_app_key;
  const clientSecret = NovaQuote.dropbox_secret;
  const refreshToken = NovaQuote.dropbox_refresh_token;
  const url = 'https://api.dropboxapi.com/oauth2/token';
  const params = new URLSearchParams({
    grant_type: 'refresh_token',
    refresh_token: refreshToken,
    client_id: clientId,
    client_secret: clientSecret
  });
  try {
    const response = await fetch(url, {
      method: 'POST',
      body: params,
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    });
    if (!response.ok) {
      const error = await response.text();
      console.error('Error getting access token:', error);
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    return data.access_token;
  } catch (error) {
    console.error('Error:', error);
    return null;
  }
};
const checkAndCreateFolder = async folderPath => {
  const accessToken = await getRefreshToken();
  if (!accessToken) {
    console.error('Failed to get access token');
    return false; // indicate failure
  }

  try {
    let response = await fetch('https://api.dropboxapi.com/2/files/get_metadata', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        path: folderPath
      })
    });
    if (response.ok) {
      return;
    }
    response = await fetch('https://api.dropboxapi.com/2/files/create_folder_v2', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        path: folderPath
      })
    });
    const data = await response.json();
    if (!response.ok) {
      throw new Error(data.error_summary || 'Unknown error during folder creation');
    }
  } catch (error) {
    console.error('Error:', error);
  }
};

/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ ((module, exports) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;
	var nativeCodeString = '[native code]';

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
					classes.push(arg.toString());
					continue;
				}

				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/get-nonce/dist/es2015/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/get-nonce/dist/es2015/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getNonce: () => (/* binding */ getNonce),
/* harmony export */   setNonce: () => (/* binding */ setNonce)
/* harmony export */ });
var currentNonce;
var setNonce = function (nonce) {
    currentNonce = nonce;
};
var getNonce = function () {
    if (currentNonce) {
        return currentNonce;
    }
    if (true) {
        return __webpack_require__.nc;
    }
    return undefined;
};


/***/ }),

/***/ "./node_modules/react-tooltip/dist/react-tooltip.min.css":
/*!***************************************************************!*\
  !*** ./node_modules/react-tooltip/dist/react-tooltip.min.css ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/component.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/component.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RemoveScrollBar: () => (/* binding */ RemoveScrollBar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_style_singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-style-singleton */ "./node_modules/react-style-singleton/dist/es2015/index.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./node_modules/react-remove-scroll-bar/dist/es2015/utils.js");




var Style = (0,react_style_singleton__WEBPACK_IMPORTED_MODULE_1__.styleSingleton)();
// important tip - once we measure scrollBar width and remove them
// we could not repeat this operation
// thus we are using style-singleton - only the first "yet correct" style will be applied.
var getStyles = function (_a, allowRelative, gapMode, important) {
    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
    if (gapMode === void 0) { gapMode = 'margin'; }
    return "\n  .".concat(_constants__WEBPACK_IMPORTED_MODULE_2__.noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
        allowRelative && "position: relative ".concat(important, ";"),
        gapMode === 'margin' &&
            "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
        gapMode === 'padding' && "padding-right: ".concat(gap, "px ").concat(important, ";"),
    ]
        .filter(Boolean)
        .join(''), "\n  }\n  \n  .").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.zeroRightClassName, " .").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.fullWidthClassName, " .").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body {\n    ").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
/**
 * Removes page scrollbar and blocks page scroll when mounted
 */
var RemoveScrollBar = function (props) {
    var noRelative = props.noRelative, noImportant = props.noImportant, _a = props.gapMode, gapMode = _a === void 0 ? 'margin' : _a;
    /*
     gap will be measured on every component mount
     however it will be used only by the "first" invocation
     due to singleton nature of <Style
     */
    var gap = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () { return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getGapWidth)(gapMode); }, [gapMode]);
    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });
};


/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/constants.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fullWidthClassName: () => (/* binding */ fullWidthClassName),
/* harmony export */   noScrollbarsClassName: () => (/* binding */ noScrollbarsClassName),
/* harmony export */   removedBarSizeVariable: () => (/* binding */ removedBarSizeVariable),
/* harmony export */   zeroRightClassName: () => (/* binding */ zeroRightClassName)
/* harmony export */ });
var zeroRightClassName = 'right-scroll-bar-position';
var fullWidthClassName = 'width-before-scroll-bar';
var noScrollbarsClassName = 'with-scroll-bars-hidden';
/**
 * Name of a CSS variable containing the amount of "hidden" scrollbar
 * ! might be undefined ! use will fallback!
 */
var removedBarSizeVariable = '--removed-body-scroll-bar-size';


/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RemoveScrollBar: () => (/* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_0__.RemoveScrollBar),
/* harmony export */   fullWidthClassName: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.fullWidthClassName),
/* harmony export */   getGapWidth: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.getGapWidth),
/* harmony export */   noScrollbarsClassName: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.noScrollbarsClassName),
/* harmony export */   removedBarSizeVariable: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.removedBarSizeVariable),
/* harmony export */   zeroRightClassName: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.zeroRightClassName)
/* harmony export */ });
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ "./node_modules/react-remove-scroll-bar/dist/es2015/component.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/react-remove-scroll-bar/dist/es2015/utils.js");






/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getGapWidth: () => (/* binding */ getGapWidth),
/* harmony export */   zeroGap: () => (/* binding */ zeroGap)
/* harmony export */ });
var zeroGap = {
    left: 0,
    top: 0,
    right: 0,
    gap: 0,
};
var parse = function (x) { return parseInt(x || '', 10) || 0; };
var getOffset = function (gapMode) {
    var cs = window.getComputedStyle(document.body);
    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];
    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];
    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];
    return [parse(left), parse(top), parse(right)];
};
var getGapWidth = function (gapMode) {
    if (gapMode === void 0) { gapMode = 'margin'; }
    if (typeof window === 'undefined') {
        return zeroGap;
    }
    var offsets = getOffset(gapMode);
    var documentWidth = document.documentElement.clientWidth;
    var windowWidth = window.innerWidth;
    return {
        left: offsets[0],
        top: offsets[1],
        right: offsets[2],
        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),
    };
};


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/Combination.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/Combination.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _UI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UI */ "./node_modules/react-remove-scroll/dist/es2015/UI.js");
/* harmony import */ var _sidecar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sidecar */ "./node_modules/react-remove-scroll/dist/es2015/sidecar.js");




var ReactRemoveScroll = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) { return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_UI__WEBPACK_IMPORTED_MODULE_2__.RemoveScroll, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, props, { ref: ref, sideCar: _sidecar__WEBPACK_IMPORTED_MODULE_1__["default"] }))); });
ReactRemoveScroll.classNames = _UI__WEBPACK_IMPORTED_MODULE_2__.RemoveScroll.classNames;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ReactRemoveScroll);


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/SideEffect.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/SideEffect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RemoveScrollSideCar: () => (/* binding */ RemoveScrollSideCar),
/* harmony export */   getDeltaXY: () => (/* binding */ getDeltaXY),
/* harmony export */   getTouchXY: () => (/* binding */ getTouchXY)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_remove_scroll_bar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-remove-scroll-bar */ "./node_modules/react-remove-scroll-bar/dist/es2015/index.js");
/* harmony import */ var react_style_singleton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-style-singleton */ "./node_modules/react-style-singleton/dist/es2015/index.js");
/* harmony import */ var _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./aggresiveCapture */ "./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js");
/* harmony import */ var _handleScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handleScroll */ "./node_modules/react-remove-scroll/dist/es2015/handleScroll.js");






var getTouchXY = function (event) {
    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };
var extractRef = function (ref) {
    return ref && 'current' in ref ? ref.current : ref;
};
var deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };
var generateStyle = function (id) { return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n"); };
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
    var shouldPreventQueue = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);
    var touchStartRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([0, 0]);
    var activeAxis = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    var id = react__WEBPACK_IMPORTED_MODULE_0__.useState(idCounter++)[0];
    var Style = react__WEBPACK_IMPORTED_MODULE_0__.useState(function () { return (0,react_style_singleton__WEBPACK_IMPORTED_MODULE_2__.styleSingleton)(); })[0];
    var lastProps = react__WEBPACK_IMPORTED_MODULE_0__.useRef(props);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        lastProps.current = props;
    }, [props]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        if (props.inert) {
            document.body.classList.add("block-interactivity-".concat(id));
            var allow_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
            allow_1.forEach(function (el) { return el.classList.add("allow-interactivity-".concat(id)); });
            return function () {
                document.body.classList.remove("block-interactivity-".concat(id));
                allow_1.forEach(function (el) { return el.classList.remove("allow-interactivity-".concat(id)); });
            };
        }
        return;
    }, [props.inert, props.lockRef.current, props.shards]);
    var shouldCancelEvent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event, parent) {
        if ('touches' in event && event.touches.length === 2) {
            return !lastProps.current.allowPinchZoom;
        }
        var touch = getTouchXY(event);
        var touchStart = touchStartRef.current;
        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];
        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];
        var currentAxis;
        var target = event.target;
        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';
        // allow horizontal touch move on Range inputs. They will not cause any scroll
        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {
            return false;
        }
        var canBeScrolledInMainDirection = (0,_handleScroll__WEBPACK_IMPORTED_MODULE_4__.locationCouldBeScrolled)(moveDirection, target);
        if (!canBeScrolledInMainDirection) {
            return true;
        }
        if (canBeScrolledInMainDirection) {
            currentAxis = moveDirection;
        }
        else {
            currentAxis = moveDirection === 'v' ? 'h' : 'v';
            canBeScrolledInMainDirection = (0,_handleScroll__WEBPACK_IMPORTED_MODULE_4__.locationCouldBeScrolled)(moveDirection, target);
            // other axis might be not scrollable
        }
        if (!canBeScrolledInMainDirection) {
            return false;
        }
        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {
            activeAxis.current = currentAxis;
        }
        if (!currentAxis) {
            return true;
        }
        var cancelingAxis = activeAxis.current || currentAxis;
        return (0,_handleScroll__WEBPACK_IMPORTED_MODULE_4__.handleScroll)(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);
    }, []);
    var shouldPrevent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (_event) {
        var event = _event;
        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {
            // not the last active
            return;
        }
        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);
        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta); })[0];
        // self event, and should be canceled
        if (sourceEvent && sourceEvent.should) {
            if (event.cancelable) {
                event.preventDefault();
            }
            return;
        }
        // outside or shard event
        if (!sourceEvent) {
            var shardNodes = (lastProps.current.shards || [])
                .map(extractRef)
                .filter(Boolean)
                .filter(function (node) { return node.contains(event.target); });
            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
            if (shouldStop) {
                if (event.cancelable) {
                    event.preventDefault();
                }
            }
        }
    }, []);
    var shouldCancel = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (name, delta, target, should) {
        var event = { name: name, delta: delta, target: target, should: should };
        shouldPreventQueue.current.push(event);
        setTimeout(function () {
            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });
        }, 1);
    }, []);
    var scrollTouchStart = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
        touchStartRef.current = getTouchXY(event);
        activeAxis.current = undefined;
    }, []);
    var scrollWheel = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
    }, []);
    var scrollTouchMove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
    }, []);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        lockStack.push(Style);
        props.setCallbacks({
            onScrollCapture: scrollWheel,
            onWheelCapture: scrollWheel,
            onTouchMoveCapture: scrollTouchMove,
        });
        document.addEventListener('wheel', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);
        document.addEventListener('touchmove', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);
        document.addEventListener('touchstart', scrollTouchStart, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);
        return function () {
            lockStack = lockStack.filter(function (inst) { return inst !== Style; });
            document.removeEventListener('wheel', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);
            document.removeEventListener('touchmove', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);
            document.removeEventListener('touchstart', scrollTouchStart, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);
        };
    }, []);
    var removeScrollBar = props.removeScrollBar, inert = props.inert;
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        inert ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(Style, { styles: generateStyle(id) }) : null,
        removeScrollBar ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_remove_scroll_bar__WEBPACK_IMPORTED_MODULE_1__.RemoveScrollBar, { gapMode: "margin" }) : null));
}


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/UI.js":
/*!************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/UI.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RemoveScroll: () => (/* binding */ RemoveScroll)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-remove-scroll-bar/constants */ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js");
/* harmony import */ var use_callback_ref__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-callback-ref */ "./node_modules/use-callback-ref/dist/es2015/useMergeRef.js");
/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./medium */ "./node_modules/react-remove-scroll/dist/es2015/medium.js");





var nothing = function () {
    return;
};
/**
 * Removes scrollbar from the page and contain the scroll within the Lock
 */
var RemoveScroll = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, parentRef) {
    var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
    var _a = react__WEBPACK_IMPORTED_MODULE_0__.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing,
    }), callbacks = _a[0], setCallbacks = _a[1];
    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
    var SideCar = sideCar;
    var containerRef = (0,use_callback_ref__WEBPACK_IMPORTED_MODULE_3__.useMergeRefs)([ref, parentRef]);
    var containerProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, rest), callbacks);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        enabled && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(SideCar, { sideCar: _medium__WEBPACK_IMPORTED_MODULE_4__.effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref })),
        forwardProps ? (react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children), (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, containerProps), { ref: containerRef }))) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(Container, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, containerProps, { className: className, ref: containerRef }), children))));
});
RemoveScroll.defaultProps = {
    enabled: true,
    removeScrollBar: true,
    inert: false,
};
RemoveScroll.classNames = {
    fullWidth: react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__.fullWidthClassName,
    zeroRight: react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__.zeroRightClassName,
};



/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js":
/*!**************************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   nonPassive: () => (/* binding */ nonPassive)
/* harmony export */ });
var passiveSupported = false;
if (typeof window !== 'undefined') {
    try {
        var options = Object.defineProperty({}, 'passive', {
            get: function () {
                passiveSupported = true;
                return true;
            },
        });
        // @ts-ignore
        window.addEventListener('test', options, options);
        // @ts-ignore
        window.removeEventListener('test', options, options);
    }
    catch (err) {
        passiveSupported = false;
    }
}
var nonPassive = passiveSupported ? { passive: false } : false;


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/handleScroll.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/handleScroll.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   handleScroll: () => (/* binding */ handleScroll),
/* harmony export */   locationCouldBeScrolled: () => (/* binding */ locationCouldBeScrolled)
/* harmony export */ });
var alwaysContainsScroll = function (node) {
    // textarea will always _contain_ scroll inside self. It only can be hidden
    return node.tagName === 'TEXTAREA';
};
var elementCanBeScrolled = function (node, overflow) {
    var styles = window.getComputedStyle(node);
    return (
    // not-not-scrollable
    styles[overflow] !== 'hidden' &&
        // contains scroll inside self
        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));
};
var elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };
var elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };
var locationCouldBeScrolled = function (axis, node) {
    var current = node;
    do {
        // Skip over shadow root
        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {
            current = current.host;
        }
        var isScrollable = elementCouldBeScrolled(axis, current);
        if (isScrollable) {
            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];
            if (s > d) {
                return true;
            }
        }
        current = current.parentNode;
    } while (current && current !== document.body);
    return false;
};
var getVScrollVariables = function (_a) {
    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
    return [
        scrollTop,
        scrollHeight,
        clientHeight,
    ];
};
var getHScrollVariables = function (_a) {
    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
    return [
        scrollLeft,
        scrollWidth,
        clientWidth,
    ];
};
var elementCouldBeScrolled = function (axis, node) {
    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function (axis, node) {
    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function (axis, direction) {
    /**
     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,
     * and then increasingly negative as you scroll towards the end of the content.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft
     */
    return axis === 'h' && direction === 'rtl' ? -1 : 1;
};
var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {
    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
    var delta = directionFactor * sourceDelta;
    // find scrollable target
    var target = event.target;
    var targetInLock = endTarget.contains(target);
    var shouldCancelScroll = false;
    var isDeltaPositive = delta > 0;
    var availableScroll = 0;
    var availableScrollTop = 0;
    do {
        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
        var elementScroll = scroll_1 - capacity - directionFactor * position;
        if (position || elementScroll) {
            if (elementCouldBeScrolled(axis, target)) {
                availableScroll += elementScroll;
                availableScrollTop += position;
            }
        }
        target = target.parentNode;
    } while (
    // portaled content
    (!targetInLock && target !== document.body) ||
        // self content
        (targetInLock && (endTarget.contains(target) || endTarget === target)));
    if (isDeltaPositive && ((noOverscroll && availableScroll === 0) || (!noOverscroll && delta > availableScroll))) {
        shouldCancelScroll = true;
    }
    else if (!isDeltaPositive &&
        ((noOverscroll && availableScrollTop === 0) || (!noOverscroll && -delta > availableScrollTop))) {
        shouldCancelScroll = true;
    }
    return shouldCancelScroll;
};


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/medium.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/medium.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   effectCar: () => (/* binding */ effectCar)
/* harmony export */ });
/* harmony import */ var use_sidecar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sidecar */ "./node_modules/use-sidecar/dist/es2015/medium.js");

var effectCar = (0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.createSidecarMedium)();


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/sidecar.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/sidecar.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var use_sidecar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sidecar */ "./node_modules/use-sidecar/dist/es2015/exports.js");
/* harmony import */ var _SideEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SideEffect */ "./node_modules/react-remove-scroll/dist/es2015/SideEffect.js");
/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./medium */ "./node_modules/react-remove-scroll/dist/es2015/medium.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.exportSidecar)(_medium__WEBPACK_IMPORTED_MODULE_1__.effectCar, _SideEffect__WEBPACK_IMPORTED_MODULE_2__.RemoveScrollSideCar));


/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/component.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/component.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   styleSingleton: () => (/* binding */ styleSingleton)
/* harmony export */ });
/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hook */ "./node_modules/react-style-singleton/dist/es2015/hook.js");

/**
 * create a Component to add styles on demand
 * - styles are added when first instance is mounted
 * - styles are removed when the last instance is unmounted
 * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior
 */
var styleSingleton = function () {
    var useStyle = (0,_hook__WEBPACK_IMPORTED_MODULE_0__.styleHookSingleton)();
    var Sheet = function (_a) {
        var styles = _a.styles, dynamic = _a.dynamic;
        useStyle(styles, dynamic);
        return null;
    };
    return Sheet;
};


/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/hook.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/hook.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   styleHookSingleton: () => (/* binding */ styleHookSingleton)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./singleton */ "./node_modules/react-style-singleton/dist/es2015/singleton.js");


/**
 * creates a hook to control style singleton
 * @see {@link styleSingleton} for a safer component version
 * @example
 * ```tsx
 * const useStyle = styleHookSingleton();
 * ///
 * useStyle('body { overflow: hidden}');
 */
var styleHookSingleton = function () {
    var sheet = (0,_singleton__WEBPACK_IMPORTED_MODULE_1__.stylesheetSingleton)();
    return function (styles, isDynamic) {
        react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
            sheet.add(styles);
            return function () {
                sheet.remove();
            };
        }, [styles && isDynamic]);
    };
};


/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   styleHookSingleton: () => (/* reexport safe */ _hook__WEBPACK_IMPORTED_MODULE_2__.styleHookSingleton),
/* harmony export */   styleSingleton: () => (/* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_0__.styleSingleton),
/* harmony export */   stylesheetSingleton: () => (/* reexport safe */ _singleton__WEBPACK_IMPORTED_MODULE_1__.stylesheetSingleton)
/* harmony export */ });
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ "./node_modules/react-style-singleton/dist/es2015/component.js");
/* harmony import */ var _singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./singleton */ "./node_modules/react-style-singleton/dist/es2015/singleton.js");
/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hook */ "./node_modules/react-style-singleton/dist/es2015/hook.js");





/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/singleton.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/singleton.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   stylesheetSingleton: () => (/* binding */ stylesheetSingleton)
/* harmony export */ });
/* harmony import */ var get_nonce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-nonce */ "./node_modules/get-nonce/dist/es2015/index.js");

function makeStyleTag() {
    if (!document)
        return null;
    var tag = document.createElement('style');
    tag.type = 'text/css';
    var nonce = (0,get_nonce__WEBPACK_IMPORTED_MODULE_0__.getNonce)();
    if (nonce) {
        tag.setAttribute('nonce', nonce);
    }
    return tag;
}
function injectStyles(tag, css) {
    // @ts-ignore
    if (tag.styleSheet) {
        // @ts-ignore
        tag.styleSheet.cssText = css;
    }
    else {
        tag.appendChild(document.createTextNode(css));
    }
}
function insertStyleTag(tag) {
    var head = document.head || document.getElementsByTagName('head')[0];
    head.appendChild(tag);
}
var stylesheetSingleton = function () {
    var counter = 0;
    var stylesheet = null;
    return {
        add: function (style) {
            if (counter == 0) {
                if ((stylesheet = makeStyleTag())) {
                    injectStyles(stylesheet, style);
                    insertStyleTag(stylesheet);
                }
            }
            counter++;
        },
        remove: function () {
            counter--;
            if (!counter && stylesheet) {
                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
                stylesheet = null;
            }
        },
    };
};


/***/ }),

/***/ "./node_modules/use-callback-ref/dist/es2015/assignRef.js":
/*!****************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/assignRef.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assignRef: () => (/* binding */ assignRef)
/* harmony export */ });
/**
 * Assigns a value for a given ref, no matter of the ref format
 * @param {RefObject} ref - a callback function or ref object
 * @param value - a new value
 *
 * @see https://github.com/theKashey/use-callback-ref#assignref
 * @example
 * const refObject = useRef();
 * const refFn = (ref) => {....}
 *
 * assignRef(refObject, "refValue");
 * assignRef(refFn, "refValue");
 */
function assignRef(ref, value) {
    if (typeof ref === 'function') {
        ref(value);
    }
    else if (ref) {
        ref.current = value;
    }
    return ref;
}


/***/ }),

/***/ "./node_modules/use-callback-ref/dist/es2015/useMergeRef.js":
/*!******************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/useMergeRef.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useMergeRefs: () => (/* binding */ useMergeRefs)
/* harmony export */ });
/* harmony import */ var _assignRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assignRef */ "./node_modules/use-callback-ref/dist/es2015/assignRef.js");
/* harmony import */ var _useRef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useRef */ "./node_modules/use-callback-ref/dist/es2015/useRef.js");


/**
 * Merges two or more refs together providing a single interface to set their value
 * @param {RefObject|Ref} refs
 * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}
 *
 * @see {@link mergeRefs} a version without buit-in memoization
 * @see https://github.com/theKashey/use-callback-ref#usemergerefs
 * @example
 * const Component = React.forwardRef((props, ref) => {
 *   const ownRef = useRef();
 *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together
 *   return <div ref={domRef}>...</div>
 * }
 */
function useMergeRefs(refs, defaultValue) {
    return (0,_useRef__WEBPACK_IMPORTED_MODULE_0__.useCallbackRef)(defaultValue || null, function (newValue) { return refs.forEach(function (ref) { return (0,_assignRef__WEBPACK_IMPORTED_MODULE_1__.assignRef)(ref, newValue); }); });
}


/***/ }),

/***/ "./node_modules/use-callback-ref/dist/es2015/useRef.js":
/*!*************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/useRef.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCallbackRef: () => (/* binding */ useCallbackRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

/**
 * creates a MutableRef with ref change callback
 * @param initialValue - initial ref value
 * @param {Function} callback - a callback to run when value changes
 *
 * @example
 * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);
 * ref.current = 1;
 * // prints 0 -> 1
 *
 * @see https://reactjs.org/docs/hooks-reference.html#useref
 * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref
 * @returns {MutableRefObject}
 */
function useCallbackRef(initialValue, callback) {
    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () { return ({
        // value
        value: initialValue,
        // last callback
        callback: callback,
        // "memoized" public interface
        facade: {
            get current() {
                return ref.value;
            },
            set current(value) {
                var last = ref.value;
                if (last !== value) {
                    ref.value = value;
                    ref.callback(value, last);
                }
            },
        },
    }); })[0];
    // update callback
    ref.callback = callback;
    return ref.facade;
}


/***/ }),

/***/ "./node_modules/use-sidecar/dist/es2015/exports.js":
/*!*********************************************************!*\
  !*** ./node_modules/use-sidecar/dist/es2015/exports.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   exportSidecar: () => (/* binding */ exportSidecar)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


var SideCar = function (_a) {
    var sideCar = _a.sideCar, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["sideCar"]);
    if (!sideCar) {
        throw new Error('Sidecar: please provide `sideCar` property to import the right car');
    }
    var Target = sideCar.read();
    if (!Target) {
        throw new Error('Sidecar medium not found');
    }
    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Target, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
    medium.useMedium(exported);
    return SideCar;
}


/***/ }),

/***/ "./node_modules/use-sidecar/dist/es2015/medium.js":
/*!********************************************************!*\
  !*** ./node_modules/use-sidecar/dist/es2015/medium.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createMedium: () => (/* binding */ createMedium),
/* harmony export */   createSidecarMedium: () => (/* binding */ createSidecarMedium)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");

function ItoI(a) {
    return a;
}
function innerCreateMedium(defaults, middleware) {
    if (middleware === void 0) { middleware = ItoI; }
    var buffer = [];
    var assigned = false;
    var medium = {
        read: function () {
            if (assigned) {
                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');
            }
            if (buffer.length) {
                return buffer[buffer.length - 1];
            }
            return defaults;
        },
        useMedium: function (data) {
            var item = middleware(data, assigned);
            buffer.push(item);
            return function () {
                buffer = buffer.filter(function (x) { return x !== item; });
            };
        },
        assignSyncMedium: function (cb) {
            assigned = true;
            while (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
            }
            buffer = {
                push: function (x) { return cb(x); },
                filter: function () { return buffer; },
            };
        },
        assignMedium: function (cb) {
            assigned = true;
            var pendingQueue = [];
            if (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
                pendingQueue = buffer;
            }
            var executeQueue = function () {
                var cbs = pendingQueue;
                pendingQueue = [];
                cbs.forEach(cb);
            };
            var cycle = function () { return Promise.resolve().then(executeQueue); };
            cycle();
            buffer = {
                push: function (x) {
                    pendingQueue.push(x);
                    cycle();
                },
                filter: function (filter) {
                    pendingQueue = pendingQueue.filter(filter);
                    return buffer;
                },
            };
        },
    };
    return medium;
}
function createMedium(defaults, middleware) {
    if (middleware === void 0) { middleware = ItoI; }
    return innerCreateMedium(defaults, middleware);
}
// eslint-disable-next-line @typescript-eslint/ban-types
function createSidecarMedium(options) {
    if (options === void 0) { options = {}; }
    var medium = innerCreateMedium(null);
    medium.options = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({ async: true, ssr: false }, options);
    return medium;
}


/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/native.js":
/*!******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/native.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  randomUUID
});

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rng)
/* harmony export */ });
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
let getRandomValues;
const rnds8 = new Uint8Array(16);
function rng() {
  // lazy load so that environments that need to polyfill have a chance to do so
  if (!getRandomValues) {
    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.
    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);

    if (!getRandomValues) {
      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
    }
  }

  return getRandomValues(rnds8);
}

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   unsafeStringify: () => (/* binding */ unsafeStringify)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "./node_modules/uuid/dist/esm-browser/validate.js");

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).slice(1));
}

function unsafeStringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];
}

function stringify(arr, offset = 0) {
  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ "./node_modules/uuid/dist/esm-browser/native.js");
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ "./node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/uuid/dist/esm-browser/stringify.js");




function v4(options, buf, offset) {
  if (_native_js__WEBPACK_IMPORTED_MODULE_0__["default"].randomUUID && !buf && !options) {
    return _native_js__WEBPACK_IMPORTED_MODULE_0__["default"].randomUUID();
  }

  options = options || {};
  const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ "./node_modules/uuid/dist/esm-browser/regex.js");


function validate(uuid) {
  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__["default"].test(uuid);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = window["React"];

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = window["ReactDOM"];

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@floating-ui/core/dist/floating-ui.core.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@floating-ui/core/dist/floating-ui.core.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrow: () => (/* binding */ arrow),
/* harmony export */   autoPlacement: () => (/* binding */ autoPlacement),
/* harmony export */   computePosition: () => (/* binding */ computePosition),
/* harmony export */   detectOverflow: () => (/* binding */ detectOverflow),
/* harmony export */   flip: () => (/* binding */ flip),
/* harmony export */   hide: () => (/* binding */ hide),
/* harmony export */   inline: () => (/* binding */ inline),
/* harmony export */   limitShift: () => (/* binding */ limitShift),
/* harmony export */   offset: () => (/* binding */ offset),
/* harmony export */   rectToClientRect: () => (/* reexport safe */ _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect),
/* harmony export */   shift: () => (/* binding */ shift),
/* harmony export */   size: () => (/* binding */ size)
/* harmony export */ });
/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils */ "./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs");



function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);
  const alignmentAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);
  const alignLength = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(alignmentAxis);
  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
  const isVertical = sideAxis === 'y';
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case 'top':
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case 'bottom':
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case 'right':
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case 'left':
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement)) {
    case 'start':
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case 'end':
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}

/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a reference element when it is given a certain positioning strategy.
 *
 * This export does not have any `platform` interface logic. You will need to
 * write one for the platform you are using Floating UI with.
 */
const computePosition = async (reference, floating, config) => {
  const {
    placement = 'bottom',
    strategy = 'absolute',
    middleware = [],
    platform
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));
  let rects = await platform.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === 'object') {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};

/**
 * Resolves with an object of overflow side offsets that determine how much the
 * element is overflowing a given clipping boundary on each side.
 * - positive = overflowing the boundary by that number of pixels
 * - negative = how many pixels left before it will overflow
 * - 0 = lies flush with the boundary
 * @see https://floating-ui.com/docs/detectOverflow
 */
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = 'clippingAncestors',
    rootBoundary = 'viewport',
    elementContext = 'floating',
    altBoundary = false,
    padding = 0
  } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
  const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);
  const altContext = elementContext === 'floating' ? 'reference' : 'floating';
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(await platform.getClippingRect({
    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === 'floating' ? {
    ...rects.floating,
    x,
    y
  } : rects.reference;
  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));
  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}

/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * @see https://floating-ui.com/docs/arrow
 */
const arrow = options => ({
  name: 'arrow',
  options,
  async fn(state) {
    const {
      x,
      y,
      placement,
      rects,
      platform,
      elements,
      middlewareData
    } = state;
    // Since `element` is required, we don't Partial<> the type.
    const {
      element,
      padding = 0
    } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state) || {};
    if (element == null) {
      return {};
    }
    const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);
    const coords = {
      x,
      y
    };
    const axis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);
    const length = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(axis);
    const arrowDimensions = await platform.getDimensions(element);
    const isYAxis = axis === 'y';
    const minProp = isYAxis ? 'top' : 'left';
    const maxProp = isYAxis ? 'bottom' : 'right';
    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;

    // DOM platform can return `window` as the `offsetParent`.
    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {
      clientSize = elements.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;

    // If the padding is large enough that it causes the arrow to no longer be
    // centered, modify the padding so that it is centered.
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
    const minPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[maxProp], largestPossiblePadding);

    // Make sure the arrow doesn't overflow the floating element if the center
    // point is outside the floating element's bounds.
    const min$1 = minPadding;
    const max = clientSize - arrowDimensions[length] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min$1, center, max);

    // If the reference is small enough that the arrow's padding causes it to
    // to point to nothing for an aligned placement, adjust the offset of the
    // floating element itself. To ensure `shift()` continues to take action,
    // a single reset is performed when this is true.
    const shouldAddOffset = !middlewareData.arrow && (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;
    return {
      [axis]: coords[axis] + alignmentOffset,
      data: {
        [axis]: offset,
        centerOffset: center - offset - alignmentOffset,
        ...(shouldAddOffset && {
          alignmentOffset
        })
      },
      reset: shouldAddOffset
    };
  }
});

function getPlacementList(alignment, autoAlignment, allowedPlacements) {
  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment), ...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) !== alignment)] : allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === placement);
  return allowedPlacementsSortedByAlignment.filter(placement => {
    if (alignment) {
      return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment || (autoAlignment ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAlignmentPlacement)(placement) !== placement : false);
    }
    return true;
  });
}
/**
 * Optimizes the visibility of the floating element by choosing the placement
 * that has the most space available automatically, without needing to specify a
 * preferred placement. Alternative to `flip`.
 * @see https://floating-ui.com/docs/autoPlacement
 */
const autoPlacement = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'autoPlacement',
    options,
    async fn(state) {
      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;
      const {
        rects,
        middlewareData,
        placement,
        platform,
        elements
      } = state;
      const {
        crossAxis = false,
        alignment,
        allowedPlacements = _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements,
        autoAlignment = true,
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const placements$1 = alignment !== undefined || allowedPlacements === _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;
      const currentPlacement = placements$1[currentIndex];
      if (currentPlacement == null) {
        return {};
      }
      const alignmentSides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));

      // Make `computeCoords` start from the right place.
      if (placement !== currentPlacement) {
        return {
          reset: {
            placement: placements$1[0]
          }
        };
      }
      const currentOverflows = [overflow[(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];
      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {
        placement: currentPlacement,
        overflows: currentOverflows
      }];
      const nextPlacement = placements$1[currentIndex + 1];

      // There are more placements to check.
      if (nextPlacement) {
        return {
          data: {
            index: currentIndex + 1,
            overflows: allOverflows
          },
          reset: {
            placement: nextPlacement
          }
        };
      }
      const placementsSortedByMostSpace = allOverflows.map(d => {
        const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d.placement);
        return [d.placement, alignment && crossAxis ?
        // Check along the mainAxis and main crossAxis side.
        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :
        // Check only the mainAxis.
        d.overflows[0], d.overflows];
      }).sort((a, b) => a[1] - b[1]);
      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,
      // Aligned placements should not check their opposite crossAxis
      // side.
      (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d[0]) ? 2 : 3).every(v => v <= 0));
      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];
      if (resetPlacement !== placement) {
        return {
          data: {
            index: currentIndex + 1,
            overflows: allOverflows
          },
          reset: {
            placement: resetPlacement
          }
        };
      }
      return {};
    }
  };
};

/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */
const flip = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'flip',
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = 'bestFit',
        fallbackAxisSideDirection = 'none',
        flipAlignment = true,
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);

      // If a reset by the arrow was caused due to an alignment offset being
      // added, we should skip any logic now since `flip()` has already done its
      // work.
      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
      const isBasePlacement = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(initialPlacement) === initialPlacement;
      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositePlacement)(initialPlacement)] : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getExpandedPlacements)(initialPlacement));
      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {
        fallbackPlacements.push(...(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxisPlacements)(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(placement, rects, rtl);
        overflows.push(overflow[sides[0]], overflow[sides[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];

      // One or more sides is overflowing.
      if (!overflows.every(side => side <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          // Try next placement and re-run the lifecycle.
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }

        // First, find the candidates that fit on the mainAxis side of overflow,
        // then find the placement that fits the best on the main crossAxis side.
        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;

        // Otherwise fallback.
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case 'bestFit':
              {
                var _overflowsData$map$so;
                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
                if (placement) {
                  resetPlacement = placement;
                }
                break;
              }
            case 'initialPlacement':
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};

function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.sides.some(side => overflow[side] >= 0);
}
/**
 * Provides data to hide the floating element in applicable situations, such as
 * when it is not in the same clipping context as the reference element.
 * @see https://floating-ui.com/docs/hide
 */
const hide = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'hide',
    options,
    async fn(state) {
      const {
        rects
      } = state;
      const {
        strategy = 'referenceHidden',
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      switch (strategy) {
        case 'referenceHidden':
          {
            const overflow = await detectOverflow(state, {
              ...detectOverflowOptions,
              elementContext: 'reference'
            });
            const offsets = getSideOffsets(overflow, rects.reference);
            return {
              data: {
                referenceHiddenOffsets: offsets,
                referenceHidden: isAnySideFullyClipped(offsets)
              }
            };
          }
        case 'escaped':
          {
            const overflow = await detectOverflow(state, {
              ...detectOverflowOptions,
              altBoundary: true
            });
            const offsets = getSideOffsets(overflow, rects.floating);
            return {
              data: {
                escapedOffsets: offsets,
                escaped: isAnySideFullyClipped(offsets)
              }
            };
          }
        default:
          {
            return {};
          }
      }
    }
  };
};

function getBoundingRect(rects) {
  const minX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.left));
  const minY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.top));
  const maxX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.right));
  const maxY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.bottom));
  return {
    x: minX,
    y: minY,
    width: maxX - minX,
    height: maxY - minY
  };
}
function getRectsByLine(rects) {
  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);
  const groups = [];
  let prevRect = null;
  for (let i = 0; i < sortedRects.length; i++) {
    const rect = sortedRects[i];
    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {
      groups.push([rect]);
    } else {
      groups[groups.length - 1].push(rect);
    }
    prevRect = rect;
  }
  return groups.map(rect => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(rect)));
}
/**
 * Provides improved positioning for inline reference elements that can span
 * over multiple lines, such as hyperlinks or range selections.
 * @see https://floating-ui.com/docs/inline
 */
const inline = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'inline',
    options,
    async fn(state) {
      const {
        placement,
        elements,
        rects,
        platform,
        strategy
      } = state;
      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a
      // ClientRect's bounds, despite the event listener being triggered. A
      // padding of 2 seems to handle this issue.
      const {
        padding = 2,
        x,
        y
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);
      const clientRects = getRectsByLine(nativeClientRects);
      const fallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(nativeClientRects));
      const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);
      function getBoundingClientRect() {
        // There are two rects and they are disjoined.
        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {
          // Find the first rect in which the point is fully inside.
          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;
        }

        // There are 2 or more connected rects.
        if (clientRects.length >= 2) {
          if ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y') {
            const firstRect = clientRects[0];
            const lastRect = clientRects[clientRects.length - 1];
            const isTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'top';
            const top = firstRect.top;
            const bottom = lastRect.bottom;
            const left = isTop ? firstRect.left : lastRect.left;
            const right = isTop ? firstRect.right : lastRect.right;
            const width = right - left;
            const height = bottom - top;
            return {
              top,
              bottom,
              left,
              right,
              width,
              height,
              x: left,
              y: top
            };
          }
          const isLeftSide = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'left';
          const maxRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...clientRects.map(rect => rect.right));
          const minLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...clientRects.map(rect => rect.left));
          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);
          const top = measureRects[0].top;
          const bottom = measureRects[measureRects.length - 1].bottom;
          const left = minLeft;
          const right = maxRight;
          const width = right - left;
          const height = bottom - top;
          return {
            top,
            bottom,
            left,
            right,
            width,
            height,
            x: left,
            y: top
          };
        }
        return fallback;
      }
      const resetRects = await platform.getElementRects({
        reference: {
          getBoundingClientRect
        },
        floating: elements.floating,
        strategy
      });
      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {
        return {
          reset: {
            rects: resetRects
          }
        };
      }
      return {};
    }
  };
};

// For type backwards-compatibility, the `OffsetOptions` type was also
// Derivable.
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform,
    elements
  } = state;
  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
  const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);
  const isVertical = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';
  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);

  // eslint-disable-next-line prefer-const
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === 'number' ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === 'number') {
    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}

/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */
const offset = function (options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: 'offset',
    options,
    async fn(state) {
      const {
        x,
        y
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};

/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */
const shift = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'shift',
    options,
    async fn(state) {
      const {
        x,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: _ref => {
            let {
              x,
              y
            } = _ref;
            return {
              x,
              y
            };
          }
        },
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));
      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === 'y' ? 'top' : 'left';
        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';
        const min = mainAxisCoord + overflow[minSide];
        const max = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, mainAxisCoord, max);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === 'y' ? 'top' : 'left';
        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';
        const min = crossAxisCoord + overflow[minSide];
        const max = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, crossAxisCoord, max);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      };
    }
  };
};
/**
 * Built-in `limiter` that will stop `shift()` at a certain point.
 */
const limitShift = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(state) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const coords = {
        x,
        y
      };
      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);
      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(offset, state);
      const computedOffset = typeof rawOffset === 'number' ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === 'y' ? 'height' : 'width';
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === 'y' ? 'width' : 'height';
        const isOriginSide = ['top', 'left'].includes((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};

/**
 * Provides data that allows you to change the size of the floating element —
 * for instance, prevent it from overflowing the clipping boundary or match the
 * width of the reference element.
 * @see https://floating-ui.com/docs/size
 */
const size = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'size',
    options,
    async fn(state) {
      const {
        placement,
        rects,
        platform,
        elements
      } = state;
      const {
        apply = () => {},
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
      const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);
      const isYAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';
      const {
        width,
        height
      } = rects.floating;
      let heightSide;
      let widthSide;
      if (side === 'top' || side === 'bottom') {
        heightSide = side;
        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';
      } else {
        widthSide = side;
        heightSide = alignment === 'end' ? 'top' : 'bottom';
      }
      const overflowAvailableHeight = height - overflow[heightSide];
      const overflowAvailableWidth = width - overflow[widthSide];
      const noShift = !state.middlewareData.shift;
      let availableHeight = overflowAvailableHeight;
      let availableWidth = overflowAvailableWidth;
      if (isYAxis) {
        const maximumClippingWidth = width - overflow.left - overflow.right;
        availableWidth = alignment || noShift ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
      } else {
        const maximumClippingHeight = height - overflow.top - overflow.bottom;
        availableHeight = alignment || noShift ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
      }
      if (noShift && !alignment) {
        const xMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, 0);
        const xMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.right, 0);
        const yMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, 0);
        const yMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.bottom, 0);
        if (isYAxis) {
          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, overflow.right));
        } else {
          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, overflow.bottom));
        }
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      const nextDimensions = await platform.getDimensions(elements.floating);
      if (width !== nextDimensions.width || height !== nextDimensions.height) {
        return {
          reset: {
            rects: true
          }
        };
      }
      return {};
    }
  };
};




/***/ }),

/***/ "./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrow: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.arrow),
/* harmony export */   autoPlacement: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.autoPlacement),
/* harmony export */   autoUpdate: () => (/* binding */ autoUpdate),
/* harmony export */   computePosition: () => (/* binding */ computePosition),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.detectOverflow),
/* harmony export */   flip: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.flip),
/* harmony export */   getOverflowAncestors: () => (/* reexport safe */ _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors),
/* harmony export */   hide: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.hide),
/* harmony export */   inline: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.inline),
/* harmony export */   limitShift: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.limitShift),
/* harmony export */   offset: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.offset),
/* harmony export */   platform: () => (/* binding */ platform),
/* harmony export */   shift: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.shift),
/* harmony export */   size: () => (/* reexport safe */ _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.size)
/* harmony export */ });
/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/utils */ "./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs");
/* harmony import */ var _floating_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/core */ "./node_modules/@floating-ui/core/dist/floating-ui.core.mjs");
/* harmony import */ var _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/utils/dom */ "./node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs");






function getCssDimensions(element) {
  const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(element);
  // In testing environments, the `width` and `height` properties are empty
  // strings for SVG elements, returning NaN. Fallback to `0` in this case.
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.round)(width) !== offsetWidth || (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.round)(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}

function unwrapElement(element) {
  return !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement)(element) ? element.contextElement : element;
}

function getScale(element) {
  const domElement = unwrapElement(element);
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(domElement)) {
    return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.round)(rect.width) : rect.width) / width;
  let y = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.round)(rect.height) : rect.height) / height;

  // 0, NaN, or Infinity should always fallback to 1.

  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}

const noOffsets = /*#__PURE__*/(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(0);
function getVisualOffsets(element) {
  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getWindow)(element);
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isWebKit)() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getWindow)(element)) {
    return false;
  }
  return isFixed;
}

function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(1);
  if (includeScale) {
    if (offsetParent) {
      if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement)(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(0);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getWindow)(domElement);
    const offsetWin = offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement)(offsetParent) ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getWindow)(offsetParent) : offsetParent;
    let currentIFrame = win.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== win) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left;
      y += top;
      currentIFrame = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getWindow)(currentIFrame).frameElement;
    }
  }
  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.rectToClientRect)({
    width,
    height,
    x,
    y
  });
}

function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent);
  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement)(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(1);
  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {
    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isOverflowElement)(documentElement)) {
      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeScroll)(offsetParent);
    }
    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}

function getClientRects(element) {
  return Array.from(element.getClientRects());
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  return getBoundingClientRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement)(element)).left + (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeScroll)(element).scrollLeft;
}

// Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable.
function getDocumentRect(element) {
  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement)(element);
  const scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeScroll)(element);
  const body = element.ownerDocument.body;
  const width = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(body).direction === 'rtl') {
    x += (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.max)(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

function getViewportRect(element, strategy) {
  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getWindow)(element);
  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement)(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isWebKit)();
    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}

// Returns the inner client rect, subtracting scrollbars if present.
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(element) ? getScale(element) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === 'viewport') {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === 'document') {
    rect = getDocumentRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement)(element));
  } else if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement)(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.rectToClientRect)(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getParentNode)(element);
  if (parentNode === stopNode || !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement)(parentNode) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isLastTraversableNode)(parentNode)) {
    return false;
  }
  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);
}

// A "clipping ancestor" is an `overflow` element with the characteristic of
// clipping (or hiding) child elements. This returns all clipping ancestors
// of the given element up the tree.
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors)(element, [], false).filter(el => (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement)(el) && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeName)(el) !== 'body');
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(element).position === 'fixed';
  let currentNode = elementIsFixed ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getParentNode)(element) : element;

  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
  while ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement)(currentNode) && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isLastTraversableNode)(currentNode)) {
    const computedStyle = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(currentNode);
    const currentNodeIsContaining = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isContainingBlock)(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isOverflowElement)(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      // Drop non-containing blocks.
      result = result.filter(ancestor => ancestor !== currentNode);
    } else {
      // Record last containing block for next iteration.
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getParentNode)(currentNode);
  }
  cache.set(element, result);
  return result;
}

// Gets the maximum area that the element is visible in due to any number of
// clipping ancestors.
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.max)(rect.top, accRect.top);
    accRect.right = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.min)(rect.right, accRect.right);
    accRect.bottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.min)(rect.bottom, accRect.bottom);
    accRect.left = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.max)(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}

function getDimensions(element) {
  return getCssDimensions(element);
}

function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent);
  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement)(offsetParent);
  const isFixed = strategy === 'fixed';
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.createCoords)(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isOverflowElement)(documentElement)) {
      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeScroll)(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function getTrueOffsetParent(element, polyfill) {
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(element) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(element).position === 'fixed') {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}

// Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.
function getOffsetParent(element, polyfill) {
  const window = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getWindow)(element);
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(element)) {
    return window;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isTableElement)(offsetParent) && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeName)(offsetParent) === 'html' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getNodeName)(offsetParent) === 'body' && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(offsetParent).position === 'static' && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isContainingBlock)(offsetParent))) {
    return window;
  }
  return offsetParent || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getContainingBlock)(element) || window;
}

const getElementRects = async function (_ref) {
  let {
    reference,
    floating,
    strategy
  } = _ref;
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  return {
    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
    floating: {
      x: 0,
      y: 0,
      ...(await getDimensionsFn(floating))
    }
  };
};

function isRTL(element) {
  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(element).direction === 'rtl';
}

const platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.isElement,
  isRTL
};

// https://samthor.au/2021/observing-dom/
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getDocumentElement)(element);
  function cleanup() {
    clearTimeout(timeoutId);
    io && io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const {
      left,
      top,
      width,
      height
    } = element.getBoundingClientRect();
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.floor)(top);
    const insetRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.floor)(root.clientWidth - (left + width));
    const insetBottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.floor)(root.clientHeight - (top + height));
    const insetLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.floor)(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.max)(0, (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_2__.min)(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 100);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }

    // Older browsers don't support a `document` as the root and will throw an
    // error.
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}

/**
 * Automatically updates the position of the floating element when necessary.
 * Should only be called when the floating element is mounted on the DOM or
 * visible on the screen.
 * @returns cleanup function that should be invoked when the floating element is
 * removed from the DOM or hidden from the screen.
 * @see https://floating-ui.com/docs/autoUpdate
 */
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === 'function',
    layoutShift = typeof IntersectionObserver === 'function',
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors)(referenceEl) : []), ...(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors)(floating)] : [];
  ancestors.forEach(ancestor => {
    ancestorScroll && ancestor.addEventListener('scroll', update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener('resize', update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver(_ref => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        // Prevent update loops when using the `size` middleware.
        // https://github.com/floating-ui/floating-ui/issues/1740
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          resizeObserver && resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    ancestors.forEach(ancestor => {
      ancestorScroll && ancestor.removeEventListener('scroll', update);
      ancestorResize && ancestor.removeEventListener('resize', update);
    });
    cleanupIo && cleanupIo();
    resizeObserver && resizeObserver.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}

/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a reference element when it is given a certain CSS positioning
 * strategy.
 */
const computePosition = (reference, floating, options) => {
  // This caches the expensive `getClippingElementAncestors` function so that
  // multiple lifecycle resets re-use the same result. It only lives for a
  // single call. If other functions become expensive, we can add them as well.
  const cache = new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return (0,_floating_ui_core__WEBPACK_IMPORTED_MODULE_0__.computePosition)(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};




/***/ }),

/***/ "./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   alignments: () => (/* binding */ alignments),
/* harmony export */   clamp: () => (/* binding */ clamp),
/* harmony export */   createCoords: () => (/* binding */ createCoords),
/* harmony export */   evaluate: () => (/* binding */ evaluate),
/* harmony export */   expandPaddingObject: () => (/* binding */ expandPaddingObject),
/* harmony export */   floor: () => (/* binding */ floor),
/* harmony export */   getAlignment: () => (/* binding */ getAlignment),
/* harmony export */   getAlignmentAxis: () => (/* binding */ getAlignmentAxis),
/* harmony export */   getAlignmentSides: () => (/* binding */ getAlignmentSides),
/* harmony export */   getAxisLength: () => (/* binding */ getAxisLength),
/* harmony export */   getExpandedPlacements: () => (/* binding */ getExpandedPlacements),
/* harmony export */   getOppositeAlignmentPlacement: () => (/* binding */ getOppositeAlignmentPlacement),
/* harmony export */   getOppositeAxis: () => (/* binding */ getOppositeAxis),
/* harmony export */   getOppositeAxisPlacements: () => (/* binding */ getOppositeAxisPlacements),
/* harmony export */   getOppositePlacement: () => (/* binding */ getOppositePlacement),
/* harmony export */   getPaddingObject: () => (/* binding */ getPaddingObject),
/* harmony export */   getSide: () => (/* binding */ getSide),
/* harmony export */   getSideAxis: () => (/* binding */ getSideAxis),
/* harmony export */   max: () => (/* binding */ max),
/* harmony export */   min: () => (/* binding */ min),
/* harmony export */   placements: () => (/* binding */ placements),
/* harmony export */   rectToClientRect: () => (/* binding */ rectToClientRect),
/* harmony export */   round: () => (/* binding */ round),
/* harmony export */   sides: () => (/* binding */ sides)
/* harmony export */ });
const sides = ['top', 'right', 'bottom', 'left'];
const alignments = ['start', 'end'];
const placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
const min = Math.min;
const max = Math.max;
const round = Math.round;
const floor = Math.floor;
const createCoords = v => ({
  x: v,
  y: v
});
const oppositeSideMap = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
const oppositeAlignmentMap = {
  start: 'end',
  end: 'start'
};
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === 'function' ? value(param) : value;
}
function getSide(placement) {
  return placement.split('-')[0];
}
function getAlignment(placement) {
  return placement.split('-')[1];
}
function getOppositeAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
function getAxisLength(axis) {
  return axis === 'y' ? 'height' : 'width';
}
function getSideAxis(placement) {
  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ['left', 'right'];
  const rl = ['right', 'left'];
  const tb = ['top', 'bottom'];
  const bt = ['bottom', 'top'];
  switch (side) {
    case 'top':
    case 'bottom':
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case 'left':
    case 'right':
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === 'start', rtl);
  if (alignment) {
    list = list.map(side => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== 'number' ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}




/***/ }),

/***/ "./node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getComputedStyle: () => (/* binding */ getComputedStyle),
/* harmony export */   getContainingBlock: () => (/* binding */ getContainingBlock),
/* harmony export */   getDocumentElement: () => (/* binding */ getDocumentElement),
/* harmony export */   getNearestOverflowAncestor: () => (/* binding */ getNearestOverflowAncestor),
/* harmony export */   getNodeName: () => (/* binding */ getNodeName),
/* harmony export */   getNodeScroll: () => (/* binding */ getNodeScroll),
/* harmony export */   getOverflowAncestors: () => (/* binding */ getOverflowAncestors),
/* harmony export */   getParentNode: () => (/* binding */ getParentNode),
/* harmony export */   getWindow: () => (/* binding */ getWindow),
/* harmony export */   isContainingBlock: () => (/* binding */ isContainingBlock),
/* harmony export */   isElement: () => (/* binding */ isElement),
/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),
/* harmony export */   isLastTraversableNode: () => (/* binding */ isLastTraversableNode),
/* harmony export */   isNode: () => (/* binding */ isNode),
/* harmony export */   isOverflowElement: () => (/* binding */ isOverflowElement),
/* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot),
/* harmony export */   isTableElement: () => (/* binding */ isTableElement),
/* harmony export */   isWebKit: () => (/* binding */ isWebKit)
/* harmony export */ });
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || '').toLowerCase();
  }
  // Mocked nodes in testing environments may not be instances of Node. By
  // returning `#document` an infinite loop won't occur.
  // https://github.com/floating-ui/floating-ui/issues/2317
  return '#document';
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  // Browsers without `ShadowRoot` support.
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);
}
function isTableElement(element) {
  return ['table', 'td', 'th'].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const webkit = isWebKit();
  const css = getComputedStyle(element);

  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === 'undefined' || !CSS.supports) return false;
  return CSS.supports('-webkit-backdrop-filter', 'none');
}
function isLastTraversableNode(node) {
  return ['html', 'body', '#document'].includes(getNodeName(node));
}
function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getParentNode(node) {
  if (getNodeName(node) === 'html') {
    return node;
  }
  const result =
  // Step into the shadow DOM of the parent of a slotted node.
  node.assignedSlot ||
  // DOM Element detected.
  node.parentNode ||
  // ShadowRoot detected.
  isShadowRoot(node) && node.host ||
  // Fallback.
  getDocumentElement(node);
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}




/***/ }),

/***/ "./node_modules/@radix-ui/primitive/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@radix-ui/primitive/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   composeEventHandlers: () => (/* binding */ $e42e1063c40fb3ef$export$b9ecd428b558ff10)
/* harmony export */ });
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented: checkForDefaultPrevented = true  } = {}) {
    return function handleEvent(event) {
        originalEventHandler === null || originalEventHandler === void 0 || originalEventHandler(event);
        if (checkForDefaultPrevented === false || !event.defaultPrevented) return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);
    };
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-compose-refs/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-compose-refs/dist/index.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   composeRefs: () => (/* binding */ $6ed0406888f73fc4$export$43e446d32b3d21af),
/* harmony export */   useComposedRefs: () => (/* binding */ $6ed0406888f73fc4$export$c7b2cbe3552a0d05)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");



/**
 * Set a given ref to a given value
 * This utility takes care of different types of refs: callback refs and RefObject(s)
 */ function $6ed0406888f73fc4$var$setRef(ref, value) {
    if (typeof ref === 'function') ref(value);
    else if (ref !== null && ref !== undefined) ref.current = value;
}
/**
 * A utility to compose multiple refs together
 * Accepts callback refs and RefObject(s)
 */ function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
    return (node)=>refs.forEach((ref)=>$6ed0406888f73fc4$var$setRef(ref, node)
        )
    ;
}
/**
 * A custom hook that composes multiple refs
 * Accepts callback refs and RefObject(s)
 */ function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
    // eslint-disable-next-line react-hooks/exhaustive-deps
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createContext: () => (/* binding */ $c512c27ab02ef895$export$fd42f52fd3ae1109),
/* harmony export */   createContextScope: () => (/* binding */ $c512c27ab02ef895$export$50c7b4e9d9f19c1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");



function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
    const Context = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(defaultContext);
    function Provider(props) {
        const { children: children , ...context } = props; // Only re-memoize when prop values change
        // eslint-disable-next-line react-hooks/exhaustive-deps
        const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>context
        , Object.values(context));
        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Context.Provider, {
            value: value
        }, children);
    }
    function useContext(consumerName) {
        const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Context);
        if (context) return context;
        if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.
        throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    Provider.displayName = rootComponentName + 'Provider';
    return [
        Provider,
        useContext
    ];
}
/* -------------------------------------------------------------------------------------------------
 * createContextScope
 * -----------------------------------------------------------------------------------------------*/ function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
    let defaultContexts = [];
    /* -----------------------------------------------------------------------------------------------
   * createContext
   * ---------------------------------------------------------------------------------------------*/ function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
        const BaseContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(defaultContext);
        const index = defaultContexts.length;
        defaultContexts = [
            ...defaultContexts,
            defaultContext
        ];
        function Provider(props) {
            const { scope: scope , children: children , ...context } = props;
            const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext; // Only re-memoize when prop values change
            // eslint-disable-next-line react-hooks/exhaustive-deps
            const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>context
            , Object.values(context));
            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Context.Provider, {
                value: value
            }, children);
        }
        function useContext(consumerName, scope) {
            const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext;
            const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Context);
            if (context) return context;
            if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.
            throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
        }
        Provider.displayName = rootComponentName + 'Provider';
        return [
            Provider,
            useContext
        ];
    }
    /* -----------------------------------------------------------------------------------------------
   * createScope
   * ---------------------------------------------------------------------------------------------*/ const createScope = ()=>{
        const scopeContexts = defaultContexts.map((defaultContext)=>{
            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(defaultContext);
        });
        return function useScope(scope) {
            const contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;
            return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({
                    [`__scope${scopeName}`]: {
                        ...scope,
                        [scopeName]: contexts
                    }
                })
            , [
                scope,
                contexts
            ]);
        };
    };
    createScope.scopeName = scopeName;
    return [
        $c512c27ab02ef895$export$fd42f52fd3ae1109,
        $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)
    ];
}
/* -------------------------------------------------------------------------------------------------
 * composeContextScopes
 * -----------------------------------------------------------------------------------------------*/ function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
    const baseScope = scopes[0];
    if (scopes.length === 1) return baseScope;
    const createScope1 = ()=>{
        const scopeHooks = scopes.map((createScope)=>({
                useScope: createScope(),
                scopeName: createScope.scopeName
            })
        );
        return function useComposedScopes(overrideScopes) {
            const nextScopes1 = scopeHooks.reduce((nextScopes, { useScope: useScope , scopeName: scopeName  })=>{
                // We are calling a hook inside a callback which React warns against to avoid inconsistent
                // renders, however, scoping doesn't have render side effects so we ignore the rule.
                // eslint-disable-next-line react-hooks/rules-of-hooks
                const scopeProps = useScope(overrideScopes);
                const currentScope = scopeProps[`__scope${scopeName}`];
                return {
                    ...nextScopes,
                    ...currentScope
                };
            }, {});
            return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({
                    [`__scope${baseScope.scopeName}`]: nextScopes1
                })
            , [
                nextScopes1
            ]);
        };
    };
    createScope1.scopeName = baseScope.scopeName;
    return createScope1;
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-dialog/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-dialog/dist/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Close: () => (/* binding */ $5d3850c4d0b4e6c7$export$f39c2d165cd861fe),
/* harmony export */   Content: () => (/* binding */ $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2),
/* harmony export */   Description: () => (/* binding */ $5d3850c4d0b4e6c7$export$393edc798c47379d),
/* harmony export */   Dialog: () => (/* binding */ $5d3850c4d0b4e6c7$export$3ddf2d174ce01153),
/* harmony export */   DialogClose: () => (/* binding */ $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac),
/* harmony export */   DialogContent: () => (/* binding */ $5d3850c4d0b4e6c7$export$b6d9565de1e068cf),
/* harmony export */   DialogDescription: () => (/* binding */ $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5),
/* harmony export */   DialogOverlay: () => (/* binding */ $5d3850c4d0b4e6c7$export$bd1d06c79be19e17),
/* harmony export */   DialogPortal: () => (/* binding */ $5d3850c4d0b4e6c7$export$dad7c95542bacce0),
/* harmony export */   DialogTitle: () => (/* binding */ $5d3850c4d0b4e6c7$export$16f7638e4a34b909),
/* harmony export */   DialogTrigger: () => (/* binding */ $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88),
/* harmony export */   Overlay: () => (/* binding */ $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff),
/* harmony export */   Portal: () => (/* binding */ $5d3850c4d0b4e6c7$export$602eac185826482c),
/* harmony export */   Root: () => (/* binding */ $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9),
/* harmony export */   Title: () => (/* binding */ $5d3850c4d0b4e6c7$export$f99233281efd08a0),
/* harmony export */   Trigger: () => (/* binding */ $5d3850c4d0b4e6c7$export$41fb9f06171c75f4),
/* harmony export */   WarningProvider: () => (/* binding */ $5d3850c4d0b4e6c7$export$69b62a49393917d6),
/* harmony export */   createDialogScope: () => (/* binding */ $5d3850c4d0b4e6c7$export$cc702773b8ea3e41)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/primitive */ "./node_modules/@radix-ui/primitive/dist/index.mjs");
/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ "./node_modules/@radix-ui/react-compose-refs/dist/index.mjs");
/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ "./node_modules/@radix-ui/react-context/dist/index.mjs");
/* harmony import */ var _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-id */ "./node_modules/@radix-ui/react-id/dist/index.mjs");
/* harmony import */ var _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-controllable-state */ "./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs");
/* harmony import */ var _radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @radix-ui/react-dismissable-layer */ "./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs");
/* harmony import */ var _radix_ui_react_focus_scope__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @radix-ui/react-focus-scope */ "./node_modules/@radix-ui/react-focus-scope/dist/index.mjs");
/* harmony import */ var _radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-portal */ "./node_modules/@radix-ui/react-portal/dist/index.mjs");
/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-presence */ "./node_modules/@radix-ui/react-presence/dist/index.mjs");
/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-primitive */ "./node_modules/@radix-ui/react-primitive/dist/index.mjs");
/* harmony import */ var _radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @radix-ui/react-focus-guards */ "./node_modules/@radix-ui/react-focus-guards/dist/index.mjs");
/* harmony import */ var react_remove_scroll__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-remove-scroll */ "./node_modules/react-remove-scroll/dist/es2015/Combination.js");
/* harmony import */ var aria_hidden__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! aria-hidden */ "./node_modules/aria-hidden/dist/es2015/index.js");
/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-slot */ "./node_modules/@radix-ui/react-slot/dist/index.mjs");

































/* -------------------------------------------------------------------------------------------------
 * Dialog
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DIALOG_NAME = 'Dialog';
const [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)($5d3850c4d0b4e6c7$var$DIALOG_NAME);
const [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);
const $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props)=>{
    const { __scopeDialog: __scopeDialog , children: children , open: openProp , defaultOpen: defaultOpen , onOpenChange: onOpenChange , modal: modal = true  } = props;
    const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const [open = false, setOpen] = (0,_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_3__.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
    });
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5d3850c4d0b4e6c7$var$DialogProvider, {
        scope: __scopeDialog,
        triggerRef: triggerRef,
        contentRef: contentRef,
        contentId: (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId)(),
        titleId: (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId)(),
        descriptionId: (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId)(),
        open: open,
        onOpenChange: setOpen,
        onOpenToggle: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>setOpen((prevOpen)=>!prevOpen
            )
        , [
            setOpen
        ]),
        modal: modal
    }, children);
};
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {
    displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME
});
/* -------------------------------------------------------------------------------------------------
 * DialogTrigger
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$TRIGGER_NAME = 'DialogTrigger';
const $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { __scopeDialog: __scopeDialog , ...triggerProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);
    const composedTriggerRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, context.triggerRef);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.button, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": context.open,
        "aria-controls": context.contentId,
        "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, triggerProps, {
        ref: composedTriggerRef,
        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onClick, context.onOpenToggle)
    }));
});
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {
    displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME
});
/* -------------------------------------------------------------------------------------------------
 * DialogPortal
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$PORTAL_NAME = 'DialogPortal';
const [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {
    forceMount: undefined
});
const $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props)=>{
    const { __scopeDialog: __scopeDialog , forceMount: forceMount , children: children , container: container  } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5d3850c4d0b4e6c7$var$PortalProvider, {
        scope: __scopeDialog,
        forceMount: forceMount
    }, react__WEBPACK_IMPORTED_MODULE_1__.Children.map(children, (child)=>/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__.Presence, {
            present: forceMount || context.open
        }, /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_9__.Portal, {
            asChild: true,
            container: container
        }, child))
    ));
};
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {
    displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME
});
/* -------------------------------------------------------------------------------------------------
 * DialogOverlay
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$OVERLAY_NAME = 'DialogOverlay';
const $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
    const { forceMount: forceMount = portalContext.forceMount , ...overlayProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
    return context.modal ? /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__.Presence, {
        present: forceMount || context.open
    }, /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5d3850c4d0b4e6c7$var$DialogOverlayImpl, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, overlayProps, {
        ref: forwardedRef
    }))) : null;
});
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {
    displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME
});
const $5d3850c4d0b4e6c7$var$DialogOverlayImpl = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { __scopeDialog: __scopeDialog , ...overlayProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);
    return(/*#__PURE__*/ // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
    // ie. when `Overlay` and `Content` are siblings
    (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(react_remove_scroll__WEBPACK_IMPORTED_MODULE_10__["default"], {
        as: _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot,
        allowPinchZoom: true,
        shards: [
            context.contentRef
        ]
    }, /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.div, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, overlayProps, {
        ref: forwardedRef // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.
        ,
        style: {
            pointerEvents: 'auto',
            ...overlayProps.style
        }
    }))));
});
/* -------------------------------------------------------------------------------------------------
 * DialogContent
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$CONTENT_NAME = 'DialogContent';
const $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
    const { forceMount: forceMount = portalContext.forceMount , ...contentProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__.Presence, {
        present: forceMount || context.open
    }, context.modal ? /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5d3850c4d0b4e6c7$var$DialogContentModal, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, contentProps, {
        ref: forwardedRef
    })) : /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5d3850c4d0b4e6c7$var$DialogContentNonModal, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, contentProps, {
        ref: forwardedRef
    })));
});
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {
    displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME
});
/* -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DialogContentModal = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
    const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, context.contentRef, contentRef); // aria-hide everything except the content (better supported equivalent to setting aria-modal)
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        const content = contentRef.current;
        if (content) return (0,aria_hidden__WEBPACK_IMPORTED_MODULE_12__.hideOthers)(content);
    }, []);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
        ref: composedRefs // we make sure focus isn't trapped once `DialogContent` has been closed
        ,
        trapFocus: context.open,
        disableOutsidePointerEvents: true,
        onCloseAutoFocus: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onCloseAutoFocus, (event)=>{
            var _context$triggerRef$c;
            event.preventDefault();
            (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
        }),
        onPointerDownOutside: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerDownOutside, (event)=>{
            const originalEvent = event.detail.originalEvent;
            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
            const isRightClick = originalEvent.button === 2 || ctrlLeftClick; // If the event is a right-click, we shouldn't close because
            // it is effectively as if we right-clicked the `Overlay`.
            if (isRightClick) event.preventDefault();
        }) // When focus is trapped, a `focusout` event may still happen.
        ,
        onFocusOutside: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onFocusOutside, (event)=>event.preventDefault()
        )
    }));
});
/* -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DialogContentNonModal = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
    const hasInteractedOutsideRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);
    const hasPointerDownOutsideRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
        ref: forwardedRef,
        trapFocus: false,
        disableOutsidePointerEvents: false,
        onCloseAutoFocus: (event)=>{
            var _props$onCloseAutoFoc;
            (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);
            if (!event.defaultPrevented) {
                var _context$triggerRef$c2;
                if (!hasInteractedOutsideRef.current) (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(); // Always prevent auto focus because we either focus manually or want user agent focus
                event.preventDefault();
            }
            hasInteractedOutsideRef.current = false;
            hasPointerDownOutsideRef.current = false;
        },
        onInteractOutside: (event)=>{
            var _props$onInteractOuts, _context$triggerRef$c3;
            (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);
            if (!event.defaultPrevented) {
                hasInteractedOutsideRef.current = true;
                if (event.detail.originalEvent.type === 'pointerdown') hasPointerDownOutsideRef.current = true;
            } // Prevent dismissing when clicking the trigger.
            // As the trigger is already setup to close, without doing so would
            // cause it to close and immediately open.
            const target = event.target;
            const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);
            if (targetIsTrigger) event.preventDefault(); // On Safari if the trigger is inside a container with tabIndex={0}, when clicked
            // we will get the pointer down outside event on the trigger, but then a subsequent
            // focus outside event on the container, we ignore any focus outside event when we've
            // already had a pointer down outside event.
            if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) event.preventDefault();
        }
    }));
});
/* -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DialogContentImpl = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { __scopeDialog: __scopeDialog , trapFocus: trapFocus , onOpenAutoFocus: onOpenAutoFocus , onCloseAutoFocus: onCloseAutoFocus , ...contentProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);
    const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, contentRef); // Make sure the whole tree has focus guards as our `Dialog` will be
    // the last element in the DOM (beacuse of the `Portal`)
    (0,_radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_13__.useFocusGuards)();
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_focus_scope__WEBPACK_IMPORTED_MODULE_14__.FocusScope, {
        asChild: true,
        loop: true,
        trapped: trapFocus,
        onMountAutoFocus: onOpenAutoFocus,
        onUnmountAutoFocus: onCloseAutoFocus
    }, /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_15__.DismissableLayer, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        role: "dialog",
        id: context.contentId,
        "aria-describedby": context.descriptionId,
        "aria-labelledby": context.titleId,
        "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, contentProps, {
        ref: composedRefs,
        onDismiss: ()=>context.onOpenChange(false)
    }))), false);
});
/* -------------------------------------------------------------------------------------------------
 * DialogTitle
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$TITLE_NAME = 'DialogTitle';
const $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { __scopeDialog: __scopeDialog , ...titleProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.h2, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        id: context.titleId
    }, titleProps, {
        ref: forwardedRef
    }));
});
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {
    displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME
});
/* -------------------------------------------------------------------------------------------------
 * DialogDescription
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = 'DialogDescription';
const $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { __scopeDialog: __scopeDialog , ...descriptionProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.p, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        id: context.descriptionId
    }, descriptionProps, {
        ref: forwardedRef
    }));
});
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {
    displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME
});
/* -------------------------------------------------------------------------------------------------
 * DialogClose
 * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$CLOSE_NAME = 'DialogClose';
const $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { __scopeDialog: __scopeDialog , ...closeProps } = props;
    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.button, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        type: "button"
    }, closeProps, {
        ref: forwardedRef,
        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onClick, ()=>context.onOpenChange(false)
        )
    }));
});
/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {
    displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME
});
/* -----------------------------------------------------------------------------------------------*/ function $5d3850c4d0b4e6c7$var$getState(open) {
    return open ? 'open' : 'closed';
}
const $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = 'DialogTitleWarning';
const [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContext)($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {
    contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,
    titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,
    docsSlug: 'dialog'
});
const $5d3850c4d0b4e6c7$var$TitleWarning = ({ titleId: titleId  })=>{
    const titleWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME);
    const MESSAGE = `\`${titleWarningContext.contentName}\` requires a \`${titleWarningContext.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${titleWarningContext.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (titleId) {
            const hasTitle = document.getElementById(titleId);
            if (!hasTitle) throw new Error(MESSAGE);
        }
    }, [
        MESSAGE,
        titleId
    ]);
    return null;
};
const $5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';
const $5d3850c4d0b4e6c7$var$DescriptionWarning = ({ contentRef: contentRef , descriptionId: descriptionId  })=>{
    const descriptionWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME);
    const MESSAGE = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${descriptionWarningContext.contentName}}.`;
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        var _contentRef$current;
        const describedById = (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.getAttribute('aria-describedby'); // if we have an id and the user hasn't set aria-describedby={undefined}
        if (descriptionId && describedById) {
            const hasDescription = document.getElementById(descriptionId);
            if (!hasDescription) console.warn(MESSAGE);
        }
    }, [
        MESSAGE,
        contentRef,
        descriptionId
    ]);
    return null;
};
const $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;
const $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;
const $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;
const $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;
const $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;
const $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;
const $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;
const $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Branch: () => (/* binding */ $5cb92bef7577960e$export$aecb2ddcb55c95be),
/* harmony export */   DismissableLayer: () => (/* binding */ $5cb92bef7577960e$export$177fb62ff3ec1f22),
/* harmony export */   DismissableLayerBranch: () => (/* binding */ $5cb92bef7577960e$export$4d5eb2109db14228),
/* harmony export */   Root: () => (/* binding */ $5cb92bef7577960e$export$be92b6f5f03c0fe9)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/primitive */ "./node_modules/@radix-ui/primitive/dist/index.mjs");
/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ "./node_modules/@radix-ui/react-primitive/dist/index.mjs");
/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ "./node_modules/@radix-ui/react-compose-refs/dist/index.mjs");
/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ "./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs");
/* harmony import */ var _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-escape-keydown */ "./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs");















/* -------------------------------------------------------------------------------------------------
 * DismissableLayer
 * -----------------------------------------------------------------------------------------------*/ const $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME = 'DismissableLayer';
const $5cb92bef7577960e$var$CONTEXT_UPDATE = 'dismissableLayer.update';
const $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';
const $5cb92bef7577960e$var$FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';
let $5cb92bef7577960e$var$originalBodyPointerEvents;
const $5cb92bef7577960e$var$DismissableLayerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({
    layers: new Set(),
    layersWithOutsidePointerEventsDisabled: new Set(),
    branches: new Set()
});
const $5cb92bef7577960e$export$177fb62ff3ec1f22 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    var _node$ownerDocument;
    const { disableOutsidePointerEvents: disableOutsidePointerEvents = false , onEscapeKeyDown: onEscapeKeyDown , onPointerDownOutside: onPointerDownOutside , onFocusOutside: onFocusOutside , onInteractOutside: onInteractOutside , onDismiss: onDismiss , ...layerProps } = props;
    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
    const [node1, setNode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const ownerDocument = (_node$ownerDocument = node1 === null || node1 === void 0 ? void 0 : node1.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;
    const [, force] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, (node)=>setNode(node)
    );
    const layers = Array.from(context.layers);
    const [highestLayerWithOutsidePointerEventsDisabled] = [
        ...context.layersWithOutsidePointerEventsDisabled
    ].slice(-1); // prettier-ignore
    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore
    const index = node1 ? layers.indexOf(node1) : -1;
    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;
    const pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event)=>{
        const target = event.target;
        const isPointerDownOnBranch = [
            ...context.branches
        ].some((branch)=>branch.contains(target)
        );
        if (!isPointerEventsEnabled || isPointerDownOnBranch) return;
        onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);
        onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
        if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();
    }, ownerDocument);
    const focusOutside = $5cb92bef7577960e$var$useFocusOutside((event)=>{
        const target = event.target;
        const isFocusInBranch = [
            ...context.branches
        ].some((branch)=>branch.contains(target)
        );
        if (isFocusInBranch) return;
        onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);
        onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
        if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();
    }, ownerDocument);
    (0,_radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown)((event)=>{
        const isHighestLayer = index === context.layers.size - 1;
        if (!isHighestLayer) return;
        onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);
        if (!event.defaultPrevented && onDismiss) {
            event.preventDefault();
            onDismiss();
        }
    }, ownerDocument);
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (!node1) return;
        if (disableOutsidePointerEvents) {
            if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
                $5cb92bef7577960e$var$originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
                ownerDocument.body.style.pointerEvents = 'none';
            }
            context.layersWithOutsidePointerEventsDisabled.add(node1);
        }
        context.layers.add(node1);
        $5cb92bef7577960e$var$dispatchUpdate();
        return ()=>{
            if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) ownerDocument.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents;
        };
    }, [
        node1,
        ownerDocument,
        disableOutsidePointerEvents,
        context
    ]);
    /**
   * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect
   * because a change to `disableOutsidePointerEvents` would remove this layer from the stack
   * and add it to the end again so the layering order wouldn't be _creation order_.
   * We only want them to be removed from context stacks when unmounted.
   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        return ()=>{
            if (!node1) return;
            context.layers.delete(node1);
            context.layersWithOutsidePointerEventsDisabled.delete(node1);
            $5cb92bef7577960e$var$dispatchUpdate();
        };
    }, [
        node1,
        context
    ]);
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        const handleUpdate = ()=>force({})
        ;
        document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
        return ()=>document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate)
        ;
    }, []);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, layerProps, {
        ref: composedRefs,
        style: {
            pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? 'auto' : 'none' : undefined,
            ...props.style
        },
        onFocusCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onFocusCapture, focusOutside.onFocusCapture),
        onBlurCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onBlurCapture, focusOutside.onBlurCapture),
        onPointerDownCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
    }));
});
/*#__PURE__*/ Object.assign($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    displayName: $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME
});
/* -------------------------------------------------------------------------------------------------
 * DismissableLayerBranch
 * -----------------------------------------------------------------------------------------------*/ const $5cb92bef7577960e$var$BRANCH_NAME = 'DismissableLayerBranch';
const $5cb92bef7577960e$export$4d5eb2109db14228 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
    const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, ref);
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        const node = ref.current;
        if (node) {
            context.branches.add(node);
            return ()=>{
                context.branches.delete(node);
            };
        }
    }, [
        context.branches
    ]);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
        ref: composedRefs
    }));
});
/*#__PURE__*/ Object.assign($5cb92bef7577960e$export$4d5eb2109db14228, {
    displayName: $5cb92bef7577960e$var$BRANCH_NAME
});
/* -----------------------------------------------------------------------------------------------*/ /**
 * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`
 * to mimic layer dismissing behaviour present in OS.
 * Returns props to pass to the node we want to check for outside events.
 */ function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
    const handlePointerDownOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onPointerDownOutside);
    const isPointerInsideReactTreeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);
    const handleClickRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(()=>{});
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        const handlePointerDown = (event)=>{
            if (event.target && !isPointerInsideReactTreeRef.current) {
                const eventDetail = {
                    originalEvent: event
                };
                function handleAndDispatchPointerDownOutsideEvent() {
                    $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
                        discrete: true
                    });
                }
                /**
         * On touch devices, we need to wait for a click event because browsers implement
         * a ~350ms delay between the time the user stops touching the display and when the
         * browser executres events. We need to ensure we don't reactivate pointer-events within
         * this timeframe otherwise the browser may execute events that should have been prevented.
         *
         * Additionally, this also lets us deal automatically with cancellations when a click event
         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.
         *
         * This is why we also continuously remove the previous listener, because we cannot be
         * certain that it was raised, and therefore cleaned-up.
         */ if (event.pointerType === 'touch') {
                    ownerDocument.removeEventListener('click', handleClickRef.current);
                    handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;
                    ownerDocument.addEventListener('click', handleClickRef.current, {
                        once: true
                    });
                } else handleAndDispatchPointerDownOutsideEvent();
            } else // We need to remove the event listener in case the outside click has been canceled.
            // See: https://github.com/radix-ui/primitives/issues/2171
            ownerDocument.removeEventListener('click', handleClickRef.current);
            isPointerInsideReactTreeRef.current = false;
        };
        /**
     * if this hook executes in a component that mounts via a `pointerdown` event, the event
     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid
     * this by delaying the event listener registration on the document.
     * This is not React specific, but rather how the DOM works, ie:
     * ```
     * button.addEventListener('pointerdown', () => {
     *   console.log('I will log');
     *   document.addEventListener('pointerdown', () => {
     *     console.log('I will also log');
     *   })
     * });
     */ const timerId = window.setTimeout(()=>{
            ownerDocument.addEventListener('pointerdown', handlePointerDown);
        }, 0);
        return ()=>{
            window.clearTimeout(timerId);
            ownerDocument.removeEventListener('pointerdown', handlePointerDown);
            ownerDocument.removeEventListener('click', handleClickRef.current);
        };
    }, [
        ownerDocument,
        handlePointerDownOutside
    ]);
    return {
        // ensures we check React component tree (not just DOM tree)
        onPointerDownCapture: ()=>isPointerInsideReactTreeRef.current = true
    };
}
/**
 * Listens for when focus happens outside a react subtree.
 * Returns props to pass to the root (node) of the subtree we want to check.
 */ function $5cb92bef7577960e$var$useFocusOutside(onFocusOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
    const handleFocusOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onFocusOutside);
    const isFocusInsideReactTreeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        const handleFocus = (event)=>{
            if (event.target && !isFocusInsideReactTreeRef.current) {
                const eventDetail = {
                    originalEvent: event
                };
                $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
                    discrete: false
                });
            }
        };
        ownerDocument.addEventListener('focusin', handleFocus);
        return ()=>ownerDocument.removeEventListener('focusin', handleFocus)
        ;
    }, [
        ownerDocument,
        handleFocusOutside
    ]);
    return {
        onFocusCapture: ()=>isFocusInsideReactTreeRef.current = true
        ,
        onBlurCapture: ()=>isFocusInsideReactTreeRef.current = false
    };
}
function $5cb92bef7577960e$var$dispatchUpdate() {
    const event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);
    document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete: discrete  }) {
    const target = detail.originalEvent.target;
    const event = new CustomEvent(name, {
        bubbles: false,
        cancelable: true,
        detail: detail
    });
    if (handler) target.addEventListener(name, handler, {
        once: true
    });
    if (discrete) (0,_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.dispatchDiscreteCustomEvent)(target, event);
    else target.dispatchEvent(event);
}
const $5cb92bef7577960e$export$be92b6f5f03c0fe9 = $5cb92bef7577960e$export$177fb62ff3ec1f22;
const $5cb92bef7577960e$export$aecb2ddcb55c95be = $5cb92bef7577960e$export$4d5eb2109db14228;





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-focus-guards/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-focus-guards/dist/index.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FocusGuards: () => (/* binding */ $3db38b7d1fb3fe6a$export$ac5b58043b79449b),
/* harmony export */   Root: () => (/* binding */ $3db38b7d1fb3fe6a$export$be92b6f5f03c0fe9),
/* harmony export */   useFocusGuards: () => (/* binding */ $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");



/** Number of components which have requested interest to have focus guards */ let $3db38b7d1fb3fe6a$var$count = 0;
function $3db38b7d1fb3fe6a$export$ac5b58043b79449b(props) {
    $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
    return props.children;
}
/**
 * Injects a pair of focus guards at the edges of the whole DOM tree
 * to ensure `focusin` & `focusout` events can be caught consistently.
 */ function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        var _edgeGuards$, _edgeGuards$2;
        const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');
        document.body.insertAdjacentElement('afterbegin', (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard());
        document.body.insertAdjacentElement('beforeend', (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard());
        $3db38b7d1fb3fe6a$var$count++;
        return ()=>{
            if ($3db38b7d1fb3fe6a$var$count === 1) document.querySelectorAll('[data-radix-focus-guard]').forEach((node)=>node.remove()
            );
            $3db38b7d1fb3fe6a$var$count--;
        };
    }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard() {
    const element = document.createElement('span');
    element.setAttribute('data-radix-focus-guard', '');
    element.tabIndex = 0;
    element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';
    return element;
}
const $3db38b7d1fb3fe6a$export$be92b6f5f03c0fe9 = $3db38b7d1fb3fe6a$export$ac5b58043b79449b;





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-focus-scope/dist/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@radix-ui/react-focus-scope/dist/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FocusScope: () => (/* binding */ $d3863c46a17e8a28$export$20e40289641fbbb6),
/* harmony export */   Root: () => (/* binding */ $d3863c46a17e8a28$export$be92b6f5f03c0fe9)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ "./node_modules/@radix-ui/react-compose-refs/dist/index.mjs");
/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ "./node_modules/@radix-ui/react-primitive/dist/index.mjs");
/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ "./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs");











const $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';
const $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';
const $d3863c46a17e8a28$var$EVENT_OPTIONS = {
    bubbles: false,
    cancelable: true
};
/* -------------------------------------------------------------------------------------------------
 * FocusScope
 * -----------------------------------------------------------------------------------------------*/ const $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME = 'FocusScope';
const $d3863c46a17e8a28$export$20e40289641fbbb6 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { loop: loop = false , trapped: trapped = false , onMountAutoFocus: onMountAutoFocusProp , onUnmountAutoFocus: onUnmountAutoFocusProp , ...scopeProps } = props;
    const [container1, setContainer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const onMountAutoFocus = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(onMountAutoFocusProp);
    const onUnmountAutoFocus = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(onUnmountAutoFocusProp);
    const lastFocusedElementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, (node)=>setContainer(node)
    );
    const focusScope = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({
        paused: false,
        pause () {
            this.paused = true;
        },
        resume () {
            this.paused = false;
        }
    }).current; // Takes care of trapping focus if focus is moved outside programmatically for example
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (trapped) {
            function handleFocusIn(event) {
                if (focusScope.paused || !container1) return;
                const target = event.target;
                if (container1.contains(target)) lastFocusedElementRef.current = target;
                else $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
                    select: true
                });
            }
            function handleFocusOut(event) {
                if (focusScope.paused || !container1) return;
                const relatedTarget = event.relatedTarget; // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:
                //
                // 1. When the user switches app/tabs/windows/the browser itself loses focus.
                // 2. In Google Chrome, when the focused element is removed from the DOM.
                //
                // We let the browser do its thing here because:
                //
                // 1. The browser already keeps a memory of what's focused for when the page gets refocused.
                // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it
                //    throws the CPU to 100%, so we avoid doing anything for this reason here too.
                if (relatedTarget === null) return; // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)
                // that is outside the container, we move focus to the last valid focused element inside.
                if (!container1.contains(relatedTarget)) $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
                    select: true
                });
            } // When the focused element gets removed from the DOM, browsers move focus
            // back to the document.body. In this case, we move focus to the container
            // to keep focus trapped correctly.
            function handleMutations(mutations) {
                const focusedElement = document.activeElement;
                if (focusedElement !== document.body) return;
                for (const mutation of mutations)if (mutation.removedNodes.length > 0) $d3863c46a17e8a28$var$focus(container1);
            }
            document.addEventListener('focusin', handleFocusIn);
            document.addEventListener('focusout', handleFocusOut);
            const mutationObserver = new MutationObserver(handleMutations);
            if (container1) mutationObserver.observe(container1, {
                childList: true,
                subtree: true
            });
            return ()=>{
                document.removeEventListener('focusin', handleFocusIn);
                document.removeEventListener('focusout', handleFocusOut);
                mutationObserver.disconnect();
            };
        }
    }, [
        trapped,
        container1,
        focusScope.paused
    ]);
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (container1) {
            $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);
            const previouslyFocusedElement = document.activeElement;
            const hasFocusedCandidate = container1.contains(previouslyFocusedElement);
            if (!hasFocusedCandidate) {
                const mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
                container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
                container1.dispatchEvent(mountEvent);
                if (!mountEvent.defaultPrevented) {
                    $d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {
                        select: true
                    });
                    if (document.activeElement === previouslyFocusedElement) $d3863c46a17e8a28$var$focus(container1);
                }
            }
            return ()=>{
                container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus); // We hit a react bug (fixed in v17) with focusing in unmount.
                // We need to delay the focus a little to get around it for now.
                // See: https://github.com/facebook/react/issues/17894
                setTimeout(()=>{
                    const unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
                    container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
                    container1.dispatchEvent(unmountEvent);
                    if (!unmountEvent.defaultPrevented) $d3863c46a17e8a28$var$focus(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : document.body, {
                        select: true
                    });
                     // we need to remove the listener after we `dispatchEvent`
                    container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
                    $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);
                }, 0);
            };
        }
    }, [
        container1,
        onMountAutoFocus,
        onUnmountAutoFocus,
        focusScope
    ]); // Takes care of looping focus (when tabbing whilst at the edges)
    const handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event)=>{
        if (!loop && !trapped) return;
        if (focusScope.paused) return;
        const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;
        const focusedElement = document.activeElement;
        if (isTabKey && focusedElement) {
            const container = event.currentTarget;
            const [first, last] = $d3863c46a17e8a28$var$getTabbableEdges(container);
            const hasTabbableElementsInside = first && last; // we can only wrap focus if we have tabbable edges
            if (!hasTabbableElementsInside) {
                if (focusedElement === container) event.preventDefault();
            } else {
                if (!event.shiftKey && focusedElement === last) {
                    event.preventDefault();
                    if (loop) $d3863c46a17e8a28$var$focus(first, {
                        select: true
                    });
                } else if (event.shiftKey && focusedElement === first) {
                    event.preventDefault();
                    if (loop) $d3863c46a17e8a28$var$focus(last, {
                        select: true
                    });
                }
            }
        }
    }, [
        loop,
        trapped,
        focusScope.paused
    ]);
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        tabIndex: -1
    }, scopeProps, {
        ref: composedRefs,
        onKeyDown: handleKeyDown
    }));
});
/*#__PURE__*/ Object.assign($d3863c46a17e8a28$export$20e40289641fbbb6, {
    displayName: $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME
});
/* -------------------------------------------------------------------------------------------------
 * Utils
 * -----------------------------------------------------------------------------------------------*/ /**
 * Attempts focusing the first element in a list of candidates.
 * Stops when focus has actually moved.
 */ function $d3863c46a17e8a28$var$focusFirst(candidates, { select: select = false  } = {}) {
    const previouslyFocusedElement = document.activeElement;
    for (const candidate of candidates){
        $d3863c46a17e8a28$var$focus(candidate, {
            select: select
        });
        if (document.activeElement !== previouslyFocusedElement) return;
    }
}
/**
 * Returns the first and last tabbable elements inside a container.
 */ function $d3863c46a17e8a28$var$getTabbableEdges(container) {
    const candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container);
    const first = $d3863c46a17e8a28$var$findVisible(candidates, container);
    const last = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container);
    return [
        first,
        last
    ];
}
/**
 * Returns a list of potential tabbable candidates.
 *
 * NOTE: This is only a close approximation. For example it doesn't take into account cases like when
 * elements are not visible. This cannot be worked out easily by just reading a property, but rather
 * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.
 *
 * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker
 * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1
 */ function $d3863c46a17e8a28$var$getTabbableCandidates(container) {
    const nodes = [];
    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
        acceptNode: (node)=>{
            const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';
            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP; // `.tabIndex` is not the same as the `tabindex` attribute. It works on the
            // runtime's understanding of tabbability, so this automatically accounts
            // for any kind of element that could be tabbed to.
            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
        }
    });
    while(walker.nextNode())nodes.push(walker.currentNode); // we do not take into account the order of nodes with positive `tabIndex` as it
    // hinders accessibility to have tab order different from visual order.
    return nodes;
}
/**
 * Returns the first visible element in a list.
 * NOTE: Only checks visibility up to the `container`.
 */ function $d3863c46a17e8a28$var$findVisible(elements, container) {
    for (const element of elements){
        // we stop checking if it's hidden at the `container` level (excluding)
        if (!$d3863c46a17e8a28$var$isHidden(element, {
            upTo: container
        })) return element;
    }
}
function $d3863c46a17e8a28$var$isHidden(node, { upTo: upTo  }) {
    if (getComputedStyle(node).visibility === 'hidden') return true;
    while(node){
        // we stop at `upTo` (excluding it)
        if (upTo !== undefined && node === upTo) return false;
        if (getComputedStyle(node).display === 'none') return true;
        node = node.parentElement;
    }
    return false;
}
function $d3863c46a17e8a28$var$isSelectableInput(element) {
    return element instanceof HTMLInputElement && 'select' in element;
}
function $d3863c46a17e8a28$var$focus(element, { select: select = false  } = {}) {
    // only focus if that element is focusable
    if (element && element.focus) {
        const previouslyFocusedElement = document.activeElement; // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users
        element.focus({
            preventScroll: true
        }); // only select if its not the same element, it supports selection and we need to select
        if (element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput(element) && select) element.select();
    }
}
/* -------------------------------------------------------------------------------------------------
 * FocusScope stack
 * -----------------------------------------------------------------------------------------------*/ const $d3863c46a17e8a28$var$focusScopesStack = $d3863c46a17e8a28$var$createFocusScopesStack();
function $d3863c46a17e8a28$var$createFocusScopesStack() {
    /** A stack of focus scopes, with the active one at the top */ let stack = [];
    return {
        add (focusScope) {
            // pause the currently active focus scope (at the top of the stack)
            const activeFocusScope = stack[0];
            if (focusScope !== activeFocusScope) activeFocusScope === null || activeFocusScope === void 0 || activeFocusScope.pause();
             // remove in case it already exists (because we'll re-add it at the top of the stack)
            stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
            stack.unshift(focusScope);
        },
        remove (focusScope) {
            var _stack$;
            stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
            (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
        }
    };
}
function $d3863c46a17e8a28$var$arrayRemove(array, item) {
    const updatedArray = [
        ...array
    ];
    const index = updatedArray.indexOf(item);
    if (index !== -1) updatedArray.splice(index, 1);
    return updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks(items) {
    return items.filter((item)=>item.tagName !== 'A'
    );
}
const $d3863c46a17e8a28$export$be92b6f5f03c0fe9 = $d3863c46a17e8a28$export$20e40289641fbbb6;





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-id/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@radix-ui/react-id/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useId: () => (/* binding */ $1746a345f3d73bb7$export$f680877a34711e37)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ "./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs");





const $1746a345f3d73bb7$var$useReactId = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))['useId'.toString()] || (()=>undefined
);
let $1746a345f3d73bb7$var$count = 0;
function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {
    const [id, setId] = react__WEBPACK_IMPORTED_MODULE_0__.useState($1746a345f3d73bb7$var$useReactId()); // React versions older than 18 will have client-side ids only.
    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{
        if (!deterministicId) setId((reactId)=>reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++)
        );
    }, [
        deterministicId
    ]);
    return deterministicId || (id ? `radix-${id}` : '');
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-portal/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-portal/dist/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Portal: () => (/* binding */ $f1701beae083dbae$export$602eac185826482c),
/* harmony export */   Root: () => (/* binding */ $f1701beae083dbae$export$be92b6f5f03c0fe9)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-primitive */ "./node_modules/@radix-ui/react-primitive/dist/index.mjs");









/* -------------------------------------------------------------------------------------------------
 * Portal
 * -----------------------------------------------------------------------------------------------*/ const $f1701beae083dbae$var$PORTAL_NAME = 'Portal';
const $f1701beae083dbae$export$602eac185826482c = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    var _globalThis$document;
    const { container: container = globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body , ...portalProps } = props;
    return container ? /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal(/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, portalProps, {
        ref: forwardedRef
    })), container) : null;
});
/*#__PURE__*/ Object.assign($f1701beae083dbae$export$602eac185826482c, {
    displayName: $f1701beae083dbae$var$PORTAL_NAME
});
/* -----------------------------------------------------------------------------------------------*/ const $f1701beae083dbae$export$be92b6f5f03c0fe9 = $f1701beae083dbae$export$602eac185826482c;





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-presence/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@radix-ui/react-presence/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Presence: () => (/* binding */ $921a889cee6df7e8$export$99c2b779aa4e8b8b)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ "./node_modules/@radix-ui/react-compose-refs/dist/index.mjs");
/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ "./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs");










function $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((state, event)=>{
        const nextState = machine[state][event];
        return nextState !== null && nextState !== void 0 ? nextState : state;
    }, initialState);
}


const $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props)=>{
    const { present: present , children: children  } = props;
    const presence = $921a889cee6df7e8$var$usePresence(present);
    const child = typeof children === 'function' ? children({
        present: presence.isPresent
    }) : react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);
    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(presence.ref, child.ref);
    const forceMount = typeof children === 'function';
    return forceMount || presence.isPresent ? /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {
        ref: ref
    }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = 'Presence';
/* -------------------------------------------------------------------------------------------------
 * usePresence
 * -----------------------------------------------------------------------------------------------*/ function $921a889cee6df7e8$var$usePresence(present) {
    const [node1, setNode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();
    const stylesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});
    const prevPresentRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(present);
    const prevAnimationNameRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)('none');
    const initialState = present ? 'mounted' : 'unmounted';
    const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {
        mounted: {
            UNMOUNT: 'unmounted',
            ANIMATION_OUT: 'unmountSuspended'
        },
        unmountSuspended: {
            MOUNT: 'mounted',
            ANIMATION_END: 'unmounted'
        },
        unmounted: {
            MOUNT: 'mounted'
        }
    });
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
        prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';
    }, [
        state
    ]);
    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__.useLayoutEffect)(()=>{
        const styles = stylesRef.current;
        const wasPresent = prevPresentRef.current;
        const hasPresentChanged = wasPresent !== present;
        if (hasPresentChanged) {
            const prevAnimationName = prevAnimationNameRef.current;
            const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);
            if (present) send('MOUNT');
            else if (currentAnimationName === 'none' || (styles === null || styles === void 0 ? void 0 : styles.display) === 'none') // If there is no exit animation or the element is hidden, animations won't run
            // so we unmount instantly
            send('UNMOUNT');
            else {
                /**
         * When `present` changes to `false`, we check changes to animation-name to
         * determine whether an animation has started. We chose this approach (reading
         * computed styles) because there is no `animationrun` event and `animationstart`
         * fires after `animation-delay` has expired which would be too late.
         */ const isAnimating = prevAnimationName !== currentAnimationName;
                if (wasPresent && isAnimating) send('ANIMATION_OUT');
                else send('UNMOUNT');
            }
            prevPresentRef.current = present;
        }
    }, [
        present,
        send
    ]);
    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__.useLayoutEffect)(()=>{
        if (node1) {
            /**
       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`
       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we
       * make sure we only trigger ANIMATION_END for the currently active animation.
       */ const handleAnimationEnd = (event)=>{
                const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
                const isCurrentAnimation = currentAnimationName.includes(event.animationName);
                if (event.target === node1 && isCurrentAnimation) // With React 18 concurrency this update is applied
                // a frame after the animation ends, creating a flash of visible content.
                // By manually flushing we ensure they sync within a frame, removing the flash.
                (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync)(()=>send('ANIMATION_END')
                );
            };
            const handleAnimationStart = (event)=>{
                if (event.target === node1) // if animation occurred, store its name as the previous animation.
                prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
            };
            node1.addEventListener('animationstart', handleAnimationStart);
            node1.addEventListener('animationcancel', handleAnimationEnd);
            node1.addEventListener('animationend', handleAnimationEnd);
            return ()=>{
                node1.removeEventListener('animationstart', handleAnimationStart);
                node1.removeEventListener('animationcancel', handleAnimationEnd);
                node1.removeEventListener('animationend', handleAnimationEnd);
            };
        } else // Transition to the unmounted state if the node is removed prematurely.
        // We avoid doing so during cleanup as the node may change but still exist.
        send('ANIMATION_END');
    }, [
        node1,
        send
    ]);
    return {
        isPresent: [
            'mounted',
            'unmountSuspended'
        ].includes(state),
        ref: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((node)=>{
            if (node) stylesRef.current = getComputedStyle(node);
            setNode(node);
        }, [])
    };
}
/* -----------------------------------------------------------------------------------------------*/ function $921a889cee6df7e8$var$getAnimationName(styles) {
    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || 'none';
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-primitive/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@radix-ui/react-primitive/dist/index.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Primitive: () => (/* binding */ $8927f6f2acc4f386$export$250ffa63cdc0d034),
/* harmony export */   Root: () => (/* binding */ $8927f6f2acc4f386$export$be92b6f5f03c0fe9),
/* harmony export */   dispatchDiscreteCustomEvent: () => (/* binding */ $8927f6f2acc4f386$export$6d1a0317bde7de7f)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slot */ "./node_modules/@radix-ui/react-slot/dist/index.mjs");









const $8927f6f2acc4f386$var$NODES = [
    'a',
    'button',
    'div',
    'form',
    'h2',
    'h3',
    'img',
    'input',
    'label',
    'li',
    'nav',
    'ol',
    'p',
    'span',
    'svg',
    'ul'
]; // Temporary while we await merge of this fix:
// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396
// prettier-ignore
/* -------------------------------------------------------------------------------------------------
 * Primitive
 * -----------------------------------------------------------------------------------------------*/ const $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node)=>{
    const Node = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
        const { asChild: asChild , ...primitiveProps } = props;
        const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.Slot : node;
        (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
            window[Symbol.for('radix-ui')] = true;
        }, []);
        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(Comp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, primitiveProps, {
            ref: forwardedRef
        }));
    });
    Node.displayName = `Primitive.${node}`;
    return {
        ...primitive,
        [node]: Node
    };
}, {});
/* -------------------------------------------------------------------------------------------------
 * Utils
 * -----------------------------------------------------------------------------------------------*/ /**
 * Flush custom event dispatch
 * https://github.com/radix-ui/primitives/pull/1378
 *
 * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.
 *
 * Internally, React prioritises events in the following order:
 *  - discrete
 *  - continuous
 *  - default
 *
 * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350
 *
 * `discrete` is an  important distinction as updates within these events are applied immediately.
 * React however, is not able to infer the priority of custom event types due to how they are detected internally.
 * Because of this, it's possible for updates from custom events to be unexpectedly batched when
 * dispatched by another `discrete` event.
 *
 * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.
 * This utility should be used when dispatching a custom event from within another `discrete` event, this utility
 * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.
 * For example:
 *
 * dispatching a known click 👎
 * target.dispatchEvent(new Event(‘click’))
 *
 * dispatching a custom type within a non-discrete event 👎
 * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}
 *
 * dispatching a custom type within a `discrete` event 👍
 * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}
 *
 * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use
 * this utility with them. This is because it's possible for those handlers to be called implicitly during render
 * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.
 */ function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
    if (target) (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync)(()=>target.dispatchEvent(event)
    );
}
/* -----------------------------------------------------------------------------------------------*/ const $8927f6f2acc4f386$export$be92b6f5f03c0fe9 = $8927f6f2acc4f386$export$250ffa63cdc0d034;





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-slot/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-slot/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Root: () => (/* binding */ $5e63c961fc1ce211$export$be92b6f5f03c0fe9),
/* harmony export */   Slot: () => (/* binding */ $5e63c961fc1ce211$export$8c6ed5c666ac1360),
/* harmony export */   Slottable: () => (/* binding */ $5e63c961fc1ce211$export$d9f1ccf0bdb05d45)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ "./node_modules/@radix-ui/react-compose-refs/dist/index.mjs");







/* -------------------------------------------------------------------------------------------------
 * Slot
 * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { children: children , ...slotProps } = props;
    const childrenArray = react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(children);
    const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
    if (slottable) {
        // the new element to render is the one passed as a child of `Slottable`
        const newElement = slottable.props.children;
        const newChildren = childrenArray.map((child)=>{
            if (child === slottable) {
                // because the new element will be the one rendered, we are only interested
                // in grabbing its children (`newElement.props.children`)
                if (react__WEBPACK_IMPORTED_MODULE_1__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_1__.Children.only(null);
                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(newElement) ? newElement.props.children : null;
            } else return child;
        });
        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5e63c961fc1ce211$var$SlotClone, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, slotProps, {
            ref: forwardedRef
        }), /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(newElement) ? /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(newElement, undefined, newChildren) : null);
    }
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)($5e63c961fc1ce211$var$SlotClone, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, slotProps, {
        ref: forwardedRef
    }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';
/* -------------------------------------------------------------------------------------------------
 * SlotClone
 * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, forwardedRef)=>{
    const { children: children , ...slotProps } = props;
    if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(children)) return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(children, {
        ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),
        ref: forwardedRef ? (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(forwardedRef, children.ref) : children.ref
    });
    return react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_1__.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';
/* -------------------------------------------------------------------------------------------------
 * Slottable
 * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children: children  })=>{
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, children);
};
/* ---------------------------------------------------------------------------------------------- */ function $5e63c961fc1ce211$var$isSlottable(child) {
    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
    // all child props should override
    const overrideProps = {
        ...childProps
    };
    for(const propName in childProps){
        const slotPropValue = slotProps[propName];
        const childPropValue = childProps[propName];
        const isHandler = /^on[A-Z]/.test(propName);
        if (isHandler) {
            // if the handler exists on both, we compose them
            if (slotPropValue && childPropValue) overrideProps[propName] = (...args)=>{
                childPropValue(...args);
                slotPropValue(...args);
            };
            else if (slotPropValue) overrideProps[propName] = slotPropValue;
        } else if (propName === 'style') overrideProps[propName] = {
            ...slotPropValue,
            ...childPropValue
        };
        else if (propName === 'className') overrideProps[propName] = [
            slotPropValue,
            childPropValue
        ].filter(Boolean).join(' ');
    }
    return {
        ...slotProps,
        ...overrideProps
    };
}
const $5e63c961fc1ce211$export$be92b6f5f03c0fe9 = $5e63c961fc1ce211$export$8c6ed5c666ac1360;





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCallbackRef: () => (/* binding */ $b1b2314f5f9a1d84$export$25bec8c6f54ee79a)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");



/**
 * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a
 * prop or avoid re-executing effects when passed as a dependency
 */ function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
    const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        callbackRef.current = callback;
    }); // https://github.com/facebook/react/issues/19240
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(...args)=>{
            var _callbackRef$current;
            return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
        }
    , []);
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useControllableState: () => (/* binding */ $71cd76cc60e0454e$export$6f32135080cb4c3)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ "./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs");





function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop: prop , defaultProp: defaultProp , onChange: onChange = ()=>{}  }) {
    const [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({
        defaultProp: defaultProp,
        onChange: onChange
    });
    const isControlled = prop !== undefined;
    const value1 = isControlled ? prop : uncontrolledProp;
    const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);
    const setValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nextValue)=>{
        if (isControlled) {
            const setter = nextValue;
            const value = typeof nextValue === 'function' ? setter(prop) : nextValue;
            if (value !== prop) handleChange(value);
        } else setUncontrolledProp(nextValue);
    }, [
        isControlled,
        prop,
        setUncontrolledProp,
        handleChange
    ]);
    return [
        value1,
        setValue
    ];
}
function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp: defaultProp , onChange: onChange  }) {
    const uncontrolledState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultProp);
    const [value] = uncontrolledState;
    const prevValueRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);
    const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (prevValueRef.current !== value) {
            handleChange(value);
            prevValueRef.current = value;
        }
    }, [
        value,
        prevValueRef,
        handleChange
    ]);
    return uncontrolledState;
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useEscapeKeydown: () => (/* binding */ $addc16e1bbe58fd0$export$3a72a57244d6e765)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ "./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs");





/**
 * Listens for when the escape key is down
 */ function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
    const onEscapeKeyDown = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onEscapeKeyDownProp);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        const handleKeyDown = (event)=>{
            if (event.key === 'Escape') onEscapeKeyDown(event);
        };
        ownerDocument.addEventListener('keydown', handleKeyDown);
        return ()=>ownerDocument.removeEventListener('keydown', handleKeyDown)
        ;
    }, [
        onEscapeKeyDown,
        ownerDocument
    ]);
}





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useLayoutEffect: () => (/* binding */ $9f79659886946c16$export$e5c5a5f917a5871c)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");



/**
 * On the server, React emits a warning when calling `useLayoutEffect`.
 * This is because neither `useLayoutEffect` nor `useEffect` run on the server.
 * We use this safe version which suppresses the warning by replacing it with a noop on the server.
 *
 * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect
 */ const $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : ()=>{};





//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/react-tooltip/dist/react-tooltip.min.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/react-tooltip/dist/react-tooltip.min.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tooltip: () => (/* binding */ D),
/* harmony export */   TooltipProvider: () => (/* binding */ T),
/* harmony export */   TooltipWrapper: () => (/* binding */ L),
/* harmony export */   removeStyle: () => (/* binding */ E)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/@floating-ui/core/dist/floating-ui.core.mjs");
/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/*
* React Tooltip
* {@link https://github.com/ReactTooltip/react-tooltip}
* @copyright ReactTooltip Team
* @license MIT
*/
const h="react-tooltip-core-styles",w="react-tooltip-base-styles",b={core:!1,base:!1};function S({css:e,id:t=w,type:o="base",ref:l}){var r,n;if(!e||"undefined"==typeof document||b[o])return;if("core"===o&&"undefined"!=typeof process&&(null===(r=null===process||void 0===process?void 0:process.env)||void 0===r?void 0:r.REACT_TOOLTIP_DISABLE_CORE_STYLES))return;if("base"!==o&&"undefined"!=typeof process&&(null===(n=null===process||void 0===process?void 0:process.env)||void 0===n?void 0:n.REACT_TOOLTIP_DISABLE_BASE_STYLES))return;"core"===o&&(t=h),l||(l={});const{insertAt:c}=l;if(document.getElementById(t))return void console.warn(`[react-tooltip] Element with id '${t}' already exists. Call \`removeStyle()\` first`);const i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.id=t,s.type="text/css","top"===c&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e)),b[o]=!0}function E({type:e="base",id:t=w}={}){if(!b[e])return;"core"===e&&(t=h);const o=document.getElementById(t);"style"===(null==o?void 0:o.tagName)?null==o||o.remove():console.warn(`[react-tooltip] Failed to remove 'style' element with id '${t}'. Call \`injectStyle()\` first`),b[e]=!1}const g=(e,t,o)=>{let l=null;return function(...r){const n=()=>{l=null,o||e.apply(this,r)};o&&!l&&(e.apply(this,r),l=setTimeout(n,t)),o||(l&&clearTimeout(l),l=setTimeout(n,t))}},_="DEFAULT_TOOLTIP_ID",A={anchorRefs:new Set,activeAnchor:{current:null},attach:()=>{},detach:()=>{},setActiveAnchor:()=>{}},O=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({getTooltipData:()=>A}),T=({children:t})=>{const[n,c]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({[_]:new Set}),[i,s]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({[_]:{current:null}}),a=(e,...t)=>{c((o=>{var l;const r=null!==(l=o[e])&&void 0!==l?l:new Set;return t.forEach((e=>r.add(e))),{...o,[e]:new Set(r)}}))},d=(e,...t)=>{c((o=>{const l=o[e];return l?(t.forEach((e=>l.delete(e))),{...o}):o}))},u=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((e=_)=>{var t,o;return{anchorRefs:null!==(t=n[e])&&void 0!==t?t:new Set,activeAnchor:null!==(o=i[e])&&void 0!==o?o:{current:null},attach:(...t)=>a(e,...t),detach:(...t)=>d(e,...t),setActiveAnchor:t=>((e,t)=>{s((o=>{var l;return(null===(l=o[e])||void 0===l?void 0:l.current)===t.current?o:{...o,[e]:t}}))})(e,t)}}),[n,i,a,d]),p=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({getTooltipData:u})),[u]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(O.Provider,{value:p},t)};function k(e=_){return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(O).getTooltipData(e)}const L=({tooltipId:t,children:o,className:l,place:r,content:n,html:s,variant:a,offset:d,wrapper:u,events:p,positionStrategy:v,delayShow:m,delayHide:f})=>{const{attach:h,detach:w}=k(t),b=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(h(b),()=>{w(b)})),[]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{ref:b,className:classnames__WEBPACK_IMPORTED_MODULE_1__("react-tooltip-wrapper",l),"data-tooltip-place":r,"data-tooltip-content":n,"data-tooltip-html":s,"data-tooltip-variant":a,"data-tooltip-offset":d,"data-tooltip-wrapper":u,"data-tooltip-events":p,"data-tooltip-position-strategy":v,"data-tooltip-delay-show":m,"data-tooltip-delay-hide":f},o)},C="undefined"!=typeof window?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect,R=e=>{if(!(e instanceof HTMLElement||e instanceof SVGElement))return!1;const t=getComputedStyle(e);return["overflow","overflow-x","overflow-y"].some((e=>{const o=t.getPropertyValue(e);return"auto"===o||"scroll"===o}))},x=e=>{if(!e)return null;let t=e.parentElement;for(;t;){if(R(t))return t;t=t.parentElement}return document.scrollingElement||document.documentElement},N=async({elementReference:e=null,tooltipReference:t=null,tooltipArrowReference:o=null,place:l="top",offset:r=10,strategy:n="absolute",middlewares:c=[(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.offset)(Number(r)),(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.flip)(),(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.shift)({padding:5})],border:i})=>{if(!e)return{tooltipStyles:{},tooltipArrowStyles:{},place:l};if(null===t)return{tooltipStyles:{},tooltipArrowStyles:{},place:l};const s=c;return o?(s.push((0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.arrow)({element:o,padding:5})),(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__.computePosition)(e,t,{placement:l,strategy:n,middleware:s}).then((({x:e,y:t,placement:o,middlewareData:l})=>{var r,n;const c={left:`${e}px`,top:`${t}px`,border:i},{x:s,y:a}=null!==(r=l.arrow)&&void 0!==r?r:{x:0,y:0},d=null!==(n={top:"bottom",right:"left",bottom:"top",left:"right"}[o.split("-")[0]])&&void 0!==n?n:"bottom",u=i&&{borderBottom:i,borderRight:i};let p=0;if(i){const e=`${i}`.match(/(\d+)px/);p=(null==e?void 0:e[1])?Number(e[1]):1}return{tooltipStyles:c,tooltipArrowStyles:{left:null!=s?`${s}px`:"",top:null!=a?`${a}px`:"",right:"",bottom:"",...u,[d]:`-${4+p}px`},place:o}}))):(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__.computePosition)(e,t,{placement:"bottom",strategy:n,middleware:s}).then((({x:e,y:t,placement:o})=>({tooltipStyles:{left:`${e}px`,top:`${t}px`},tooltipArrowStyles:{},place:o})))};var $={tooltip:"core-styles-module_tooltip__3vRRp",fixed:"core-styles-module_fixed__pcSol",arrow:"core-styles-module_arrow__cvMwQ",noArrow:"core-styles-module_noArrow__xock6",clickable:"core-styles-module_clickable__ZuTTB",show:"core-styles-module_show__Nt9eE",closing:"core-styles-module_closing__sGnxF"},j={tooltip:"styles-module_tooltip__mnnfp",arrow:"styles-module_arrow__K0L3T",dark:"styles-module_dark__xNqje",light:"styles-module_light__Z6W-X",success:"styles-module_success__A2AKt",warning:"styles-module_warning__SCK0X",error:"styles-module_error__JvumD",info:"styles-module_info__BWdHW"};const I=({forwardRef:t,id:r,className:n,classNameArrow:s,variant:d="dark",anchorId:u,anchorSelect:p,place:v="top",offset:m=10,events:h=["hover"],openOnClick:w=!1,positionStrategy:b="absolute",middlewares:S,wrapper:E,delayShow:_=0,delayHide:A=0,float:O=!1,hidden:T=!1,noArrow:L=!1,clickable:R=!1,closeOnEsc:I=!1,closeOnScroll:B=!1,closeOnResize:z=!1,openEvents:D,closeEvents:q,globalCloseEvents:H,imperativeModeOnly:M,style:W,position:P,afterShow:F,afterHide:K,content:U,contentWrapperRef:X,isOpen:Y,setIsOpen:G,activeAnchor:V,setActiveAnchor:Z,border:J,opacity:Q,arrowColor:ee,role:te="tooltip"})=>{var oe;const le=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),re=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),ne=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),ce=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[ie,se]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(v),[ae,de]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),[ue,pe]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),[ve,me]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[fe,ye]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[he,we]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),be=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),Se=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),{anchorRefs:Ee,setActiveAnchor:ge}=k(r),_e=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),[Ae,Oe]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),Te=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),ke=w||h.includes("click"),Le=ke||(null==D?void 0:D.click)||(null==D?void 0:D.dblclick)||(null==D?void 0:D.mousedown),Ce=D?{...D}:{mouseenter:!0,focus:!0,click:!1,dblclick:!1,mousedown:!1};!D&&ke&&Object.assign(Ce,{mouseenter:!1,focus:!1,click:!0});const Re=q?{...q}:{mouseleave:!0,blur:!0,click:!1,dblclick:!1,mouseup:!1};!q&&ke&&Object.assign(Re,{mouseleave:!1,blur:!1});const xe=H?{...H}:{escape:I||!1,scroll:B||!1,resize:z||!1,clickOutsideAnchor:Le||!1};M&&(Object.assign(Ce,{mouseenter:!1,focus:!1,click:!1,dblclick:!1,mousedown:!1}),Object.assign(Re,{mouseleave:!1,blur:!1,click:!1,dblclick:!1,mouseup:!1}),Object.assign(xe,{escape:!1,scroll:!1,resize:!1,clickOutsideAnchor:!1})),C((()=>(Te.current=!0,()=>{Te.current=!1})),[]);const Ne=e=>{Te.current&&(e&&ye(!0),setTimeout((()=>{Te.current&&(null==G||G(e),void 0===Y&&me(e))}),10))};(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(void 0===Y)return()=>null;Y&&ye(!0);const e=setTimeout((()=>{me(Y)}),10);return()=>{clearTimeout(e)}}),[Y]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ve!==be.current&&(be.current=ve,ve&&(null==F||F()))}),[ve]);const $e=(e=_)=>{ne.current&&clearTimeout(ne.current),ne.current=setTimeout((()=>{Ne(!0)}),e)},je=(e=A)=>{ce.current&&clearTimeout(ce.current),ce.current=setTimeout((()=>{_e.current||Ne(!1)}),e)},Ie=e=>{var t;if(!e)return;const o=null!==(t=e.currentTarget)&&void 0!==t?t:e.target;if(!(null==o?void 0:o.isConnected))return Z(null),void ge({current:null});_?$e():Ne(!0),Z(o),ge({current:o}),ce.current&&clearTimeout(ce.current)},Be=()=>{R?je(A||100):A?je():Ne(!1),ne.current&&clearTimeout(ne.current)},ze=({x:e,y:t})=>{var o;const l={getBoundingClientRect:()=>({x:e,y:t,width:0,height:0,top:t,left:e,right:e,bottom:t})};N({place:null!==(o=null==he?void 0:he.place)&&void 0!==o?o:v,offset:m,elementReference:l,tooltipReference:le.current,tooltipArrowReference:re.current,strategy:b,middlewares:S,border:J}).then((e=>{Object.keys(e.tooltipStyles).length&&de(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&pe(e.tooltipArrowStyles),se(e.place)}))},De=e=>{if(!e)return;const t=e,o={x:t.clientX,y:t.clientY};ze(o),Se.current=o},qe=e=>{var t;if(!ve)return;const o=e.target;if(null===(t=le.current)||void 0===t?void 0:t.contains(o))return;[document.querySelector(`[id='${u}']`),...Ae].some((e=>null==e?void 0:e.contains(o)))||(Ne(!1),ne.current&&clearTimeout(ne.current))},He=g(Ie,50,!0),Me=g(Be,50,!0),We=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{var e,t;const o=null!==(e=null==he?void 0:he.position)&&void 0!==e?e:P;o?ze(o):O?Se.current&&ze(Se.current):(null==V?void 0:V.isConnected)&&N({place:null!==(t=null==he?void 0:he.place)&&void 0!==t?t:v,offset:m,elementReference:V,tooltipReference:le.current,tooltipArrowReference:re.current,strategy:b,middlewares:S,border:J}).then((e=>{Te.current&&(Object.keys(e.tooltipStyles).length&&de(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&pe(e.tooltipArrowStyles),se(e.place))}))}),[ve,V,U,W,v,null==he?void 0:he.place,m,b,P,null==he?void 0:he.position,O]);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{var e,t;const o=new Set(Ee);Ae.forEach((e=>{o.add({current:e})}));const l=document.querySelector(`[id='${u}']`);l&&o.add({current:l});const r=()=>{Ne(!1)},n=x(V),c=x(le.current);xe.scroll&&(window.addEventListener("scroll",r),null==n||n.addEventListener("scroll",r),null==c||c.addEventListener("scroll",r));let i=null;xe.resize?window.addEventListener("resize",r):V&&le.current&&(i=(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__.autoUpdate)(V,le.current,We,{ancestorResize:!0,elementResize:!0,layoutShift:!0}));const s=e=>{"Escape"===e.key&&Ne(!1)};xe.escape&&window.addEventListener("keydown",s),xe.clickOutsideAnchor&&window.addEventListener("click",qe);const a=[],d=e=>{ve||Ie(e)},p=()=>{ve&&Be()},v=["mouseenter","mouseleave","focus","blur"],m=["click","dblclick","mousedown","mouseup"];Object.entries(Ce).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:He}):m.includes(e)&&a.push({event:e,listener:d}))})),Object.entries(Re).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:Me}):m.includes(e)&&a.push({event:e,listener:p}))})),O&&a.push({event:"mousemove",listener:De});const y=()=>{_e.current=!0},h=()=>{_e.current=!1,Be()};return R&&!Le&&(null===(e=le.current)||void 0===e||e.addEventListener("mouseenter",y),null===(t=le.current)||void 0===t||t.addEventListener("mouseleave",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var l;null===(l=o.current)||void 0===l||l.addEventListener(e,t)}))})),()=>{var e,t;xe.scroll&&(window.removeEventListener("scroll",r),null==n||n.removeEventListener("scroll",r),null==c||c.removeEventListener("scroll",r)),xe.resize?window.removeEventListener("resize",r):null==i||i(),xe.clickOutsideAnchor&&window.removeEventListener("click",qe),xe.escape&&window.removeEventListener("keydown",s),R&&!Le&&(null===(e=le.current)||void 0===e||e.removeEventListener("mouseenter",y),null===(t=le.current)||void 0===t||t.removeEventListener("mouseleave",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var l;null===(l=o.current)||void 0===l||l.removeEventListener(e,t)}))}))}}),[V,We,fe,Ee,Ae,D,q,H,ke]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{var e,t;let o=null!==(t=null!==(e=null==he?void 0:he.anchorSelect)&&void 0!==e?e:p)&&void 0!==t?t:"";!o&&r&&(o=`[data-tooltip-id='${r}']`);const l=new MutationObserver((e=>{const t=[],l=[];e.forEach((e=>{if("attributes"===e.type&&"data-tooltip-id"===e.attributeName){e.target.getAttribute("data-tooltip-id")===r&&t.push(e.target)}if("childList"===e.type){if(V){const t=[...e.removedNodes].filter((e=>1===e.nodeType));if(o)try{l.push(...t.filter((e=>e.matches(o)))),l.push(...t.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}t.some((e=>{var t;return!!(null===(t=null==e?void 0:e.contains)||void 0===t?void 0:t.call(e,V))&&(ye(!1),Ne(!1),Z(null),ne.current&&clearTimeout(ne.current),ce.current&&clearTimeout(ce.current),!0)}))}if(o)try{const l=[...e.addedNodes].filter((e=>1===e.nodeType));t.push(...l.filter((e=>e.matches(o)))),t.push(...l.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}}})),(t.length||l.length)&&Oe((e=>[...e.filter((e=>!l.includes(e))),...t]))}));return l.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["data-tooltip-id"]}),()=>{l.disconnect()}}),[r,p,null==he?void 0:he.anchorSelect,V]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{We()}),[We]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!(null==X?void 0:X.current))return()=>null;const e=new ResizeObserver((()=>{We()}));return e.observe(X.current),()=>{e.disconnect()}}),[U,null==X?void 0:X.current]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{var e;const t=document.querySelector(`[id='${u}']`),o=[...Ae,t];V&&o.includes(V)||Z(null!==(e=Ae[0])&&void 0!==e?e:t)}),[u,Ae,V]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>()=>{ne.current&&clearTimeout(ne.current),ce.current&&clearTimeout(ce.current)}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{var e;let t=null!==(e=null==he?void 0:he.anchorSelect)&&void 0!==e?e:p;if(!t&&r&&(t=`[data-tooltip-id='${r}']`),t)try{const e=Array.from(document.querySelectorAll(t));Oe(e)}catch(e){Oe([])}}),[r,p,null==he?void 0:he.anchorSelect]);const Pe=null!==(oe=null==he?void 0:he.content)&&void 0!==oe?oe:U,Fe=ve&&Object.keys(ae).length>0;return (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(t,(()=>({open:e=>{if(null==e?void 0:e.anchorSelect)try{document.querySelector(e.anchorSelect)}catch(t){return void console.warn(`[react-tooltip] "${e.anchorSelect}" is not a valid CSS selector`)}we(null!=e?e:null),(null==e?void 0:e.delay)?$e(e.delay):Ne(!0)},close:e=>{(null==e?void 0:e.delay)?je(e.delay):Ne(!1)},activeAnchor:V,place:ie,isOpen:Boolean(fe&&!T&&Pe&&Fe)}))),fe&&!T&&Pe?react__WEBPACK_IMPORTED_MODULE_0__.createElement(E,{id:r,role:te,className:classnames__WEBPACK_IMPORTED_MODULE_1__("react-tooltip",$.tooltip,j.tooltip,j[d],n,`react-tooltip__place-${ie}`,$[Fe?"show":"closing"],Fe?"react-tooltip__show":"react-tooltip__closing","fixed"===b&&$.fixed,R&&$.clickable),onTransitionEnd:e=>{ve||"opacity"!==e.propertyName||(ye(!1),we(null),null==K||K())},style:{...W,...ae,opacity:void 0!==Q&&Fe?Q:void 0},ref:le},Pe,react__WEBPACK_IMPORTED_MODULE_0__.createElement(E,{className:classnames__WEBPACK_IMPORTED_MODULE_1__("react-tooltip-arrow",$.arrow,j.arrow,s,L&&$.noArrow),style:{...ue,background:ee?`linear-gradient(to right bottom, transparent 50%, ${ee} 50%)`:void 0},ref:re})):null},B=({content:t})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{dangerouslySetInnerHTML:{__html:t}}),z=(e,t)=>!("CSS"in window&&"supports"in window.CSS)||window.CSS.supports(e,t),D=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({id:t,anchorId:l,anchorSelect:r,content:n,html:s,render:a,className:d,classNameArrow:u,variant:p="dark",place:v="top",offset:m=10,wrapper:f="div",children:y=null,events:h=["hover"],openOnClick:w=!1,positionStrategy:b="absolute",middlewares:S,delayShow:E=0,delayHide:g=0,float:_=!1,hidden:A=!1,noArrow:O=!1,clickable:T=!1,closeOnEsc:L=!1,closeOnScroll:C=!1,closeOnResize:R=!1,openEvents:x,closeEvents:N,globalCloseEvents:$,imperativeModeOnly:j=!1,style:D,position:q,isOpen:H,disableStyleInjection:M=!1,border:W,opacity:P,arrowColor:F,setIsOpen:K,afterShow:U,afterHide:X,role:Y="tooltip"},G)=>{const[V,Z]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(n),[J,Q]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(s),[ee,te]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(v),[oe,le]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(p),[re,ne]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(m),[ce,ie]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(E),[se,ae]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(g),[de,ue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_),[pe,ve]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(A),[me,fe]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(f),[ye,he]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(h),[we,be]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(b),[Se,Ee]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),ge=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(M),{anchorRefs:_e,activeAnchor:Ae}=k(t),Oe=e=>null==e?void 0:e.getAttributeNames().reduce(((t,o)=>{var l;if(o.startsWith("data-tooltip-")){t[o.replace(/^data-tooltip-/,"")]=null!==(l=null==e?void 0:e.getAttribute(o))&&void 0!==l?l:null}return t}),{}),Te=e=>{const t={place:e=>{var t;te(null!==(t=e)&&void 0!==t?t:v)},content:e=>{Z(null!=e?e:n)},html:e=>{Q(null!=e?e:s)},variant:e=>{var t;le(null!==(t=e)&&void 0!==t?t:p)},offset:e=>{ne(null===e?m:Number(e))},wrapper:e=>{var t;fe(null!==(t=e)&&void 0!==t?t:f)},events:e=>{const t=null==e?void 0:e.split(" ");he(null!=t?t:h)},"position-strategy":e=>{var t;be(null!==(t=e)&&void 0!==t?t:b)},"delay-show":e=>{ie(null===e?E:Number(e))},"delay-hide":e=>{ae(null===e?g:Number(e))},float:e=>{ue(null===e?_:"true"===e)},hidden:e=>{ve(null===e?A:"true"===e)}};Object.values(t).forEach((e=>e(null))),Object.entries(e).forEach((([e,o])=>{var l;null===(l=t[e])||void 0===l||l.call(t,o)}))};(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{Z(n)}),[n]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{Q(s)}),[s]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{te(v)}),[v]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{le(p)}),[p]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ne(m)}),[m]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ie(E)}),[E]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ae(g)}),[g]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ue(_)}),[_]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ve(A)}),[A]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{be(b)}),[b]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ge.current!==M&&console.warn("[react-tooltip] Do not change `disableStyleInjection` dynamically.")}),[M]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{"undefined"!=typeof window&&window.dispatchEvent(new CustomEvent("react-tooltip-inject-styles",{detail:{disableCore:"core"===M,disableBase:M}}))}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{var e;const o=new Set(_e);let n=r;if(!n&&t&&(n=`[data-tooltip-id='${t}']`),n)try{document.querySelectorAll(n).forEach((e=>{o.add({current:e})}))}catch(e){console.warn(`[react-tooltip] "${n}" is not a valid CSS selector`)}const c=document.querySelector(`[id='${l}']`);if(c&&o.add({current:c}),!o.size)return()=>null;const i=null!==(e=null!=Se?Se:c)&&void 0!==e?e:Ae.current,s=new MutationObserver((e=>{e.forEach((e=>{var t;if(!i||"attributes"!==e.type||!(null===(t=e.attributeName)||void 0===t?void 0:t.startsWith("data-tooltip-")))return;const o=Oe(i);Te(o)}))})),a={attributes:!0,childList:!1,subtree:!1};if(i){const e=Oe(i);Te(e),s.observe(i,a)}return()=>{s.disconnect()}}),[_e,Ae,Se,l,r]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{(null==D?void 0:D.border)&&console.warn("[react-tooltip] Do not set `style.border`. Use `border` prop instead."),W&&!z("border",`${W}`)&&console.warn(`[react-tooltip] "${W}" is not a valid \`border\`.`),(null==D?void 0:D.opacity)&&console.warn("[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead."),P&&!z("opacity",`${P}`)&&console.warn(`[react-tooltip] "${P}" is not a valid \`opacity\`.`)}),[]);let ke=y;const Le=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);if(a){const t=a({content:null!=V?V:null,activeAnchor:Se});ke=t?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:Le,className:"react-tooltip-content-wrapper"},t):null}else V&&(ke=V);J&&(ke=react__WEBPACK_IMPORTED_MODULE_0__.createElement(B,{content:J}));const Ce={forwardRef:G,id:t,anchorId:l,anchorSelect:r,className:d,classNameArrow:u,content:ke,contentWrapperRef:Le,place:ee,variant:oe,offset:re,wrapper:me,events:ye,openOnClick:w,positionStrategy:we,middlewares:S,delayShow:ce,delayHide:se,float:de,hidden:pe,noArrow:O,clickable:T,closeOnEsc:L,closeOnScroll:C,closeOnResize:R,openEvents:x,closeEvents:N,globalCloseEvents:$,imperativeModeOnly:j,style:D,position:q,isOpen:H,border:W,opacity:P,arrowColor:F,setIsOpen:K,afterShow:U,afterHide:X,activeAnchor:Se,setActiveAnchor:e=>Ee(e),role:Y};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(I,{...Ce})}));"undefined"!=typeof window&&window.addEventListener("react-tooltip-inject-styles",(e=>{e.detail.disableCore||S({css:`:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9;--rt-transition-show-delay:0.15s;--rt-transition-closing-delay:0.15s}.core-styles-module_tooltip__3vRRp{position:absolute;top:0;left:0;pointer-events:none;opacity:0;will-change:opacity}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{opacity:var(--rt-opacity);transition:opacity var(--rt-transition-show-delay)ease-out}.core-styles-module_closing__sGnxF{opacity:0;transition:opacity var(--rt-transition-closing-delay)ease-in}`,type:"core"}),e.detail.disableBase||S({css:`
.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px}[class*='react-tooltip__place-top']>.styles-module_arrow__K0L3T{transform:rotate(45deg)}[class*='react-tooltip__place-right']>.styles-module_arrow__K0L3T{transform:rotate(135deg)}[class*='react-tooltip__place-bottom']>.styles-module_arrow__K0L3T{transform:rotate(225deg)}[class*='react-tooltip__place-left']>.styles-module_arrow__K0L3T{transform:rotate(315deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}`,type:"base"})}));


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),
/* harmony export */   __assign: () => (/* binding */ __assign),
/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),
/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),
/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),
/* harmony export */   __await: () => (/* binding */ __await),
/* harmony export */   __awaiter: () => (/* binding */ __awaiter),
/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),
/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),
/* harmony export */   __createBinding: () => (/* binding */ __createBinding),
/* harmony export */   __decorate: () => (/* binding */ __decorate),
/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),
/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),
/* harmony export */   __exportStar: () => (/* binding */ __exportStar),
/* harmony export */   __extends: () => (/* binding */ __extends),
/* harmony export */   __generator: () => (/* binding */ __generator),
/* harmony export */   __importDefault: () => (/* binding */ __importDefault),
/* harmony export */   __importStar: () => (/* binding */ __importStar),
/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),
/* harmony export */   __metadata: () => (/* binding */ __metadata),
/* harmony export */   __param: () => (/* binding */ __param),
/* harmony export */   __propKey: () => (/* binding */ __propKey),
/* harmony export */   __read: () => (/* binding */ __read),
/* harmony export */   __rest: () => (/* binding */ __rest),
/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),
/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),
/* harmony export */   __spread: () => (/* binding */ __spread),
/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),
/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),
/* harmony export */   __values: () => (/* binding */ __values),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */

var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
  return extendStatics(d, b);
};

function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() { this.constructor = d; }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
  __assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
  }
  return __assign.apply(this, arguments);
}

function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
              t[p[i]] = s[p[i]];
      }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _, done = false;
  for (var i = decorators.length - 1; i >= 0; i--) {
      var context = {};
      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
      for (var p in contextIn.access) context.access[p] = contextIn.access[p];
      context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
      var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
      if (kind === "accessor") {
          if (result === void 0) continue;
          if (result === null || typeof result !== "object") throw new TypeError("Object expected");
          if (_ = accept(result.get)) descriptor.get = _;
          if (_ = accept(result.set)) descriptor.set = _;
          if (_ = accept(result.init)) initializers.unshift(_);
      }
      else if (_ = accept(result)) {
          if (kind === "field") initializers.unshift(_);
          else descriptor[key] = _;
      }
  }
  if (target) Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
};

function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i = 0; i < initializers.length; i++) {
      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
  }
  return useValue ? value : void 0;
};

function __propKey(x) {
  return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
  return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
  return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
      function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
  function verb(n) { return function (v) { return step([n, v]); }; }
  function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
              case 0: case 1: t = op; break;
              case 4: _.label++; return { value: op[1], done: false };
              case 5: _.label++; y = op[1]; op = [0]; continue;
              case 7: op = _.ops.pop(); _.trys.pop(); continue;
              default:
                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                  if (t[2]) _.ops.pop();
                  _.trys.pop(); continue;
          }
          op = body.call(thisArg, _);
      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
  }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
  }
  Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
      next: function () {
          if (o && i >= o.length) o = void 0;
          return { value: o && o[i++], done: !o };
      }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o), r, ar = [], e;
  try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  }
  catch (error) { e = { error: error }; }
  finally {
      try {
          if (r && !r.done && (m = i["return"])) m.call(i);
      }
      finally { if (e) throw e.error; }
  }
  return ar;
}

/** @deprecated */
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
      ar = ar.concat(__read(arguments[i]));
  return ar;
}

/** @deprecated */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
          r[k] = a[j];
  return r;
}

function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
      }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
  function fulfill(value) { resume("next", value); }
  function reject(value) { resume("throw", value); }
  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
  return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
  Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
}

function __importDefault(mod) {
  return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}

function __addDisposableResource(env, value, async) {
  if (value !== null && value !== void 0) {
    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
    var dispose;
    if (async) {
        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
        dispose = value[Symbol.asyncDispose];
    }
    if (dispose === void 0) {
        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
        dispose = value[Symbol.dispose];
    }
    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
    env.stack.push({ value: value, dispose: dispose, async: async });
  }
  else if (async) {
    env.stack.push({ async: true });
  }
  return value;
}

var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
  var e = new Error(message);
  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function __disposeResources(env) {
  function fail(e) {
    env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
    env.hasError = true;
  }
  function next() {
    while (env.stack.length) {
      var rec = env.stack.pop();
      try {
        var result = rec.dispose && rec.dispose.call(rec.value);
        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
      }
      catch (e) {
          fail(e);
      }
    }
    if (env.hasError) throw env.error;
  }
  return next();
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __createBinding,
  __exportStar,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn,
  __addDisposableResource,
  __disposeResources,
});


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_tooltip_dist_react_tooltip_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-tooltip/dist/react-tooltip.css */ "./node_modules/react-tooltip/dist/react-tooltip.min.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.css */ "./src/index.css");
/* harmony import */ var _scripts_QuoteView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/QuoteView */ "./src/scripts/QuoteView.js");
/* harmony import */ var _scripts_products_acrylic_LaserCutAcrylic_LaserCutAcrylic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/products/acrylic/LaserCutAcrylic/LaserCutAcrylic */ "./src/scripts/products/acrylic/LaserCutAcrylic/LaserCutAcrylic.js");
/* harmony import */ var _scripts_products_acrylic_LayeredAcrylic_LayeredAcrylic__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scripts/products/acrylic/LayeredAcrylic/LayeredAcrylic */ "./src/scripts/products/acrylic/LayeredAcrylic/LayeredAcrylic.js");
/* harmony import */ var _scripts_products_acrylic_MetalLaminate_MetalLaminate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scripts/products/acrylic/MetalLaminate/MetalLaminate */ "./src/scripts/products/acrylic/MetalLaminate/MetalLaminate.js");
/* harmony import */ var _scripts_products_acrylic_UvPrintedAcrylic_UvPrintedAcrylic__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./scripts/products/acrylic/UvPrintedAcrylic/UvPrintedAcrylic */ "./src/scripts/products/acrylic/UvPrintedAcrylic/UvPrintedAcrylic.js");
/* harmony import */ var _scripts_products_custom_CustomProject__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./scripts/products/custom/CustomProject */ "./src/scripts/products/custom/CustomProject.js");
/* harmony import */ var _scripts_products_metal_channel_TrimLessBackLit_TrimLessBackLit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./scripts/products/metal-channel/TrimLessBackLit/TrimLessBackLit */ "./src/scripts/products/metal-channel/TrimLessBackLit/TrimLessBackLit.js");
/* harmony import */ var _scripts_products_metal_channel_TrimLessFrontAndBackLit_TrimLessFrontAndBackLit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./scripts/products/metal-channel/TrimLessFrontAndBackLit/TrimLessFrontAndBackLit */ "./src/scripts/products/metal-channel/TrimLessFrontAndBackLit/TrimLessFrontAndBackLit.js");
/* harmony import */ var _scripts_products_metal_channel_TrimLessFrontLit_TrimLessFrontLit__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./scripts/products/metal-channel/TrimLessFrontLit/TrimLessFrontLit */ "./src/scripts/products/metal-channel/TrimLessFrontLit/TrimLessFrontLit.js");
/* harmony import */ var _scripts_products_metal_FabricatedStainless_FabricatedStainless__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./scripts/products/metal/FabricatedStainless/FabricatedStainless */ "./src/scripts/products/metal/FabricatedStainless/FabricatedStainless.js");
/* harmony import */ var _scripts_products_metal_LaserCutAluminum_LaserCutAluminum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./scripts/products/metal/LaserCutAluminum/LaserCutAluminum */ "./src/scripts/products/metal/LaserCutAluminum/LaserCutAluminum.js");
/* harmony import */ var _scripts_products_metal_LaserCutStainless_LaserCutStainless__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./scripts/products/metal/LaserCutStainless/LaserCutStainless */ "./src/scripts/products/metal/LaserCutStainless/LaserCutStainless.js");
/* harmony import */ var _scripts_products_pvc_PVCMetalLaminate_PVCMetalLaminate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./scripts/products/pvc/PVCMetalLaminate/PVCMetalLaminate */ "./src/scripts/products/pvc/PVCMetalLaminate/PVCMetalLaminate.js");
/* harmony import */ var _scripts_products_pvc_PVCPainted_PVCPainted__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./scripts/products/pvc/PVCPainted/PVCPainted */ "./src/scripts/products/pvc/PVCPainted/PVCPainted.js");
/* harmony import */ var _scripts_products_pvc_PVCUv_PVCUv__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./scripts/products/pvc/PVCUv/PVCUv */ "./src/scripts/products/pvc/PVCUv/PVCUv.js");




















if (document.querySelector('#laserCutAcrylic')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_acrylic_LaserCutAcrylic_LaserCutAcrylic__WEBPACK_IMPORTED_MODULE_5__["default"], null), document.querySelector('#laserCutAcrylic'));
}
if (document.querySelector('#pvcMetalLaminate')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_pvc_PVCMetalLaminate_PVCMetalLaminate__WEBPACK_IMPORTED_MODULE_16__["default"], null), document.querySelector('#pvcMetalLaminate'));
}
if (document.querySelector('#pvcPainted')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_pvc_PVCPainted_PVCPainted__WEBPACK_IMPORTED_MODULE_17__["default"], null), document.querySelector('#pvcPainted'));
}
if (document.querySelector('#pvcUv')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_pvc_PVCUv_PVCUv__WEBPACK_IMPORTED_MODULE_18__["default"], null), document.querySelector('#pvcUv'));
}
if (document.querySelector('#layeredAcrylic')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_acrylic_LayeredAcrylic_LayeredAcrylic__WEBPACK_IMPORTED_MODULE_6__["default"], null), document.querySelector('#layeredAcrylic'));
}
if (document.querySelector('#laserCutAluminum')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_metal_LaserCutAluminum_LaserCutAluminum__WEBPACK_IMPORTED_MODULE_14__["default"], null), document.querySelector('#laserCutAluminum'));
}
if (document.querySelector('#uvPrintedAcrylic')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_acrylic_UvPrintedAcrylic_UvPrintedAcrylic__WEBPACK_IMPORTED_MODULE_8__["default"], null), document.querySelector('#uvPrintedAcrylic'));
}
if (document.querySelector('#metalLaminateAcrylic')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_acrylic_MetalLaminate_MetalLaminate__WEBPACK_IMPORTED_MODULE_7__["default"], null), document.querySelector('#metalLaminateAcrylic'));
}
if (document.querySelector('#laserCutStainless')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_metal_LaserCutStainless_LaserCutStainless__WEBPACK_IMPORTED_MODULE_15__["default"], null), document.querySelector('#laserCutStainless'));
}
if (document.querySelector('#metalChannelTrimlessFrontLit')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_metal_channel_TrimLessFrontLit_TrimLessFrontLit__WEBPACK_IMPORTED_MODULE_12__["default"], null), document.querySelector('#metalChannelTrimlessFrontLit'));
}
if (document.querySelector('#metalChannelTrimlessFrontAndBackLit')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_metal_channel_TrimLessFrontAndBackLit_TrimLessFrontAndBackLit__WEBPACK_IMPORTED_MODULE_11__["default"], null), document.querySelector('#metalChannelTrimlessFrontAndBackLit'));
}
if (document.querySelector('#metalChannelTrimlessBackLit')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_metal_channel_TrimLessBackLit_TrimLessBackLit__WEBPACK_IMPORTED_MODULE_10__["default"], null), document.querySelector('#metalChannelTrimlessBackLit'));
}
if (document.querySelector('#metalFabricatedStainless')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_metal_FabricatedStainless_FabricatedStainless__WEBPACK_IMPORTED_MODULE_13__["default"], null), document.querySelector('#metalFabricatedStainless'));
}
if (document.querySelector('#quoteView')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_QuoteView__WEBPACK_IMPORTED_MODULE_4__["default"], null), document.querySelector('#quoteView'));
}
if (document.querySelector('#customProject')) {
  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_scripts_products_custom_CustomProject__WEBPACK_IMPORTED_MODULE_9__["default"], null), document.querySelector('#customProject'));
}
})();

/******/ })()
;
//# sourceMappingURL=index.js.map